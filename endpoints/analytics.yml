openapi: 3.0.1
info:
  title: Stats API Analytics Section
  description: Operations pertaining to field tracking and analytics
  version: 1.0.0

paths:
  /api/v1/game/{gamePk}/{guid}/contextMetricsAverages:
    get:
      tags:
        - analytics
      summary: Get a json file containing raw coordinate data and refined calculated metrics.
      description: 'Returns a json file containing raw coordinate data and refined calculated metrics.<br/><br/>This responses can be very large, so it is strongly recommended that you pass "Accept-Encoding: gzip" as a header to have the responses compressed.'
      operationId: contextMetricsWithAverages
      parameters:
        - name: gamePk
          in: path
          description: Unique Primary Key Representing a Game
          required: true
          schema:
            type: integer
            format: int32
        - name: guid
          in: path
          description: Unique identifier for a play within a game
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                type: array
                items:
                  $ref: '../_schemas/schemas.yml#/components/schemas/CalculatedMetricRestObject'
      security:
        - basicAuth: []
        - bearerAuth: []
    post:
      tags:
        - analytics
      summary: Get a json file containing raw coordinate data and refined calculated metrics.
      description: 'Returns a json file containing raw coordinate data and refined calculated metrics.<br/><br/>This responses can be very large, so it is strongly recommended that you pass "Accept-Encoding: gzip" as a header to have the responses compressed.'
      operationId: contextMetricsWithAveragesPost
      parameters:
        - name: gamePk
          in: path
          description: Unique Primary Key Representing a Game
          required: true
          schema:
            type: integer
            format: int32
        - name: guid
          in: path
          description: Unique identifier for a play within a game
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                type: array
                items:
                  $ref: '../_schemas/schemas.yml#/components/schemas/CalculatedMetricRestObject'
      security:
        - basicAuth: []
        - bearerAuth: []
  /api/v1/game/{gamePk}/{guid}/homeRunBallparks:
    get:
      tags:
        - analytics
      summary: Get if the play is a home run is each park for a specific play.
      description: 'Returns a json file containing raw coordinate data and refined calculated metrics.<br/><br/>This responses can be very large, so it is strongly recommended that you pass "Accept-Encoding: gzip" as a header to have the responses compressed.'
      operationId: homeRunBallparks
      parameters:
        - name: gamePk
          in: path
          description: Unique Primary Key Representing a Game
          required: true
          schema:
            type: integer
            format: int32
        - name: guid
          in: path
          description: Unique identifier for a play within a game
          required: true
          schema:
            type: string
        - name: isHomeRunParks
          in: query
          required: true
          schema:
            type: boolean
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '../_schemas/schemas.yml#/components/schemas/VenuesRestObject'
  /api/v1/game/{gamePk}/{guid}/contextMetrics:
    get:
      tags:
        - analytics
      summary: Get context metrics for a specific gamePk.
      description: 'Returns a json file containing raw coordinate data and refined calculated metrics.<br/><br/>This responses can be very large, so it is strongly recommended that you pass "Accept-Encoding: gzip" as a header to have the responses compressed.'
      operationId: contextMetrics
      parameters:
        - name: gamePk
          in: path
          description: Unique Primary Key Representing a Game
          required: true
          schema:
            type: integer
            format: int32
        - name: guid
          in: path
          description: Unique identifier for a play within a game
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                type: array
                items:
                  $ref: '../_schemas/schemas.yml#/components/schemas/CalculatedMetricRestObject'
      security:
        - basicAuth: []
        - bearerAuth: []
  /api/v1/game/{gamePk}/{guid}/analytics:
    get:
      tags:
        - analytics
      summary: Get Statcast data for a specific play.
      description: 'Returns a json file containing raw coordinate data and refined calculated metrics.<br/><br/>This responses can be very large, so it is strongly recommended that you pass "Accept-Encoding: gzip" as a header to have the responses compressed.'
      operationId: parsedJsonFormattedAnalytics
      parameters:
        - name: gamePk
          in: path
          description: Unique Primary Key Representing a Game
          required: true
          schema:
            type: integer
            format: int32
        - name: guid
          in: path
          description: Unique identifier for a play within a game
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '../_schemas/schemas.yml#/components/schemas/AnalyticsRestObject'
      security:
        - basicAuth: []
        - bearerAuth: []
  /api/v1/game/{gamePk}/guids:
    get:
      tags:
        - analytics
      summary: 'Get the GUIDs (plays) for a specific game. '
      operationId: gameGuids
      parameters:
        - name: gamePk
          in: path
          description: Unique Primary Key Representing a Game
          required: true
          schema:
            type: integer
            format: int32
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: gameModeId
          in: query
          description: 'Statcast game mode. Format: 0 = Batting Practive, 1 = Warmup 2 = Live'
          required: false
          schema:
            type: integer
            format: int32
        - name: isPitch
          in: query
          description: If there was a pitch
          required: false
          schema:
            type: boolean
        - name: isHit
          in: query
          description: If there was a hit ball tracked
          required: false
          schema:
            type: boolean
        - name: isPickoff
          in: query
          description: If there was a pickoff
          required: false
          schema:
            type: boolean
        - name: hasUpdates
          in: query
          description: True if updated by an auditor
          required: false
          schema:
            type: boolean
        - name: since
          in: query
          description: 'Returns all data that was created after the specified timestamp. Format: YYYY-MM-DDTHH:MM:SSZ'
          required: false
          schema:
            type: string
            format: date-time
        - name: updatedSince
          in: query
          description: 'Return data updated since a specified date. Format: YYYY-MM-DDTHH:MM:SSZ'
          required: false
          schema:
            type: string
            format: date-time
        - name: lastPlayTime
          in: query
          description: 'Returns all data that was created after the specified timestamp. Format: YYYY-MM-DDTHH:MM:SSZ'
          required: false
          schema:
            type: string
            format: date-time
        - name: lastUpdatedTime
          in: query
          description: 'Return data updated since a specified date. Format: YYYY-MM-DDTHH:MM:SSZ'
          required: false
          schema:
            type: string
            format: date-time
        - name: lastMetricsUpdatedTime
          in: query
          description: 'Return data updated since a specified date. Format: YYYY-MM-DDTHH:MM:SSZ'
          required: false
          schema:
            type: string
            format: date-time
        - name: lastAuditUpdatedTime
          in: query
          description: 'Return data updated since a specified date. Format: YYYY-MM-DDTHH:MM:SSZ'
          required: false
          schema:
            type: string
            format: date-time
        - name: lastVideoUpdatedTime
          in: query
          description: The last time SportyBot video was updated
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                type: array
                items:
                  $ref: '../_schemas/schemas.yml#/components/schemas/AnalyticsPlayMetadataRestObject'
      security:
        - basicAuth: []
        - bearerAuth: []
  /api/v1/game/lastPitch:
    get:
      tags:
        - analytics
      summary: Get the last pitch for a list of games
      operationId: gameLastPitch
      parameters:
        - name: gamePks
          in: query
          description: Unique Primary Key Representing a Game
          required: true
          schema:
            type: array
            items:
              type: integer
              format: int32
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                type: array
                items:
                  $ref: '../_schemas/schemas.yml#/components/schemas/AnalyticsPlayMetadataRestObject'
      security:
        - basicAuth: []
        - bearerAuth: []
  /api/v1/analytics/guids:
    get:
      tags:
        - analytics
      summary: 'Get the GUIDs (plays) for a specific game. '
      operationId: gameGuidsFromPostgresRange
      parameters:
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: gameModeId
          in: query
          description: 'Statcast game mode. Format: 0 = Batting Practive, 1 = Warmup 2 = Live'
          required: false
          schema:
            type: integer
            format: int32
        - name: isPitch
          in: query
          description: If there was a pitch
          required: false
          schema:
            type: boolean
        - name: isHit
          in: query
          description: If there was a hit ball tracked
          required: false
          schema:
            type: boolean
        - name: isPickoff
          in: query
          description: If there was a pickoff
          required: false
          schema:
            type: boolean
        - name: isNonStatcast
          in: query
          description: If non statcast games need to be included
          required: false
          schema:
            type: boolean
        - name: gamedayType
          in: query
          description: Indicates the level of Gameday (tracking, play-by-play, linescore, etc...)
          required: false
          schema:
            type: string
        - name: hasUpdates
          in: query
          description: True if updated by an auditor
          required: false
          schema:
            type: boolean
        - name: lastPlayTime
          in: query
          description: 'Returns all data that was created after the specified timestamp. Format: YYYY-MM-DDTHH:MM:SSZ'
          required: false
          schema:
            type: string
            format: date-time
        - name: lastUpdatedTime
          in: query
          description: 'Return data updated since a specified date. Format: YYYY-MM-DDTHH:MM:SSZ'
          required: false
          schema:
            type: string
            format: date-time
        - name: lastMetricsUpdatedTime
          in: query
          description: 'Return data updated since a specified date. Format: YYYY-MM-DDTHH:MM:SSZ'
          required: false
          schema:
            type: string
            format: date-time
        - name: lastAuditUpdatedTime
          in: query
          description: 'Return data updated since a specified date. Format: YYYY-MM-DDTHH:MM:SSZ'
          required: false
          schema:
            type: string
            format: date-time
        - name: lastVideoUpdatedTime
          in: query
          description: The last time SportyBot video was updated
          required: false
          schema:
            type: string
            format: date-time
        - name: gameDate
          in: query
          description: 'Date of Game. Format: YYYY-MM-DD'
          required: false
          schema:
            type: string
            format: date
        - name: sportId
          in: query
          description: Top level organization of a sport
          required: false
          schema:
            type: integer
            format: int32
        - name: gameType
          in: query
          description: Type of Game. Available types in /api/v1/gameTypes
          required: false
          schema:
            $ref: '../_schemas/schemas.yml#/components/schemas/GameTypeEnum'
        - name: trackingSystemOwner
          in: query
          description: Owner of the tracking system
          required: false
          schema:
            $ref: '../_schemas/schemas.yml#/components/schemas/TrackingSystemOwner'
        - name: season
          in: query
          description: Season of play
          required: false
          schema:
            type: string
        - name: sortBy
          in: query
          description: Sort the set of data by the specified field
          required: false
          schema:
            type: string
        - name: limit
          in: query
          description: Number of results to return
          required: false
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: The pointer to start for a return set; used for pagination
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '../_schemas/schemas.yml#/components/schemas/AnalyticsPlayMetadataWrapperRestObject'
      security:
        - basicAuth: []
        - bearerAuth: []
  /api/v1/analytics/game:
    get:
      tags:
        - analytics
      summary: Get all games by updated date.
      operationId: gameGuidsFromPostgresRangeByGame
      parameters:
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: gameModeId
          in: query
          description: 'Statcast game mode. Format: 0 = Batting Practive, 1 = Warmup 2 = Live'
          required: false
          schema:
            type: integer
            format: int32
        - name: isPitch
          in: query
          description: If there was a pitch
          required: false
          schema:
            type: boolean
        - name: isHit
          in: query
          description: If there was a hit ball tracked
          required: false
          schema:
            type: boolean
        - name: isPickoff
          in: query
          description: If there was a pickoff
          required: false
          schema:
            type: boolean
        - name: isNonStatcast
          in: query
          description: If non statcast games need to be included
          required: false
          schema:
            type: boolean
        - name: gamedayType
          in: query
          description: Indicates the level of Gameday (tracking, play-by-play, linescore, etc...)
          required: false
          schema:
            type: string
        - name: hasUpdates
          in: query
          description: True if updated by an auditor
          required: false
          schema:
            type: boolean
        - name: lastPlayTime
          in: query
          description: 'Returns all data that was created after the specified timestamp. Format: YYYY-MM-DDTHH:MM:SSZ'
          required: false
          schema:
            type: string
            format: date-time
        - name: lastVideoUpdatedTime
          in: query
          description: The last time SportyBot video was updated
          required: false
          schema:
            type: string
            format: date-time
        - name: lastUpdatedTime
          in: query
          description: 'Return data updated since a specified date. Format: YYYY-MM-DDTHH:MM:SSZ'
          required: false
          schema:
            type: string
            format: date-time
        - name: lastMetricsUpdatedTime
          in: query
          description: 'Return data updated since a specified date. Format: YYYY-MM-DDTHH:MM:SSZ'
          required: false
          schema:
            type: string
            format: date-time
        - name: lastAuditUpdatedTime
          in: query
          description: 'Return data updated since a specified date. Format: YYYY-MM-DDTHH:MM:SSZ'
          required: false
          schema:
            type: string
            format: date-time
        - name: gameDate
          in: query
          description: 'Date of Game. Format: YYYY-MM-DD'
          required: false
          schema:
            type: string
            format: date
        - name: sportId
          in: query
          description: Top level organization of a sport
          required: false
          schema:
            type: integer
            format: int32
        - name: gameType
          in: query
          description: Type of Game. Available types in /api/v1/gameTypes
          required: false
          schema:
            $ref: '../_schemas/schemas.yml#/components/schemas/GameTypeEnum'
        - name: season
          in: query
          description: Season of play
          required: false
          schema:
            type: string
        - name: trackingSystemOwner
          in: query
          description: Owner of the tracking system
          required: false
          schema:
            $ref: '../_schemas/schemas.yml#/components/schemas/TrackingSystemOwner'
        - name: sortBy
          in: query
          description: Sort the set of data by the specified field
          required: false
          schema:
            type: string
        - name: limit
          in: query
          description: Number of results to return
          required: false
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: The pointer to start for a return set; used for pagination
          required: false
          schema:
            type: integer
            format: int32
        - name: scheduleEventTypes
          in: query
          description: Comma delimited list of type of event types
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              $ref: '../_schemas/schemas.yml#/components/schemas/ScheduleEventTypes'
      responses:
        '200':
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '../_schemas/schemas.yml#/components/schemas/AnalyticsGameMetadataWrapperRestObject'
      security:
        - basicAuth: []
        - bearerAuth: []
