openapi: 3.0.1
info:
  title: Stats API Documentation
  description: Official API for Major League Baseball.
  version: 2.0.0
servers:
  - url: https://statsapi.mlb.com
    description: Production
  - url: https://beta-statsapi.mlb.com
    description: Beta
  - url: https://qa-statsapi.mlb.com
    description: QA
  - url: http://localhost:8080
    description: Local
tags:
  - name: analytics
    description: Operations pertaining to field tracking and analytics
    x-tag-expanded: 'true'
  - name: Attendance
  - name: Awards
    description: Operations pertaining to awards
  - name: Bat Tracking
    description: Operations pertaining to bat tracking data
  - name: Biomechanics
    description: Operations pertaining to biomechanical data
  - name: Broadcast
    description: Operations pertaining to broadcasts
  - name: Closed
    description: Collapsed tags
    x-tag-expanded: 'false'
  - name: Conference
    description: Operations pertaining to conferences
  - name: Division
    description: Operations pertaining to divisions
  - name: Draft
    description: Operations pertaining to MLB BaseballDraft
  - name: Game
    description: Operations pertaining to games
  - name: Game Pace
  - name: High/Low
    description: Operations pertaining to high/low stats
  - name: Homerun Derby
    description: Operations pertaining to home run derby
  - name: Job
    description: Operations pertaining to jobs
  - name: League
    description: Operations pertaining to leagues
  - name: Milestones
    description: Operations pertaining to milestones
  - name: Misc
    description: Config elements
  - name: Person
    description: Operations pertaining to players
  - name: Predictions
  - name: Reviews
  - name: Schedule
    description: Operations pertaining to schedules
    x-tag-expanded: 'false'
  - name: Season
    description: Operations pertaining to seasons
  - name: Skeletal
    description: Operations pertaining to skeletal data
  - name: Sports
    description: Operations pertaining to sports
  - name: Standings
    description: Operations pertaining to teams
  - name: Stats
    description: Operations pertaining to stats
  - name: Streaks
    description: Endpoints for stats streaks
  - name: Teams
    description: Operations pertaining to teams
  - name: Transactions
    description: Operations pertaining to transactions
  - name: Uniforms
    description: Operations pertaining to uniforms
  - name: Venues
    description: Operations pertaining to venues
  - name: Weather
    description: Operations pertaining to weather data
paths:
  # Analytics
  /api/v1/game/{gamePk}/{guid}/contextMetricsAverages:
    $ref: './endpoints/analytics.yml#/paths/~1api~1v1~1game~1{gamePk}~1{guid}~1contextMetricsAverages'
  /api/v1/game/{gamePk}/{guid}/homeRunBallparks:
    $ref: './endpoints/analytics.yml#/paths/~1api~1v1~1game~1{gamePk}~1{guid}~1homeRunBallparks'
  /api/v1/game/{gamePk}/{guid}/contextMetrics:
    $ref: './endpoints/analytics.yml#/paths/~1api~1v1~1game~1{gamePk}~1{guid}~1contextMetrics'
  /api/v1/game/{gamePk}/{guid}/analytics:
    $ref: './endpoints/analytics.yml#/paths/~1api~1v1~1game~1{gamePk}~1{guid}~1analytics'
  /api/v1/game/{gamePk}/guids:
    $ref: './endpoints/analytics.yml#/paths/~1api~1v1~1game~1{gamePk}~1guids'
  /api/v1/game/lastPitch:
    $ref: './endpoints/analytics.yml#/paths/~1api~1v1~1game~1lastPitch'
  /api/v1/analytics/guids:
    $ref: './endpoints/analytics.yml#/paths/~1api~1v1~1analytics~1guids'
  /api/v1/analytics/game:
    $ref: './endpoints/analytics.yml#/paths/~1api~1v1~1analytics~1game'

  # Attendance
  /api/v1/attendance:
    $ref: './endpoints/attendance.yml#/paths/~1api~1v1~1attendance'

  # Awards
  /api/v1/awards/{awardId}/recipients:
    $ref: './endpoints/awards.yml#/paths/~1api~1v1~1awards~1{awardId}~1recipients'
  /api/v1/awards:
    $ref: './endpoints/awards.yml#/paths/~1api~1v1~1awards'
  /api/v1/awards/{awardId}:
    $ref: './endpoints/awards.yml#/paths/~1api~1v1~1awards~1{awardId}'

  # Bat Tracking
  /api/v1/batTracking/game/{gamePk}/{playId}:
    $ref: './endpoints/bat_tracking.yml#/paths/~1api~1v1~1batTracking~1game~1{gamePk}~1{playId}'

  # Biomechanics
  /api/v1/game/{gamePk}/{playId}/analytics/biomechanics/{positionId}:
    $ref: './endpoints/biomechanics.yml#/paths/~1api~1v1~1game~1{gamePk}~1{playId}~1analytics~1biomechanics~1{positionId}'

  # Broadcast
  /api/v1/broadcasters:
    $ref: './endpoints/broadcast.yml#/paths/~1api~1v1~1broadcasters'
  /api/v1/broadcast:
    $ref: './endpoints/broadcast.yml#/paths/~1api~1v1~1broadcast'

  # Closed
  # ???

  # Conference
  /api/v1/conferences:
    $ref: './endpoints/conference.yml#/paths/~1api~1v1~1conferences'
  /api/v1/conferences/{conferenceId}:
    $ref: './endpoints/conference.yml#/paths/~1api~1v1~1conferences~1{conferenceId}'

  # Division
  /api/v1/divisions:
    $ref: './endpoints/division.yml#/paths/~1api~1v1~1divisions'
  /api/v1/divisions/{divisionId}:
    $ref: './endpoints/division.yml#/paths/~1api~1v1~1divisions~1{divisionId}'

  # Draft
  /api/v1/draft/{year}/latest:
    $ref: './endpoints/draft.yml#/paths/~1api~1v1~1draft~1{year}~1latest'
  /api/v1/draft/prospects:
    $ref: './endpoints/draft.yml#/paths/~1api~1v1~1draft~1prospects'
  /api/v1/draft/prospects/{year}:
    $ref: './endpoints/draft.yml#/paths/~1api~1v1~1draft~1prospects~1{year}'
  /api/v1/draft:
    $ref: './endpoints/draft.yml#/paths/~1api~1v1~1draft'
  /api/v1/draft/{year}:
    $ref: './endpoints/draft.yml#/paths/~1api~1v1~1draft~1{year}'

  # Game Pace
  /api/v1/gamePace:
    $ref: './endpoints/game_pace.yml#/paths/~1api~1v1~1gamePace'

  # Game
  /api/v1/game/{game_pk}/playByPlay:
    $ref: './endpoints/game.yml#/paths/~1api~1v1~1game~1{game_pk}~1playByPlay'
  /api/v1/game/{game_pk}/linescore:
    $ref: './endpoints/game.yml#/paths/~1api~1v1~1game~1{game_pk}~1linescore'
  /api/v1/game/{game_pk}/feed/color:
    $ref: './endpoints/game.yml#/paths/~1api~1v1~1game~1{game_pk}~1feed~1color'
  /api/v1/game/{game_pk}/feed/color/timestamps:
    $ref: './endpoints/game.yml#/paths/~1api~1v1~1game~1{game_pk}~1feed~1color~1timestamps'
  /api/v1/game/{game_pk}/content:
    $ref: './endpoints/game.yml#/paths/~1api~1v1~1game~1{game_pk}~1content'
  /api/v1/game/{game_pk}/boxscore:
    $ref: './endpoints/game.yml#/paths/~1api~1v1~1game~1{game_pk}~1boxscore'
  /api/v1/game/{gamePk}/withMetrics:
    $ref: './endpoints/game.yml#/paths/~1api~1v1~1game~1{gamePk}~1withMetrics'
  /api/v1/game/{gamePk}/winProbability:
    $ref: './endpoints/game.yml#/paths/~1api~1v1~1game~1{gamePk}~1winProbability'
  /api/v1/game/{gamePk}/contextMetrics:
    $ref: './endpoints/game.yml#/paths/~1api~1v1~1game~1{gamePk}~1contextMetrics'
  /api/v1/game/changes:
    $ref: './endpoints/game.yml#/paths/~1api~1v1~1game~1changes'
  /api/v1.1/game/{game_pk}/feed/live:
    $ref: './endpoints/game.yml#/paths/~1api~1v1.1~1game~1{game_pk}~1feed~1live'
  /api/v1.1/game/{game_pk}/feed/live/timestamps:
    $ref: './endpoints/game.yml#/paths/~1api~1v1.1~1game~1{game_pk}~1feed~1live~1timestamps'
  /api/v1.1/game/{game_pk}/feed/live/diffPatch:
    $ref: './endpoints/game.yml#/paths/~1api~1v1.1~1game~1{game_pk}~1feed~1live~1diffPatch'

  # High Low
  /api/v1/highLow/{highLowType}:
    $ref: './endpoints/high_low.yml#/paths/~1api~1v1~1highLow~1{highLowType}'
  /api/v1/highLow/types:
    $ref: './endpoints/high_low.yml#/paths/~1api~1v1~1highLow~1types'

  # Homerun Derby
  /api/v1/homeRunDerby/{gamePk}/pool:
    $ref: './endpoints/homerun_derby.yml#/paths/~1api~1v1~1homeRunDerby~1{gamePk}~1pool'
  /api/v1/homeRunDerby/pool:
    $ref: './endpoints/homerun_derby.yml#/paths/~1api~1v1~1homeRunDerby~1pool'
  /api/v1/homeRunDerby/{gamePk}/mixed:
    $ref: './endpoints/homerun_derby.yml#/paths/~1api~1v1~1homeRunDerby~1{gamePk}~1mixed'
  /api/v1/homeRunDerby/mixed:
    $ref: './endpoints/homerun_derby.yml#/paths/~1api~1v1~1homeRunDerby~1mixed'
  /api/v1/homeRunDerby/{gamePk}:
    $ref: './endpoints/homerun_derby.yml#/paths/~1api~1v1~1homeRunDerby~1{gamePk}'
  /api/v1/homeRunDerby:
    $ref: './endpoints/homerun_derby.yml#/paths/~1api~1v1~1homeRunDerby'
  /api/v1/homeRunDerby/{gamePk}/bracket:
    $ref: './endpoints/homerun_derby.yml#/paths/~1api~1v1~1homeRunDerby~1{gamePk}~1bracket'
  /api/v1/homeRunDerby/bracket:
    $ref: './endpoints/homerun_derby.yml#/paths/~1api~1v1~1homeRunDerby~1bracket'

  # Job
  /api/v1/jobs:
    $ref: './endpoints/job.yml#/paths/~1api~1v1~1jobs'
  /api/v1/jobs/umpires:
    $ref: './endpoints/job.yml#/paths/~1api~1v1~1jobs~1umpires'
  /api/v1/jobs/umpires/games/{umpireId}:
    $ref: './endpoints/job.yml#/paths/~1api~1v1~1jobs~1umpires~1games~1{umpireId}'
  /api/v1/jobs/officialScorers:
    $ref: './endpoints/job.yml#/paths/~1api~1v1~1jobs~1officialScorers'
  /api/v1/jobs/datacasters:
    $ref: './endpoints/job.yml#/paths/~1api~1v1~1jobs~1datacasters'

  # League
  /api/v1/league/{leagueId}/allStarWriteIns:
    $ref: './endpoints/league.yml#/paths/~1api~1v1~1league~1{leagueId}~1allStarWriteIns'
  /api/v1/leagues/{leagueId}/allStarWriteIns:
    $ref: './endpoints/league.yml#/paths/~1api~1v1~1leagues~1{leagueId}~1allStarWriteIns'
  /api/v1/league/{leagueId}/allStarFinalVote:
    $ref: './endpoints/league.yml#/paths/~1api~1v1~1league~1{leagueId}~1allStarFinalVote'
  /api/v1/leagues/{leagueId}/allStarFinalVote:
    $ref: './endpoints/league.yml#/paths/~1api~1v1~1leagues~1{leagueId}~1allStarFinalVote'
  /api/v1/league/allStarBallot:
    $ref: './endpoints/league.yml#/paths/~1api~1v1~1league~1allStarBallot'
  /api/v1/league/{leagueId}/allStarBallot:
    $ref: './endpoints/league.yml#/paths/~1api~1v1~1league~1{leagueId}~1allStarBallot'
  /api/v1/leagues/allStarBallot:
    $ref: './endpoints/league.yml#/paths/~1api~1v1~1leagues~1allStarBallot'
  /api/v1/leagues/{leagueId}/allStarBallot:
    $ref: './endpoints/league.yml#/paths/~1api~1v1~1leagues~1{leagueId}~1allStarBallot'
  /api/v1/league:
    $ref: './endpoints/league.yml#/paths/~1api~1v1~1league'
  /api/v1/league/{leagueId}:
    $ref: './endpoints/league.yml#/paths/~1api~1v1~1league~1{leagueId}'
  /api/v1/leagues:
    $ref: './endpoints/league.yml#/paths/~1api~1v1~1leagues'
  /api/v1/leagues/{leagueId}:
    $ref: './endpoints/league.yml#/paths/~1api~1v1~1leagues~1{leagueId}'

  # Milestones
  /api/v1/milestones:
    $ref: './endpoints/milestones.yml#/paths/~1api~1v1~1milestones'
  /api/v1/milestoneTypes:
    $ref: './endpoints/milestones.yml#/paths/~1api~1v1~1milestoneTypes'
  /api/v1/milestoneStatistics:
    $ref: './endpoints/milestones.yml#/paths/~1api~1v1~1milestoneStatistics'
  /api/v1/milestoneLookups:
    $ref: './endpoints/milestones.yml#/paths/~1api~1v1~1milestoneLookups'
  /api/v1/milestoneDurations:
    $ref: './endpoints/milestones.yml#/paths/~1api~1v1~1milestoneDurations'
  /api/v1/achievementStatuses:
    $ref: './endpoints/milestones.yml#/paths/~1api~1v1~1achievementStatuses'

  # Misc
  /api/v1/gameStatus:
    $ref: './endpoints/misc.yml#/paths/~1api~1v1~1gameStatus'
  /api/v1/gamedayTypes:
    $ref: './endpoints/misc.yml#/paths/~1api~1v1~1gamedayTypes'
  /api/v1/gameTypes:
    $ref: './endpoints/misc.yml#/paths/~1api~1v1~1gameTypes'
  /api/v1/freeGameTypes:
    $ref: './endpoints/misc.yml#/paths/~1api~1v1~1freeGameTypes'
  /api/v1/baseballStats:
    $ref: './endpoints/misc.yml#/paths/~1api~1v1~1baseballStats'
  /api/v1/stats/search/stats:
    $ref: './endpoints/misc.yml#/paths/~1api~1v1~1stats~1search~1stats'
  /api/v1/stats/search/params:
    $ref: './endpoints/misc.yml#/paths/~1api~1v1~1stats~1search~1params'
  /api/v1/stats/search/groupByTypes:
    $ref: './endpoints/misc.yml#/paths/~1api~1v1~1stats~1search~1groupByTypes'
  /api/v1/stats/search/config:
    $ref: './endpoints/misc.yml#/paths/~1api~1v1~1stats~1search~1config'
  /api/v1/jobTypes:
    $ref: './endpoints/misc.yml#/paths/~1api~1v1~1jobTypes'
  /api/v1/windDirection:
    $ref: './endpoints/misc.yml#/paths/~1api~1v1~1windDirection'
  /api/v1/weatherTrajectoryConfidences:
    $ref: './endpoints/misc.yml#/paths/~1api~1v1~1weatherTrajectoryConfidences'
  /api/v1/violationTypes:
    $ref: './endpoints/misc.yml#/paths/~1api~1v1~1violationTypes'
  /api/v1/videoResolutionTypes:
    $ref: './endpoints/misc.yml#/paths/~1api~1v1~1videoResolutionTypes'
  /api/v1/transactionTypes:
    $ref: './endpoints/misc.yml#/paths/~1api~1v1~1transactionTypes'
  /api/v1/trackingVersions:
    $ref: './endpoints/misc.yml#/paths/~1api~1v1~1trackingVersions'
  /api/v1/trackingVendors:
    $ref: './endpoints/misc.yml#/paths/~1api~1v1~1trackingVendors'
  /api/v1/trackingSystemOwners:
    $ref: './endpoints/misc.yml#/paths/~1api~1v1~1trackingSystemOwners'
  /api/v1/trackingSoftwareVersions:
    $ref: './endpoints/misc.yml#/paths/~1api~1v1~1trackingSoftwareVersions'
  /api/v1/statcastPositionTypes:
    $ref: './endpoints/misc.yml#/paths/~1api~1v1~1statcastPositionTypes'
  /api/v1/statTypes:
    $ref: './endpoints/misc.yml#/paths/~1api~1v1~1statTypes'
  /api/v1/statGroups:
    $ref: './endpoints/misc.yml#/paths/~1api~1v1~1statGroups'
  /api/v1/statFields:
    $ref: './endpoints/misc.yml#/paths/~1api~1v1~1statFields'
  /api/v1/standingsTypes:
    $ref: './endpoints/misc.yml#/paths/~1api~1v1~1standingsTypes'
  /api/v1/sortModifiers:
    $ref: './endpoints/misc.yml#/paths/~1api~1v1~1sortModifiers'
  /api/v1/sky:
    $ref: './endpoints/misc.yml#/paths/~1api~1v1~1sky'
  /api/v1/situationCodes:
    $ref: './endpoints/misc.yml#/paths/~1api~1v1~1situationCodes'
  /api/v1/scheduleTypes:
    $ref: './endpoints/misc.yml#/paths/~1api~1v1~1scheduleTypes'
  /api/v1/scheduleEventTypes:
    $ref: './endpoints/misc.yml#/paths/~1api~1v1~1scheduleEventTypes'
  /api/v1/runnerDetailTypes:
    $ref: './endpoints/misc.yml#/paths/~1api~1v1~1runnerDetailTypes'
  /api/v1/ruleSettings:
    $ref: './endpoints/misc.yml#/paths/~1api~1v1~1ruleSettings'
  /api/v1/rosterTypes:
    $ref: './endpoints/misc.yml#/paths/~1api~1v1~1rosterTypes'
  /api/v1/roofTypes:
    $ref: './endpoints/misc.yml#/paths/~1api~1v1~1roofTypes'
  /api/v1/reviewReasons:
    $ref: './endpoints/misc.yml#/paths/~1api~1v1~1reviewReasons'
  /api/v1/positions:
    $ref: './endpoints/misc.yml#/paths/~1api~1v1~1positions'
  /api/v1/playerStatusCodes:
    $ref: './endpoints/misc.yml#/paths/~1api~1v1~1playerStatusCodes'
  /api/v1/platforms:
    $ref: './endpoints/misc.yml#/paths/~1api~1v1~1platforms'
  /api/v1/pitchTypes:
    $ref: './endpoints/misc.yml#/paths/~1api~1v1~1pitchTypes'
  /api/v1/pitchCodes:
    $ref: './endpoints/misc.yml#/paths/~1api~1v1~1pitchCodes'
  /api/v1/performerTypes:
    $ref: './endpoints/misc.yml#/paths/~1api~1v1~1performerTypes'
  /api/v1/moundVisitTypes:
    $ref: './endpoints/misc.yml#/paths/~1api~1v1~1moundVisitTypes'
  /api/v1/metrics:
    $ref: './endpoints/misc.yml#/paths/~1api~1v1~1metrics'
  /api/v1/mediaState:
    $ref: './endpoints/misc.yml#/paths/~1api~1v1~1mediaState'
  /api/v1/lookup/values/all:
    $ref: './endpoints/misc.yml#/paths/~1api~1v1~1lookup~1values~1all'
  /api/v1/logicalEvents:
    $ref: './endpoints/misc.yml#/paths/~1api~1v1~1logicalEvents'
  /api/v1/leagueLeaderTypes:
    $ref: './endpoints/misc.yml#/paths/~1api~1v1~1leagueLeaderTypes'
  /api/v1/languages:
    $ref: './endpoints/misc.yml#/paths/~1api~1v1~1languages'
  /api/v1/hitTrajectories:
    $ref: './endpoints/misc.yml#/paths/~1api~1v1~1hitTrajectories'
  /api/v1/groupByTypes:
    $ref: './endpoints/misc.yml#/paths/~1api~1v1~1groupByTypes'
  /api/v1/fielderDetailTypes:
    $ref: './endpoints/misc.yml#/paths/~1api~1v1~1fielderDetailTypes'
  /api/v1/eventTypes:
    $ref: './endpoints/misc.yml#/paths/~1api~1v1~1eventTypes'
  /api/v1/eventStatus:
    $ref: './endpoints/misc.yml#/paths/~1api~1v1~1eventStatus'
  /api/v1/coachingVideoTypes:
    $ref: './endpoints/misc.yml#/paths/~1api~1v1~1coachingVideoTypes'
  /api/v1/broadcastAvailability:
    $ref: './endpoints/misc.yml#/paths/~1api~1v1~1broadcastAvailability'

  # Person
  /api/v1/people:
    $ref: './endpoints/person.yml#/paths/~1api~1v1~1people'
  /api/v1/people/{personId}:
    $ref: './endpoints/person.yml#/paths/~1api~1v1~1people~1{personId}'
  /api/v1/people/{personId}/stats:
    $ref: './endpoints/person.yml#/paths/~1api~1v1~1people~1{personId}~1stats'
  /api/v1/people/{personId}/stats/metrics:
    $ref: './endpoints/person.yml#/paths/~1api~1v1~1people~1{personId}~1stats~1metrics'
  /api/v1/people/{personId}/stats/game/{gamePk}:
    $ref: './endpoints/person.yml#/paths/~1api~1v1~1people~1{personId}~1stats~1game~1{gamePk}'
  /api/v1/people/{personId}/awards:
    $ref: './endpoints/person.yml#/paths/~1api~1v1~1people~1{personId}~1awards'
  /api/v1/people/search:
    $ref: './endpoints/person.yml#/paths/~1api~1v1~1people~1search'
  /api/v1/people/freeAgents:
    $ref: './endpoints/person.yml#/paths/~1api~1v1~1people~1freeAgents'
  /api/v1/people/changes:
    $ref: './endpoints/person.yml#/paths/~1api~1v1~1people~1changes'

  # Predictions
  /api/v1/props/play/predictions:
    $ref: './endpoints/predictions.yml#/paths/~1api~1v1~1props~1play~1predictions'

  /api/v1/props/play/predictions/adjust:
    $ref: './endpoints/predictions.yml#/paths/~1api~1v1~1props~1play~1predictions~1adjust'

  # Reviews
  /api/v1/review:
    $ref: './endpoints/reviews.yml#/paths/~1api~1v1~1review'

  # Schedule
  /api/v1/schedule/trackingEvents:
    $ref: './endpoints/schedule.yml#/paths/~1api~1v1~1schedule~1trackingEvents'
  /api/v1/schedule/postseason:
    $ref: './endpoints/schedule.yml#/paths/~1api~1v1~1schedule~1postseason'
  /api/v1/schedule/postseason/tuneIn:
    $ref: './endpoints/schedule.yml#/paths/~1api~1v1~1schedule~1postseason~1tuneIn'
  /api/v1/schedule/postseason/series:
    $ref: './endpoints/schedule.yml#/paths/~1api~1v1~1schedule~1postseason~1series'
  /api/v1/schedule/games/tied:
    $ref: './endpoints/schedule.yml#/paths/~1api~1v1~1schedule~1games~1tied'
  /api/v1/schedule:
    $ref: './endpoints/schedule.yml#/paths/~1api~1v1~1schedule'
  /api/v1/schedule/{scheduleType}:
    $ref: './endpoints/schedule.yml#/paths/~1api~1v1~1schedule~1{scheduleType}'


  /api/v1/teams/{teamId}/alumni:
    get:
      tags:
        - Teams
      summary: View all team alumni
      operationId: alumni
      parameters:
        - name: teamId
          in: path
          description: 'Unique Team Identifier. Format: 141, 147, etc'
          required: true
          schema:
            type: integer
            format: int32
        - name: season
          in: query
          description: Season of play
          required: true
          schema:
            type: string
        - name: group
          in: query
          description: Category of statistic to return. Available types in /api/v1/statGroups
          required: false
          schema:
            $ref: '#/components/schemas/StatGroup'
        - name: fields
          in: query
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PeopleRestObject'
    post:
      tags:
        - Teams
      operationId: updateAlumni
      parameters:
        - name: teamId
          in: path
          description: 'Unique Team Identifier. Format: 141, 147, etc'
          required: true
          schema:
            type: integer
            format: int32
        - name: season
          in: query
          description: Season of play
          required: true
          schema:
            type: string
        - name: group
          in: query
          description: Category of statistic to return. Available types in /api/v1/statGroups
          required: false
          schema:
            $ref: '#/components/schemas/StatGroup'
        - name: fields
          in: query
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
      security:
        - basicAuth: []
        - bearerAuth: []




  /api/v1/weather/venues/{venueId}/full:
    get:
      tags:
        - Weather
      summary: Get full weather for a venue.
      description: Returns a json file containing full weather for a specific venue.
      operationId: weatherFull
      parameters:
        - name: venueId
          in: path
          description: Unique Venue Identifier
          required: true
          schema:
            type: integer
            format: int32
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/FullWeatherWrapperRestObject'
      security:
        - basicAuth: []
        - bearerAuth: []
  /api/v1/weather/venues/{venueId}/basic:
    get:
      tags:
        - Weather
      summary: Get basic weather for a venue.
      description: Returns a json file containing basic weather for a specific venue.
      operationId: weatherBasic
      parameters:
        - name: venueId
          in: path
          description: Unique Venue Identifier
          required: true
          schema:
            type: integer
            format: int32
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/BasicWeatherWrapperRestObject'
      security:
        - basicAuth: []
        - bearerAuth: []
  /api/v1/weather/game/{gamePk}/{playId}:
    get:
      tags:
        - Weather
      summary: Get the raw field weather data.
      description: Returns a json file containing weather for the current play.
      operationId: weatherDataBasedOnPlay
      parameters:
        - name: gamePk
          in: path
          description: Unique Primary Key Representing a Game
          required: true
          schema:
            type: integer
            format: int32
        - name: playId
          in: path
          description: Unique identifier for a play within a game
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/PlayWeatherWrapperRestObject'
      security:
        - basicAuth: []
        - bearerAuth: []
  /api/v1/weather/game/{gamePk}/forecast/{roofType}:
    get:
      tags:
        - Weather
      summary: Get the weather forecast for a game.
      description: Returns a json file containing the weather forecast for a specific game.
      operationId: weatherForecast
      parameters:
        - name: gamePk
          in: path
          description: Unique Primary Key Representing a Game
          required: true
          schema:
            type: integer
            format: int32
        - name: roofType
          in: path
          description: Venue roof type
          required: true
          schema:
            $ref: '#/components/schemas/RoofType'
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ForecastWeatherWrapperRestObject'
      security:
        - basicAuth: []
        - bearerAuth: []


  /api/v1/venues:
    get:
      tags:
        - Venues
      summary: View venue info
      description: This endpoint allows you to pull venues
      operationId: venues
      parameters:
        - name: venueId
          in: path
          description: Unique Venue Identifier
          required: true
          schema:
            type: integer
            format: int32
        - name: venueIds
          in: query
          description: Comma delimited list of Unique venue identifiers
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: leagueId
          in: query
          description: Unique League Identifier
          required: false
          schema:
            type: integer
            format: int32
        - name: leagueIds
          in: query
          description: Comma delimited list of Unique league identifiers
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: gameType
          in: query
          description: Type of Game. Available types in /api/v1/gameTypes
          required: false
          schema:
            $ref: '#/components/schemas/GameTypeEnum'
        - name: gameTypes
          in: query
          description: Comma delimited list of type of Game. Available types in /api/v1/gameTypes
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/GameTypeEnum'
        - name: season
          in: query
          description: Season of play
          required: false
          schema:
            type: string
        - name: seasons
          in: query
          description: Comma delimited list of Seasons of play
          required: false
          schema:
            type: array
            items:
              type: string
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: active
          in: query
          description: Whether or not a player is active
          required: false
          schema:
            type: boolean
        - name: includeEvents
          in: query
          required: false
          schema:
            type: boolean
        - name: sportId
          in: query
          description: Top level organization of a sport
          required: false
          schema:
            type: integer
            format: int32
        - name: sportIds
          in: query
          description: Comma delimited list of top level organizations of a sport
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/VenuesRestObject'
  /api/v1/venues/{venueId}:
    get:
      tags:
        - Venues
      summary: View venue info
      description: This endpoint allows you to pull venues
      operationId: venues_1
      parameters:
        - name: venueId
          in: path
          description: Unique Venue Identifier
          required: true
          schema:
            type: integer
            format: int32
        - name: venueIds
          in: query
          description: Comma delimited list of Unique venue identifiers
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: leagueId
          in: query
          description: Unique League Identifier
          required: false
          schema:
            type: integer
            format: int32
        - name: leagueIds
          in: query
          description: Comma delimited list of Unique league identifiers
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: gameType
          in: query
          description: Type of Game. Available types in /api/v1/gameTypes
          required: false
          schema:
            $ref: '#/components/schemas/GameTypeEnum'
        - name: gameTypes
          in: query
          description: Comma delimited list of type of Game. Available types in /api/v1/gameTypes
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/GameTypeEnum'
        - name: season
          in: query
          description: Season of play
          required: false
          schema:
            type: string
        - name: seasons
          in: query
          description: Comma delimited list of Seasons of play
          required: false
          schema:
            type: array
            items:
              type: string
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: active
          in: query
          description: Whether or not a player is active
          required: false
          schema:
            type: boolean
        - name: includeEvents
          in: query
          required: false
          schema:
            type: boolean
        - name: sportId
          in: query
          description: Top level organization of a sport
          required: false
          schema:
            type: integer
            format: int32
        - name: sportIds
          in: query
          description: Comma delimited list of top level organizations of a sport
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/VenuesRestObject'
  /api/v1/uniforms/team:
    get:
      tags:
        - Uniforms
      summary: View Team Uniform info
      description: This endpoint allows you to pull team uniform data for a season
      operationId: uniformsByTeam
      parameters:
        - name: teamIds
          in: query
          required: true
          schema:
            type: array
            items:
              type: integer
              format: int32
        - name: season
          in: query
          description: Season of play
          required: false
          schema:
            type: string
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UniformsTeamsRestObject'
  /api/v1/uniforms/game:
    get:
      tags:
        - Uniforms
      summary: View Game Uniform info
      description: This endpoint allows you to pull team uniform data for a game
      operationId: uniformsByGame
      parameters:
        - name: gamePks
          in: query
          description: Comma delimited list of unique primary keys
          required: true
          schema:
            type: array
            items:
              type: integer
              format: int32
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UniformsGamesRestObject'
  /api/v1/transactions:
    get:
      tags:
        - Transactions
      summary: View transaction info
      description: This endpoint allows you to pull transactions.
      operationId: transactions
      parameters:
        - name: leagueId
          in: query
          description: Comma delimited list of Unique league identifiers
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: sportId
          in: query
          description: Comma delimited list of top level organizations of a sport
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: teamId
          in: query
          description: Comma delimited list of Unique Team identifiers
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: playerId
          in: query
          description: A unique identifier for a player
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: date
          in: query
          description: 'Date of Game. Format: YYYY-MM-DD'
          required: false
          schema:
            type: string
            format: date
        - name: startDate
          in: query
          description: 'Start date for range of data (must be used with end date). Format: MM/DD/YYYY'
          required: false
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          description: 'End date for range of data (must be used with start date). Format: MM/DD/YYYY'
          required: false
          schema:
            type: string
            format: date
        - name: transactionIds
          in: query
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: transactionTypes
          in: query
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: divisionIds
          in: query
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: order
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TransactionsRestObject'





  /api/v1/teams/{teamId}/stats:
    get:
      tags:
        - Teams
      summary: View a teams stats
      operationId: stats
      parameters:
        - name: teamId
          in: path
          description: 'Unique Team Identifier. Format: 141, 147, etc'
          required: true
          schema:
            type: integer
            format: int32
        - name: sportId
          in: query
          description: Top level organization of a sport
          required: false
          schema:
            type: integer
            format: int32
        - name: season
          in: query
          description: Season of play
          required: false
          schema:
            type: string
        - name: gameType
          in: query
          description: Type of Game. Available types in /api/v1/gameTypes
          required: false
          schema:
            $ref: '#/components/schemas/GameTypeEnum'
        - name: stats
          in: query
          description: 'Type of statistics. Format: Individual, Team, Career, etc. Available types in /api/v1/statTypes'
          required: false
          schema:
            type: array
            items:
              $ref: '#/components/schemas/StatType'
        - name: group
          in: query
          description: Category of statistic to return. Available types in /api/v1/statGroups
          required: true
          schema:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/StatGroup'
        - name: sortStat
          in: query
          description: Baseball stat to sort splits by.
          required: false
          schema:
            $ref: '#/components/schemas/BaseballStatsEnum'
        - name: order
          in: query
          description: The order of sorting, ascending or descending
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - name: groupBy
          in: query
          description: Group stats by PLAYER, TEAM, SEASON, VENUE, SPORT or STAT_GROUP
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/GroupByEnum'
        - name: opposingTeamId
          in: query
          description: A unique identifier for the opposing team. Must be used with Team ID
          required: false
          schema:
            type: integer
            format: int32
        - name: opposingPlayerId
          in: query
          description: A unique identifier for the opposing team
          required: false
          schema:
            type: integer
            format: int32
        - name: sitCodes
          in: query
          description: Situation code for a given stat split.
          required: false
          schema:
            type: string
        - name: startDate
          in: query
          description: 'Start date for range of data (must be used with end date). Format: MM/DD/YYYY'
          required: false
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          description: 'End date for range of data (must be used with start date). Format: MM/DD/YYYY'
          required: false
          schema:
            type: string
            format: date
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StatsRestObject'
  /api/v1/teams/{teamId}/roster:
    get:
      tags:
        - Teams
      summary: View a teams roster
      description: This endpoint allows you to pull teams
      operationId: roster
      parameters:
        - name: teamId
          in: path
          description: 'Unique Team Identifier. Format: 141, 147, etc'
          required: true
          schema:
            type: integer
            format: int32
        - name: rosterType
          in: path
          description: Type of roster. Available types in /api/v1/rosterTypes
          required: true
          schema:
            type: string
        - name: season
          in: query
          description: Season of play
          required: false
          schema:
            type: string
        - name: date
          in: query
          description: 'Date of Game. Format: YYYY-MM-DD'
          required: false
          schema:
            type: string
            format: date
        - name: gameType
          in: query
          description: Type of Game. Available types in /api/v1/gameTypes
          required: false
          schema:
            $ref: '#/components/schemas/GameTypeEnum'
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RosterRestObject'
  /api/v1/teams/{teamId}/roster/{rosterType}:
    get:
      tags:
        - Teams
      summary: View a teams roster
      description: This endpoint allows you to pull teams
      operationId: roster_1
      parameters:
        - name: teamId
          in: path
          description: 'Unique Team Identifier. Format: 141, 147, etc'
          required: true
          schema:
            type: integer
            format: int32
        - name: rosterType
          in: path
          description: Type of roster. Available types in /api/v1/rosterTypes
          required: true
          schema:
            type: string
        - name: season
          in: query
          description: Season of play
          required: false
          schema:
            type: string
        - name: date
          in: query
          description: 'Date of Game. Format: YYYY-MM-DD'
          required: false
          schema:
            type: string
            format: date
        - name: gameType
          in: query
          description: Type of Game. Available types in /api/v1/gameTypes
          required: false
          schema:
            $ref: '#/components/schemas/GameTypeEnum'
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RosterRestObject'
  /api/v1/teams/{teamId}/personnel:
    get:
      tags:
        - Teams
      summary: View all coaches for a team
      operationId: personnel
      parameters:
        - name: teamId
          in: path
          description: 'Unique Team Identifier. Format: 141, 147, etc'
          required: true
          schema:
            type: integer
            format: int32
        - name: season
          in: query
          description: Season of play
          required: false
          schema:
            type: string
        - name: date
          in: query
          description: 'Date of Game. Format: YYYY-MM-DD'
          required: false
          schema:
            type: string
            format: date
        - name: fields
          in: query
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RosterRestObject'
  /api/v1/teams/{teamId}/leaders:
    get:
      tags:
        - Teams
      summary: View team stat leaders
      operationId: leaders
      parameters:
        - name: teamId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: leaderCategories
          in: query
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/PersonLeadersEnum'
        - name: season
          in: query
          required: false
          schema:
            type: string
        - name: leaderGameTypes
          in: query
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/GameTypeEnum'
        - name: expand
          in: query
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/ExpandEnum'
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: playerPool
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/PlayerPoolEnum'
        - name: fields
          in: query
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TeamLeaderContainerRestObject'
  /api/v1/teams/{teamId}/history:
    get:
      tags:
        - Teams
      summary: View historical records for a list of teams
      operationId: allTeams
      parameters:
        - name: teamId
          in: path
          description: 'Unique Team Identifier. Format: 141, 147, etc'
          required: true
          schema:
            type: integer
            format: int32
        - name: teamIds
          in: query
          description: Comma delimited list of Unique Team identifiers
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: startSeason
          in: query
          description: 'Start date for range of data (used with end date optionally). Example: ''2018'' or ''2018.2'''
          required: false
          schema:
            type: string
        - name: endSeason
          in: query
          description: 'End date for range of data (used with start date optionally). Format: ''2018'' or ''2018.2'''
          required: false
          schema:
            type: string
        - name: fields
          in: query
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TeamsRestObject'
  /api/v1/teams/history:
    get:
      tags:
        - Teams
      summary: View historical records for a list of teams
      operationId: allTeams_1
      parameters:
        - name: teamId
          in: path
          description: 'Unique Team Identifier. Format: 141, 147, etc'
          required: true
          schema:
            type: integer
            format: int32
        - name: teamIds
          in: query
          description: Comma delimited list of Unique Team identifiers
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: startSeason
          in: query
          description: 'Start date for range of data (used with end date optionally). Example: ''2018'' or ''2018.2'''
          required: false
          schema:
            type: string
        - name: endSeason
          in: query
          description: 'End date for range of data (used with start date optionally). Format: ''2018'' or ''2018.2'''
          required: false
          schema:
            type: string
        - name: fields
          in: query
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TeamsRestObject'
  /api/v1/teams/{teamId}/coaches:
    get:
      tags:
        - Teams
      summary: View all coaches for a team
      operationId: coaches
      parameters:
        - name: teamId
          in: path
          description: 'Unique Team Identifier. Format: 141, 147, etc'
          required: true
          schema:
            type: integer
            format: int32
        - name: season
          in: query
          description: Season of play
          required: false
          schema:
            type: string
        - name: date
          in: query
          description: 'Date of Game. Format: YYYY-MM-DD'
          required: false
          schema:
            type: string
            format: date
        - name: fields
          in: query
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RosterRestObject'
  /api/v1/teams/{teamId}/affiliates:
    get:
      tags:
        - Teams
      summary: View team and affiliate teams
      operationId: affiliates
      parameters:
        - name: teamId
          in: path
          description: 'Unique Team Identifier. Format: 141, 147, etc'
          required: true
          schema:
            type: integer
            format: int32
        - name: teamIds
          in: query
          description: 'Unique Team Identifier. Format: 141, 147, etc'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: sportId
          in: query
          description: Top level organization of a sport
          required: false
          schema:
            type: integer
            format: int32
        - name: season
          in: query
          description: Season of play
          required: false
          schema:
            type: string
        - name: gameType
          in: query
          description: Type of Game. Available types in /api/v1/gameTypes
          required: false
          schema:
            $ref: '#/components/schemas/GameTypeEnum'
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TeamsRestObject'
  /api/v1/teams/affiliates:
    get:
      tags:
        - Teams
      summary: View team and affiliate teams
      operationId: affiliates_1
      parameters:
        - name: teamId
          in: path
          description: 'Unique Team Identifier. Format: 141, 147, etc'
          required: true
          schema:
            type: integer
            format: int32
        - name: teamIds
          in: query
          description: 'Unique Team Identifier. Format: 141, 147, etc'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: sportId
          in: query
          description: Top level organization of a sport
          required: false
          schema:
            type: integer
            format: int32
        - name: season
          in: query
          description: Season of play
          required: false
          schema:
            type: string
        - name: gameType
          in: query
          description: Type of Game. Available types in /api/v1/gameTypes
          required: false
          schema:
            $ref: '#/components/schemas/GameTypeEnum'
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TeamsRestObject'
  /api/v1/teams/stats:
    get:
      tags:
        - Teams
      summary: View a teams stats
      operationId: stats_1
      parameters:
        - name: gameType
          in: query
          description: Type of Game. Available types in /api/v1/gameTypes
          required: false
          schema:
            $ref: '#/components/schemas/GameTypeEnum'
        - name: stats
          in: query
          description: 'Type of statistics. Format: Individual, Team, Career, etc. Available types in /api/v1/statTypes'
          required: false
          schema:
            type: array
            items:
              $ref: '#/components/schemas/StatType'
        - name: sportId
          in: query
          description: Top level organization of a sport
          required: false
          schema:
            type: integer
            format: int32
        - name: sportIds
          in: query
          description: Comma delimited list of top level organizations of a sport
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: leagueIds
          in: query
          description: Comma delimited list of Unique league identifiers
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: season
          in: query
          description: Season of play
          required: false
          schema:
            type: string
        - name: group
          in: query
          description: Category of statistic to return. Available types in /api/v1/statGroups
          required: true
          schema:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/StatGroup'
        - name: sortStat
          in: query
          description: Baseball stat to sort splits by.
          required: false
          schema:
            $ref: '#/components/schemas/BaseballStatsEnum'
        - name: order
          in: query
          description: The order of sorting, ascending or descending
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - name: startDate
          in: query
          description: 'Start date for range of data (must be used with end date). Format: MM/DD/YYYY'
          required: false
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          description: 'End date for range of data (must be used with start date). Format: MM/DD/YYYY'
          required: false
          schema:
            type: string
            format: date
        - name: daysBack
          in: query
          description: Returns results from the last 'X' days (Starting from yesterday).
          required: false
          schema:
            type: integer
            format: int32
        - name: sitCodes
          in: query
          description: Situation code for a given stat split.
          required: false
          schema:
            type: string
        - name: combineSits
          in: query
          description: 'If true, gathers stats where all of the situational criteria are met. If false, returns stats where any of the situational criteria are met. Default: false'
          required: false
          schema:
            type: boolean
        - name: opposingTeamId
          in: query
          description: A unique identifier for the opposing team. Must be used with Team ID
          required: false
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: The pointer to start for a return set; used for pagination
          required: false
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          description: Number of results to return
          required: false
          schema:
            type: integer
            format: int32
        - name: fields
          in: query
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StatsRestObject'
  /api/v1/teams/stats/leaders:
    get:
      tags:
        - Teams
      summary: View leaders for team stats
      operationId: leaders_1
      parameters:
        - name: leaderCategories
          in: query
          description: TBD
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/PersonLeadersEnum'
        - name: gameTypes
          in: query
          description: Type of Game. Available types in /api/v1/gameTypes
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/GameTypeEnum'
        - name: stats
          in: query
          description: 'Type of statistics. Format: Individual, Team, Career, etc. Available types in /api/v1/statTypes'
          required: false
          schema:
            type: array
            items:
              $ref: '#/components/schemas/StatType'
        - name: statType
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/StatType'
        - name: sportId
          in: query
          description: Top level organization of a sport
          required: false
          schema:
            type: integer
            format: int32
        - name: sportIds
          in: query
          description: Comma delimited list of top level organizations of a sport
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: leagueId
          in: query
          description: Unique League Identifier
          required: false
          schema:
            type: integer
            format: int32
        - name: leagueIds
          in: query
          description: Comma delimited list of Unique league identifiers
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: season
          in: query
          description: Season of play
          required: false
          schema:
            type: string
        - name: statGroup
          in: query
          description: Category of statistic to return. Available types in /api/v1/statGroups
          required: false
          schema:
            type: array
            items:
              $ref: '#/components/schemas/StatGroup'
        - name: group
          in: query
          description: Category of statistic to return. Available types in /api/v1/statGroups
          required: false
          schema:
            type: array
            items:
              $ref: '#/components/schemas/StatGroup'
        - name: startDate
          in: query
          description: 'Start date for range of data (must be used with end date). Format: MM/DD/YYYY'
          required: false
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          description: 'End date for range of data (must be used with start date). Format: MM/DD/YYYY'
          required: false
          schema:
            type: string
            format: date
        - name: daysBack
          in: query
          description: Returns results from the last 'X' days (Starting from yesterday).
          required: false
          schema:
            type: integer
            format: int32
        - name: sitCodes
          in: query
          description: Situation code for a given stat split.
          required: false
          schema:
            type: string
        - name: opposingTeamId
          in: query
          description: A unique identifier for the opposing team. Must be used with Team ID
          required: false
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          description: Number of results to return
          required: false
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: The pointer to start for a return set; used for pagination
          required: false
          schema:
            type: integer
            format: int32
        - name: fields
          in: query
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LeagueLeaderContainerRestObject'
  /api/v1/teams:
    get:
      tags:
        - Teams
      summary: View info for all teams
      description: This endpoint allows you to pull teams
      operationId: teams
      parameters:
        - name: teamId
          in: path
          description: 'Unique Team Identifier. Format: 141, 147, etc'
          required: true
          schema:
            type: integer
            format: int32
        - name: season
          in: query
          description: Season of play
          required: false
          schema:
            type: string
        - name: sportId
          in: query
          description: Top level organization of a sport
          required: false
          schema:
            type: integer
            format: int32
        - name: divisionId
          in: query
          description: Unique Division Identifier
          required: false
          schema:
            type: integer
            format: int32
        - name: gameType
          in: query
          description: Type of Game. Available types in /api/v1/gameTypes
          required: false
          schema:
            $ref: '#/components/schemas/GameTypeEnum'
        - name: leagueIds
          in: query
          description: Comma delimited list of Unique league identifiers
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: sportIds
          in: query
          description: Comma delimited list of top level organizations of a sport
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: activeStatus
          in: query
          description: Flag for fetching teams that are currently active (Y), inactive (N), pending (P), or all teams (B)
          required: false
          schema:
            $ref: '#/components/schemas/TeamActiveStatusEnum'
        - name: leagueListId
          in: query
          description: Unique League List Identifier
          required: false
          schema:
            $ref: '#/components/schemas/LeagueListsEnum'
        - name: allStarStatuses
          in: query
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/AllStarEnum'
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TeamsRestObject'
  /api/v1/teams/{teamId}:
    get:
      tags:
        - Teams
      summary: View info for all teams
      description: This endpoint allows you to pull teams
      operationId: teams_1
      parameters:
        - name: teamId
          in: path
          description: 'Unique Team Identifier. Format: 141, 147, etc'
          required: true
          schema:
            type: integer
            format: int32
        - name: season
          in: query
          description: Season of play
          required: false
          schema:
            type: string
        - name: sportId
          in: query
          description: Top level organization of a sport
          required: false
          schema:
            type: integer
            format: int32
        - name: divisionId
          in: query
          description: Unique Division Identifier
          required: false
          schema:
            type: integer
            format: int32
        - name: gameType
          in: query
          description: Type of Game. Available types in /api/v1/gameTypes
          required: false
          schema:
            $ref: '#/components/schemas/GameTypeEnum'
        - name: leagueIds
          in: query
          description: Comma delimited list of Unique league identifiers
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: sportIds
          in: query
          description: Comma delimited list of top level organizations of a sport
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: activeStatus
          in: query
          description: Flag for fetching teams that are currently active (Y), inactive (N), pending (P), or all teams (B)
          required: false
          schema:
            $ref: '#/components/schemas/TeamActiveStatusEnum'
        - name: leagueListId
          in: query
          description: Unique League List Identifier
          required: false
          schema:
            $ref: '#/components/schemas/LeagueListsEnum'
        - name: allStarStatuses
          in: query
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/AllStarEnum'
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TeamsRestObject'
  /api/v1/streaks:
    get:
      tags:
        - Streaks
      summary: View streaks
      operationId: getStreaks
      parameters:
        - name: streakOrg
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/OrganizationType'
        - name: streakStat
          in: query
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/StreakStatEnum'
        - name: streakSpan
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/StreakSpanEnum'
        - name: streakLevel
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/StreakLevelEnum'
        - name: streakThreshold
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: inverse
          in: query
          required: false
          schema:
            type: boolean
        - name: startersOnly
          in: query
          required: false
          schema:
            type: boolean
        - name: statGroup
          in: query
          description: Category of statistic to return. Available types in /api/v1/statGroups
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/StatGroup'
        - name: gameType
          in: query
          description: Type of Game. Available types in /api/v1/gameTypes
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/GameTypeEnum'
        - name: season
          in: query
          description: Season of play
          required: false
          schema:
            type: array
            items:
              type: string
        - name: teamId
          in: query
          description: 'Unique Team Identifier. Format: 141, 147, etc'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: leagueId
          in: query
          description: Unique League Identifier
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: sportId
          in: query
          description: Top level organization of a sport
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: activeStreak
          in: query
          description: Whether or not a player is active
          required: false
          schema:
            type: boolean
        - name: limit
          in: query
          description: Number of results to return
          required: false
          schema:
            type: integer
            format: int32
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: playerId
          in: query
          description: A unique identifier for a player
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StreaksWrapperRestObject'
      security:
        - basicAuth: []
        - bearerAuth: []
  /api/v1/streaks/types:
    get:
      tags:
        - Streaks
      summary: View streaks parameter options
      operationId: streakTypes
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: array
                  items:
                    type: object
  /api/v1/stats:
    get:
      tags:
        - Stats
      summary: View stats
      operationId: stats_2
      parameters:
        - name: stats
          in: query
          description: 'Type of statistics. Format: Individual, Team, Career, etc. Available types in /api/v1/statTypes'
          required: true
          schema:
            type: array
            items:
              $ref: '#/components/schemas/StatType'
        - name: personId
          in: query
          description: 'Unique Player Identifier. Format: 434538, 429665, etc'
          required: false
          schema:
            type: integer
            format: int32
        - name: teamId
          in: query
          description: 'Unique Team Identifier. Format: 141, 147, etc'
          required: false
          schema:
            type: integer
            format: int32
        - name: teamIds
          in: query
          description: Comma delimited list of Unique Team identifiers
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: group
          in: query
          description: Category of statistic to return. Available types in /api/v1/statGroups
          required: true
          schema:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/StatGroup'
        - name: gameType
          in: query
          description: Type of Game. Available types in /api/v1/gameTypes
          required: false
          schema:
            $ref: '#/components/schemas/GameTypeEnum'
        - name: season
          in: query
          description: Season of play
          required: false
          schema:
            type: string
        - name: seasons
          in: query
          description: Comma delimited list of Seasons of play
          required: false
          schema:
            type: array
            items:
              type: string
        - name: sportId
          in: query
          description: Top level organization of a sport
          required: false
          schema:
            type: integer
            format: int32
        - name: sportIds
          in: query
          description: Comma delimited list of top level organizations of a sport
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: leagueId
          in: query
          description: Unique League Identifier
          required: false
          schema:
            type: integer
            format: int32
        - name: leagueIds
          in: query
          description: Comma delimited list of Unique league identifiers
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: leagueListId
          in: query
          description: Unique League List Identifier
          required: false
          schema:
            $ref: '#/components/schemas/LeagueListsEnum'
        - name: metrics
          in: query
          description: Name of metric(s) for metric log stats.  Available metrics in /api/v1/metrics
          required: false
          schema:
            type: array
            items:
              $ref: '#/components/schemas/MetricType'
        - name: gamePk
          in: query
          description: Unique Primary Key Representing a Game
          required: false
          schema:
            type: integer
            format: int32
        - name: batterTeamId
          in: query
          description: A unique identifier for the batter's team
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: pitcherTeamId
          in: query
          description: A unique identifier for the pitcher's team
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: batterId
          in: query
          description: 'Unique Player Identifier. Format: 434538, 429665, etc'
          required: false
          schema:
            type: integer
            format: int32
        - name: pitcherId
          in: query
          description: 'Unique Player Identifier. Format: 434538, 429665, etc'
          required: false
          schema:
            type: integer
            format: int32
        - name: sitCodes
          in: query
          description: Situation code for a given stat split.
          required: false
          schema:
            type: array
            items:
              type: string
        - name: combineSits
          in: query
          description: 'If true, gathers stats where all of the situational criteria are met. If false, returns stats where any of the situational criteria are met. Default: false'
          required: false
          schema:
            type: boolean
        - name: opposingTeamId
          in: query
          description: A unique identifier for the opposing team. Must be used with Team ID
          required: false
          schema:
            type: integer
            format: int32
        - name: fields
          in: query
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: sortStat
          in: query
          description: Baseball stat to sort splits by.
          required: false
          schema:
            $ref: '#/components/schemas/BaseballStatsEnum'
        - name: order
          in: query
          description: The order of sorting, ascending or descending
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - name: playerPool
          in: query
          description: Return "ALL" or only "QUALIFIED" players based on plate appearances.
          required: false
          schema:
            $ref: '#/components/schemas/PlayerPoolEnum'
        - name: position
          in: query
          description: 'Position number. Format: 1, 2, 3, etc'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/BaseballPosition'
        - name: startDate
          in: query
          description: 'Start date for range of data (must be used with end date). Format: MM/DD/YYYY'
          required: false
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          description: 'End date for range of data (must be used with start date). Format: MM/DD/YYYY'
          required: false
          schema:
            type: string
            format: date
        - name: daysBack
          in: query
          description: Returns results from the last 'X' days (Starting from yesterday).
          required: false
          schema:
            type: integer
            format: int32
        - name: gamesBack
          in: query
          description: Returns results from the last 'X' games played.
          required: false
          schema:
            type: integer
            format: int32
        - name: excludeTradedPlayers
          in: query
          description: Excludes players who have since been traded from the input team
          required: false
          schema:
            type: boolean
        - name: offset
          in: query
          description: The pointer to start for a return set; used for pagination
          required: false
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          description: Number of results to return
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StatsRestObject'
  /api/v1/stats/search:
    get:
      tags:
        - Stats
      summary: View stats from search
      operationId: beastStats
      parameters:
        - name: group
          in: query
          description: Category of statistic to return. Available types in /api/v1/statGroups
          required: true
          schema:
            type: array
            items:
              $ref: '#/components/schemas/StatGroup'
        - name: gamePks
          in: query
          description: Comma delimited list of unique primary keys
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int32
        - name: playIds
          in: query
          description: Comma delimited list of unique play identifiers
          required: false
          schema:
            type: array
            items:
              type: string
        - name: seasons
          in: query
          description: Comma delimited list of Seasons of play
          required: false
          schema:
            type: array
            items:
              type: string
        - name: gameTypes
          in: query
          description: Type of Game. Available types in /api/v1/gameTypes
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/GameTypeEnum'
        - name: date
          in: query
          description: 'Date of Game. Format: YYYY-MM-DD'
          required: false
          schema:
            type: string
            format: date
        - name: startDate
          in: query
          description: 'Date of Game. Format: YYYY-MM-DD'
          required: false
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          description: 'Date of Game. Format: YYYY-MM-DD'
          required: false
          schema:
            type: string
            format: date
        - name: teamIds
          in: query
          description: 'Unique Team Identifier. Format: 141, 147, etc'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: pitcherTeamIds
          in: query
          description: 'Unique Team Identifier. Format: 141, 147, etc'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: batterTeamIds
          in: query
          description: 'Unique Team Identifier. Format: 141, 147, etc'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: sportIds
          in: query
          description: Comma delimited list of top level organizations of a sport
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: pitcherSportIds
          in: query
          description: Comma delimited list of top level organizations of a sport
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: batterSportIds
          in: query
          description: Comma delimited list of top level organizations of a sport
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: leagueIds
          in: query
          description: Comma delimited list of Unique league identifiers
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: pitcherLeagueIds
          in: query
          description: Comma delimited list of Unique league identifiers
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: batterLeagueIds
          in: query
          description: Comma delimited list of Unique league identifiers
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: divisionIds
          in: query
          description: Comma delimited list of Unique League Identifiers
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: pitcherDivisionIds
          in: query
          description: Comma delimited list of Unique League Identifiers
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: batterDivisionIds
          in: query
          description: Comma delimited list of Unique League Identifiers
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: pitchersOnTeamIds
          in: query
          description: 'Unique Team Identifier. Format: 141, 147, etc'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: battersOnTeamIds
          in: query
          description: 'Unique Team Identifier. Format: 141, 147, etc'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: playerIds
          in: query
          description: A unique identifier for a player
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: playerPool
          in: query
          description: Return "ALL" or only "QUALIFIED" players based on plate appearances.
          required: false
          schema:
            $ref: '#/components/schemas/PlayerPoolEnum'
        - name: pitcherIds
          in: query
          description: A unique identifier for a player
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: batterIds
          in: query
          description: A unique identifier for a player
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: catcherIds
          in: query
          description: A unique identifier for a player
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: firstBasemanIds
          in: query
          description: A unique identifier for a player
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: secondBasemanIds
          in: query
          description: A unique identifier for a player
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: thirdBasemanIds
          in: query
          description: A unique identifier for a player
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: shortstopIds
          in: query
          description: A unique identifier for a player
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: leftFielderIds
          in: query
          description: A unique identifier for a player
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: centerFielderIds
          in: query
          description: A unique identifier for a player
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: rightFielderIds
          in: query
          description: A unique identifier for a player
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: runnerFirstIds
          in: query
          description: A unique identifier for a player
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: runnerSecondIds
          in: query
          description: A unique identifier for a player
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: runnerThirdIds
          in: query
          description: A unique identifier for a player
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: venueIds
          in: query
          description: Unique Venue Identifier
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: pitchHand
          in: query
          description: Handedness of pitcher
          required: false
          schema:
            type: string
        - name: batSide
          in: query
          description: Bat side of hitter
          required: false
          schema:
            type: string
        - name: pitchTypes
          in: query
          description: Classification of pitch (fastball, curveball, etc...)
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/PitchType'
        - name: pitchCodes
          in: query
          description: Result of the pitch (ball, called strike, etc...)
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/PitchCode'
        - name: eventTypes
          in: query
          description: Type of event
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/EventType'
        - name: positions
          in: query
          description: All of the details of a player's position
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/BaseballPosition'
        - name: primaryPositions
          in: query
          description: All of the details of a player's position
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/BaseballPosition'
        - name: minPitchSpeed
          in: query
          description: Minimum value to filter on
          required: false
          schema:
            type: number
            format: double
        - name: maxPitchSpeed
          in: query
          description: Maximum value to filter on
          required: false
          schema:
            type: number
            format: double
        - name: minSpinRate
          in: query
          description: Minimum value to filter on
          required: false
          schema:
            type: number
            format: double
        - name: maxSpinRate
          in: query
          description: Maximum value to filter on
          required: false
          schema:
            type: number
            format: double
        - name: minExtension
          in: query
          description: Minimum value to filter on
          required: false
          schema:
            type: number
            format: double
        - name: maxExtension
          in: query
          description: Maximum value to filter on
          required: false
          schema:
            type: number
            format: double
        - name: minExitVelocityAgainst
          in: query
          description: Minimum value to filter on
          required: false
          schema:
            type: number
            format: double
        - name: maxExitVelocityAgainst
          in: query
          description: Maximum value to filter on
          required: false
          schema:
            type: number
            format: double
        - name: minLaunchAngleAgainst
          in: query
          description: Minimum value to filter on
          required: false
          schema:
            type: number
            format: double
        - name: maxLaunchAngleAgainst
          in: query
          description: Maximum value to filter on
          required: false
          schema:
            type: number
            format: double
        - name: minExitVelocity
          in: query
          description: Minimum value to filter on
          required: false
          schema:
            type: number
            format: double
        - name: maxExitVelocity
          in: query
          description: Maximum value to filter on
          required: false
          schema:
            type: number
            format: double
        - name: minLaunchAngle
          in: query
          description: Minimum value to filter on
          required: false
          schema:
            type: number
            format: double
        - name: maxLaunchAngle
          in: query
          description: Maximum value to filter on
          required: false
          schema:
            type: number
            format: double
        - name: minHomeRunDistance
          in: query
          description: Minimum value to filter on
          required: false
          schema:
            type: number
            format: double
        - name: maxHomeRunDistance
          in: query
          description: Maximum value to filter on
          required: false
          schema:
            type: number
            format: double
        - name: minHitDistance
          in: query
          description: Minimum value to filter on
          required: false
          schema:
            type: number
            format: double
        - name: maxHitDistance
          in: query
          description: Maximum value to filter on
          required: false
          schema:
            type: number
            format: double
        - name: minHangTime
          in: query
          description: Minimum value to filter on
          required: false
          schema:
            type: number
            format: double
        - name: maxHangTime
          in: query
          description: Maximum value to filter on
          required: false
          schema:
            type: number
            format: double
        - name: minHitProbability
          in: query
          description: Minimum value to filter on
          required: false
          schema:
            type: number
            format: double
        - name: maxHitProbability
          in: query
          description: Maximum value to filter on
          required: false
          schema:
            type: number
            format: double
        - name: minCatchProbability
          in: query
          description: Minimum value to filter on
          required: false
          schema:
            type: number
            format: double
        - name: maxCatchProbability
          in: query
          description: Maximum value to filter on
          required: false
          schema:
            type: number
            format: double
        - name: minAttackAngle
          in: query
          description: Minimum value to filter on
          required: false
          schema:
            type: number
            format: double
        - name: maxAttackAngle
          in: query
          description: Maximum value to filter on
          required: false
          schema:
            type: number
            format: double
        - name: minBatSpeed
          in: query
          description: Minimum value to filter on
          required: false
          schema:
            type: number
            format: double
        - name: maxBatSpeed
          in: query
          description: Maximum value to filter on
          required: false
          schema:
            type: number
            format: double
        - name: minHomeRunXBallparks
          in: query
          description: Minimum value to filter on
          required: false
          schema:
            type: number
            format: double
        - name: maxHomeRunXBallparks
          in: query
          description: Maximum value to filter on
          required: false
          schema:
            type: number
            format: double
        - name: isBarrel
          in: query
          description: Whether or not a play resulted in a barreled ball
          required: false
          schema:
            type: boolean
        - name: hitTrajectories
          in: query
          description: Trajectory of hit (line drive, fly ball, etc...)
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/HitTrajectory'
        - name: limit
          in: query
          description: Number of results to return
          required: false
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: The pointer to start for a return set; used for pagination
          required: false
          schema:
            type: integer
            format: int32
        - name: groupBy
          in: query
          description: Group stats by PLAYER, TEAM, SEASON, VENUE, SPORT or STAT_GROUP
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/GroupByEnum'
        - name: compareOver
          in: query
          description: Group stats by PLAYER, TEAM, SEASON, VENUE, SPORT or STAT_GROUP
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/GroupByEnum'
        - name: sortStat
          in: query
          description: Baseball stat to sort splits by.
          required: false
          schema:
            $ref: '#/components/schemas/BaseballStatsEnum'
        - name: sortModifier
          in: query
          description: The prefix modifier for the sort stat.  avg, min, max. I.E minExitVelocity, maxLaunchAngle, avgHitDistance
          required: false
          schema:
            $ref: '#/components/schemas/AggregateSortTypeEnum'
        - name: sortOrder
          in: query
          description: The order of sorting, ascending or descending
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - name: percentile
          in: query
          description: Only return averages above this percentile. used for best effort plays
          required: false
          schema:
            type: integer
            format: int32
        - name: minOccurrences
          in: query
          description: Minimum occurrences to filter upon
          required: false
          schema:
            type: integer
            format: int32
        - name: minPlateAppearances
          in: query
          description: Minimum occurrences to filter upon
          required: false
          schema:
            type: integer
            format: int32
        - name: minInnings
          in: query
          description: Minimum occurrences to filter upon
          required: false
          schema:
            type: integer
            format: int32
        - name: qualifierRate
          in: query
          description: Minimum occurrences to filter upon
          required: false
          schema:
            type: number
            format: double
        - name: sitCodes
          in: query
          description: Situation code for a given stat split.
          required: false
          schema:
            type: array
            items:
              type: string
        - name: showTotals
          in: query
          description: Columns to return totals
          required: false
          schema:
            type: boolean
        - name: includeNullMetrics
          in: query
          description: Show events with null metrics
          required: false
          schema:
            type: boolean
        - name: statFields
          in: query
          description: Baseball stat fields to populate
          required: false
          schema:
            type: array
            items:
              $ref: '#/components/schemas/StatField'
        - name: atBatNumbers
          in: query
          description: 'The at bat number of a given game. Format: 1, 2, 3, etc'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: pitchNumbers
          in: query
          description: 'The pitch number of a given game. Format: 1, 2, 3, etc'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: debug
          in: query
          required: false
          schema:
            type: boolean
        - name: activeStatus
          in: query
          description: Whether or not a player is active
          required: false
          schema:
            $ref: '#/components/schemas/PlayerActiveStatusEnum'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StatContainerRestObject'
      security:
        - basicAuth: []
        - bearerAuth: []




  /api/v1/stats/metrics:
    get:
      tags:
        - Stats
      summary: View metric stats
      operationId: metricStats
      parameters:
        - name: personId
          in: query
          description: 'Unique Player Identifier. Format: 434538, 429665, etc'
          required: false
          schema:
            type: integer
            format: int32
        - name: personIds
          in: query
          description: 'Unique Player Identifier. Format: 434538, 429665, etc'
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int32
        - name: batterId
          in: query
          description: 'Unique Player Identifier. Format: 434538, 429665, etc'
          required: false
          schema:
            type: integer
            format: int32
        - name: pitcherId
          in: query
          description: 'Unique Player Identifier. Format: 434538, 429665, etc'
          required: false
          schema:
            type: integer
            format: int32
        - name: teamId
          in: query
          description: 'Unique Team Identifier. Format: 141, 147, etc'
          required: false
          schema:
            type: integer
            format: int32
        - name: stats
          in: query
          description: 'Type of statistics. Format: Individual, Team, Career, etc. Available types in /api/v1/statTypes'
          required: true
          schema:
            type: array
            items:
              $ref: '#/components/schemas/StatType'
        - name: group
          in: query
          description: Category of statistic to return. Available types in /api/v1/statGroups
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/StatGroup'
        - name: season
          in: query
          description: Season of play
          required: false
          schema:
            type: string
        - name: seasons
          in: query
          description: Comma delimited list of Seasons of play
          required: false
          schema:
            type: array
            items:
              type: string
        - name: sportId
          in: query
          description: Top level organization of a sport
          required: false
          schema:
            type: integer
            format: int32
        - name: opposingTeamId
          in: query
          description: A unique identifier for the opposing team. Must be used with Team ID
          required: false
          schema:
            type: integer
            format: int32
        - name: opposingPlayerId
          in: query
          description: A unique identifier for the opposing team
          required: false
          schema:
            type: integer
            format: int32
        - name: position
          in: query
          description: All of the details of a player's position
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/BaseballPosition'
        - name: eventType
          in: query
          description: Type of event
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/EventType'
        - name: pitchType
          in: query
          description: Classification of pitch (fastball, curveball, etc...)
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: hitTrajectory
          in: query
          description: Trajectory of hit (line drive, fly ball, etc...)
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/HitTrajectory'
        - name: batSide
          in: query
          description: Bat side of hitter
          required: false
          schema:
            type: string
        - name: pitchHand
          in: query
          description: Handedness of pitcher
          required: false
          schema:
            type: string
        - name: venueId
          in: query
          description: All of the details of a venue
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: metrics
          in: query
          description: Name of metric(s) for metric log stats.  Available metrics in /api/v1/metrics
          required: true
          schema:
            type: array
            items:
              $ref: '#/components/schemas/MetricType'
        - name: gamePk
          in: query
          description: Unique Primary Key Representing a Game
          required: false
          schema:
            type: integer
            format: int32
        - name: minValue
          in: query
          description: Minimum value to filter on
          required: false
          schema:
            type: number
            format: double
        - name: maxValue
          in: query
          description: Maximum value to filter on
          required: false
          schema:
            type: number
            format: double
        - name: percentile
          in: query
          description: Only return averages above this percentile. used for best effort plays
          required: false
          schema:
            type: integer
            format: int32
        - name: minOccurrences
          in: query
          description: Minimum occurrences to filter upon
          required: false
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: The pointer to start for a return set; used for pagination
          required: false
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          description: Number of results to return
          required: false
          schema:
            type: integer
            format: int32
        - name: order
          in: query
          description: The order of sorting, ascending or descending
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - name: date
          in: query
          description: 'Date of Game. Format: YYYY-MM-DD'
          required: false
          schema:
            type: string
            format: date
        - name: startDate
          in: query
          description: 'Start date for range of data (must be used with end date). Format: MM/DD/YYYY'
          required: false
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          description: 'End date for range of data (must be used with start date). Format: MM/DD/YYYY'
          required: false
          schema:
            type: string
            format: date
        - name: gameType
          in: query
          description: Type of Game. Available types in /api/v1/gameTypes
          required: false
          schema:
            $ref: '#/components/schemas/GameTypeEnum'
        - name: batterTeamId
          in: query
          description: A unique identifier for the batter's team
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: pitcherTeamId
          in: query
          description: A unique identifier for the pitcher's team
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: debug
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StatsRestObject'
      security:
        - basicAuth: []
        - bearerAuth: []
  /api/v1/stats/leaders:
    get:
      tags:
        - Stats
      summary: Get leaders for a statistic
      operationId: leaders_2
      parameters:
        - name: leaderCategories
          in: query
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/PersonLeadersEnum'
        - name: leaderGameTypes
          in: query
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/GameTypeEnum'
        - name: statGroup
          in: query
          required: false
          schema:
            type: array
            items:
              $ref: '#/components/schemas/StatGroup'
        - name: season
          in: query
          required: false
          schema:
            type: string
        - name: expand
          in: query
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/ExpandEnum'
        - name: sportId
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: sportIds
          in: query
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: stats
          in: query
          required: false
          schema:
            type: array
            items:
              $ref: '#/components/schemas/StatType'
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: teamId
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: teamIds
          in: query
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: leagueId
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: leagueIds
          in: query
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: leagueListId
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/LeagueListsEnum'
        - name: playerPool
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/PlayerPoolEnum'
        - name: statType
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/StatType'
        - name: playerActive
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/PlayerActiveStatusEnum'
        - name: position
          in: query
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/BaseballPosition'
        - name: sitCodes
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: opposingTeamId
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: startDate
          in: query
          required: false
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          required: false
          schema:
            type: string
            format: date
        - name: daysBack
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: gamesBack
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: groupBy
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/GroupByEnum'
        - name: fields
          in: query
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LeagueLeaderContainerRestObject'
  /api/v1/stats/grouped:
    get:
      tags:
        - Stats
      summary: View grouped stats
      operationId: groupedStats
      parameters:
        - name: stats
          in: query
          description: 'Type of statistics. Format: Individual, Team, Career, etc. Available types in /api/v1/statTypes'
          required: true
          schema:
            type: array
            items:
              $ref: '#/components/schemas/StatType'
        - name: personId
          in: query
          description: 'Unique Player Identifier. Format: 434538, 429665, etc'
          required: false
          schema:
            type: integer
            format: int32
        - name: teamId
          in: query
          description: 'Unique Team Identifier. Format: 141, 147, etc'
          required: false
          schema:
            type: integer
            format: int32
        - name: teamIds
          in: query
          description: Comma delimited list of Unique Team identifiers
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: group
          in: query
          description: Category of statistic to return. Available types in /api/v1/statGroups
          required: true
          schema:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/StatGroup'
        - name: gameType
          in: query
          description: Type of Game. Available types in /api/v1/gameTypes
          required: false
          schema:
            $ref: '#/components/schemas/GameTypeEnum'
        - name: season
          in: query
          description: Season of play
          required: false
          schema:
            type: string
        - name: seasons
          in: query
          description: Comma delimited list of Seasons of play
          required: false
          schema:
            type: array
            items:
              type: string
        - name: sportId
          in: query
          description: Top level organization of a sport
          required: false
          schema:
            type: integer
            format: int32
        - name: sportIds
          in: query
          description: Comma delimited list of top level organizations of a sport
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: leagueId
          in: query
          description: Unique League Identifier
          required: false
          schema:
            type: integer
            format: int32
        - name: leagueIds
          in: query
          description: Comma delimited list of Unique league identifiers
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: leagueListId
          in: query
          description: Unique League List Identifier
          required: false
          schema:
            $ref: '#/components/schemas/LeagueListsEnum'
        - name: metrics
          in: query
          description: Name of metric(s) for metric log stats.  Available metrics in /api/v1/metrics
          required: false
          schema:
            type: array
            items:
              $ref: '#/components/schemas/MetricType'
        - name: gamePk
          in: query
          description: Unique Primary Key Representing a Game
          required: false
          schema:
            type: integer
            format: int32
        - name: batterTeamId
          in: query
          description: A unique identifier for the batter's team
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: pitcherTeamId
          in: query
          description: A unique identifier for the pitcher's team
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: batterId
          in: query
          description: 'Unique Player Identifier. Format: 434538, 429665, etc'
          required: false
          schema:
            type: integer
            format: int32
        - name: pitcherId
          in: query
          description: 'Unique Player Identifier. Format: 434538, 429665, etc'
          required: false
          schema:
            type: integer
            format: int32
        - name: sitCodes
          in: query
          description: Situation code for a given stat split.
          required: false
          schema:
            type: array
            items:
              type: string
        - name: combineSits
          in: query
          description: 'If true, gathers stats where all of the situational criteria are met. If false, returns stats where any of the situational criteria are met. Default: false'
          required: false
          schema:
            type: boolean
        - name: opposingTeamId
          in: query
          description: A unique identifier for the opposing team. Must be used with Team ID
          required: false
          schema:
            type: integer
            format: int32
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: sortStat
          in: query
          description: Baseball stat to sort splits by.
          required: false
          schema:
            $ref: '#/components/schemas/BaseballStatsEnum'
        - name: order
          in: query
          description: The order of sorting, ascending or descending
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - name: playerPool
          in: query
          description: Return "ALL" or only "QUALIFIED" players based on plate appearances.
          required: false
          schema:
            $ref: '#/components/schemas/PlayerPoolEnum'
        - name: position
          in: query
          description: 'Position number. Format: 1, 2, 3, etc'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/BaseballPosition'
        - name: startDate
          in: query
          description: 'Start date for range of data (must be used with end date). Format: MM/DD/YYYY'
          required: false
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          description: 'End date for range of data (must be used with start date). Format: MM/DD/YYYY'
          required: false
          schema:
            type: string
            format: date
        - name: daysBack
          in: query
          description: Returns results from the last 'X' days (Starting from yesterday).
          required: false
          schema:
            type: integer
            format: int32
        - name: gamesBack
          in: query
          description: Returns results from the last 'X' games played.
          required: false
          schema:
            type: integer
            format: int32
        - name: excludeTradedPlayers
          in: query
          description: Excludes players who have since been traded from the input team
          required: false
          schema:
            type: boolean
        - name: offset
          in: query
          description: The pointer to start for a return set; used for pagination
          required: false
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          description: Number of results to return
          required: false
          schema:
            type: integer
            format: int32
        - name: statFields
          in: query
          description: Baseball stat fields to populate
          required: false
          schema:
            type: array
            items:
              $ref: '#/components/schemas/StatField'
        - name: sortField
          in: query
          description: Baseball statField to sort on.  If no statField is given, sortField defaults to BASIC.  If 1 statField is given, that is the default sortField.
          required: false
          schema:
            $ref: '#/components/schemas/StatField'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StatsRestObject'
  /api/v1/stats/analytics/stolenBaseProbability:
    get:
      tags:
        - Stats
      summary: Get the probability of a hit for the given hit data
      operationId: getStolenBaseProbability
      parameters:
        - name: gamePk
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: timecode
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: integer
                  format: int32
      security:
        - basicAuth: []
        - bearerAuth: []
  /api/v1/stats/analytics/sprayChart:
    get:
      tags:
        - Stats
      summary: Get the spray chart info for the current batter
      operationId: getSprayChart
      parameters:
        - name: gamePk
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: timecode
          in: query
          required: false
          schema:
            type: string
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StatsRestObject'
      security:
        - basicAuth: []
        - bearerAuth: []
  /api/v1/stats/analytics/outsAboveAverage:
    get:
      tags:
        - Stats
      summary: Get outs above average for the current batter
      operationId: getOutsAboveAverage
      parameters:
        - name: gamePk
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: timecode
          in: query
          required: false
          schema:
            type: string
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StatsRestObject'
      security:
        - basicAuth: []
        - bearerAuth: []





  /api/v1/standings/{standingsType}:
    get:
      tags:
        - Standings
      summary: View standings for a league
      description: This endpoint allows you to pull standings
      operationId: standings
      parameters:
        - name: standingsType
          in: path
          description: Type of season. Available types in /api/v1/standingsTypes
          required: true
          schema:
            type: string
        - name: leagueId
          in: query
          description: Unique League Identifier
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int32
        - name: season
          in: query
          description: Season of play
          required: false
          schema:
            type: string
        - name: standingsTypes
          in: query
          description: Type of season. Available types in /api/v1/standingsTypes
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/StandingsType'
        - name: date
          in: query
          description: 'Date of Game. Format: YYYY-MM-DD'
          required: false
          schema:
            type: string
            format: date
        - name: teamId
          in: query
          description: 'Unique Team Identifier. Format: 141, 147, etc'
          required: false
          schema:
            type: integer
            format: int32
        - name: includeMLB
          in: query
          description: Determines whether to include major league teams when using the 'BY_ORGANIZATION' standings type
          required: false
          schema:
            type: boolean
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StandingsRestObject'
  /api/v1/standings:
    get:
      tags:
        - Standings
      summary: View standings for a league
      description: This endpoint allows you to pull standings
      operationId: standings_1
      parameters:
        - name: standingsType
          in: path
          description: Type of season. Available types in /api/v1/standingsTypes
          required: true
          schema:
            type: string
        - name: leagueId
          in: query
          description: Unique League Identifier
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int32
        - name: season
          in: query
          description: Season of play
          required: false
          schema:
            type: string
        - name: standingsTypes
          in: query
          description: Type of season. Available types in /api/v1/standingsTypes
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/StandingsType'
        - name: date
          in: query
          description: 'Date of Game. Format: YYYY-MM-DD'
          required: false
          schema:
            type: string
            format: date
        - name: teamId
          in: query
          description: 'Unique Team Identifier. Format: 141, 147, etc'
          required: false
          schema:
            type: integer
            format: int32
        - name: includeMLB
          in: query
          description: Determines whether to include major league teams when using the 'BY_ORGANIZATION' standings type
          required: false
          schema:
            type: boolean
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StandingsRestObject'
  /api/v1/sports/{sportId}/players:
    get:
      tags:
        - Sports
      summary: Get all players for a sport level
      description: This endpoint allows you to pull all players for a given sport
      operationId: sportPlayers
      parameters:
        - name: sportId
          in: path
          description: Top level organization of a sport
          required: true
          schema:
            type: integer
            format: int32
        - name: season
          in: query
          description: Season of play
          required: false
          schema:
            type: string
        - name: gameType
          in: query
          description: Type of Game. Available types in /api/v1/gameTypes
          required: false
          schema:
            $ref: '#/components/schemas/GameTypeEnum'
        - name: hasStats
          in: query
          description: Returns sports that have individual player stats
          required: false
          schema:
            type: boolean
        - name: accent
          in: query
          description: Boolean value to specify wanting a person's name with accents or without
          required: false
          schema:
            type: boolean
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PeopleRestObject'
  /api/v1/sports/{sportId}/allSportBallot:
    get:
      tags:
        - Sports
      summary: Get ALL MLB ballot for sport
      description: This endpoint allows you to get all players for MLB ballot
      operationId: allSportBallot
      parameters:
        - name: sportId
          in: path
          description: Top level organization of a sport
          required: true
          schema:
            type: integer
            format: int32
        - name: season
          in: query
          description: season
          required: true
          schema:
            type: string
        - name: fields
          in: query
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PeopleRestObject'
  /api/v1/sports:
    get:
      tags:
        - Sports
      summary: Get sports information
      description: This endpoint allows you to pull sports
      operationId: sports
      parameters:
        - name: sportId
          in: path
          description: Top level organization of a sport
          required: true
          schema:
            type: integer
            format: int32
        - name: season
          in: query
          description: Season of play
          required: false
          schema:
            type: string
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: hasStats
          in: query
          description: Returns sports that have individual player stats
          required: false
          schema:
            type: boolean
        - name: activeStatus
          in: query
          description: Flag for fetching sports that are currently active (Y), inactive (N), pending (P), or all teams (B)
          required: false
          schema:
            $ref: '#/components/schemas/SportActiveStatusEnum'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SportsRestObject'
  /api/v1/sports/{sportId}:
    get:
      tags:
        - Sports
      summary: Get sports information
      description: This endpoint allows you to pull sports
      operationId: sports_1
      parameters:
        - name: sportId
          in: path
          description: Top level organization of a sport
          required: true
          schema:
            type: integer
            format: int32
        - name: season
          in: query
          description: Season of play
          required: false
          schema:
            type: string
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: hasStats
          in: query
          description: Returns sports that have individual player stats
          required: false
          schema:
            type: boolean
        - name: activeStatus
          in: query
          description: Flag for fetching sports that are currently active (Y), inactive (N), pending (P), or all teams (B)
          required: false
          schema:
            $ref: '#/components/schemas/SportActiveStatusEnum'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SportsRestObject'



  /api/v1/seasons/all:
    get:
      tags:
        - Season
      summary: View all seasons
      description: This endpoint allows you to view all seasons for a given Division, League or Sport
      operationId: allSeasons
      parameters:
        - name: divisionId
          in: query
          description: Unique Division Identifier
          required: false
          schema:
            type: integer
            format: int32
        - name: leagueId
          in: query
          description: Unique League Identifier
          required: false
          schema:
            type: integer
            format: int32
        - name: sportId
          in: query
          description: Top level organization of a sport
          required: false
          schema:
            type: integer
            format: int32
        - name: withGameTypeDates
          in: query
          description: Retrieve dates for each game type
          required: false
          schema:
            type: boolean
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SeasonsRestObject'
  /api/v1/seasons:
    get:
      tags:
        - Season
      summary: View season info
      description: This endpoint allows you to pull seasons
      operationId: seasons
      parameters:
        - name: seasonId
          in: path
          description: Season of play
          required: true
          schema:
            type: string
        - name: season
          in: query
          description: Season of play
          required: false
          schema:
            type: array
            items:
              type: string
        - name: sportId
          in: query
          description: Top level organization of a sport
          required: false
          schema:
            type: integer
            format: int32
        - name: withGameTypeDates
          in: query
          description: Retrieve dates for each game type
          required: false
          schema:
            type: boolean
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SeasonsRestObject'
  /api/v1/seasons/{seasonId}:
    get:
      tags:
        - Season
      summary: View season info
      description: This endpoint allows you to pull seasons
      operationId: seasons_1
      parameters:
        - name: seasonId
          in: path
          description: Season of play
          required: true
          schema:
            type: string
        - name: season
          in: query
          description: Season of play
          required: false
          schema:
            type: array
            items:
              type: string
        - name: sportId
          in: query
          description: Top level organization of a sport
          required: false
          schema:
            type: integer
            format: int32
        - name: withGameTypeDates
          in: query
          description: Retrieve dates for each game type
          required: false
          schema:
            type: boolean
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SeasonsRestObject'





























































  /api/v1/game/{gamePk}/{playId}/analytics/skeletalData/files:
    get:
      tags:
        - Skeletal
      summary: View Skeletal Data by playId and gameId files
      description: This endpoint allows you to pull chunked skeletal tracking data by gameId and playId
      operationId: skeletalDataFileNames
      parameters:
        - name: gamePk
          in: path
          description: Unique Primary Key Representing a Game
          required: true
          schema:
            type: integer
            format: int32
        - name: playId
          in: path
          description: Unique play identifier
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SkeletalFileData'
      security:
        - basicAuth: []
        - bearerAuth: []
  /api/v1/game/{gamePk}/{playId}/analytics/skeletalData/chunked:
    get:
      tags:
        - Skeletal
      summary: View Skeletal Data by playId and gameId chunked
      description: This endpoint allows you to pull chunked skeletal tracking data by gameId and playId
      operationId: skeletalChunked
      parameters:
        - name: gamePk
          in: path
          description: Unique Primary Key Representing a Game
          required: true
          schema:
            type: integer
            format: int32
        - name: playId
          in: path
          description: Unique play identifier
          required: true
          schema:
            type: string
        - name: fileName
          in: query
          description: Skeletal chunked file name
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
      security:
        - basicAuth: []
        - bearerAuth: []






















