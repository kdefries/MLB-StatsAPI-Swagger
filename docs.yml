openapi: 3.0.1
info:
  title: Stats API Documentation
  description: Official API for Major League Baseball.
  version: 2.0.0
servers:
  - url: https://statsapi.mlb.com
    description: Production
  - url: https://beta-statsapi.mlb.com
    description: Beta
  - url: https://qa-statsapi.mlb.com
    description: QA
  - url: http://localhost:8080
    description: Local
tags:
  - name: Reviews
  - name: Bat Tracking
    description: 'Operations pertaining to bat tracking data '
  - name: Attendance
  - name: League
    description: Operations pertaining to leagues
  - name: Predictions
  - name: Sports
    description: Operations pertaining to sports
  - name: Weather
    description: 'Operations pertaining to weather data '
  - name: Misc
  - name: High/Low
    description: Operations pertaining to high/low stats
  - name: Job
    description: Operations pertaining to jobs
  - name: Division
    description: Operations pertaining to divisions
  - name: Game
    description: Operations pertaining to games
  - name: Misc
    description: Config elements
  - name: Homerun Derby
    description: Operations pertaining to home run derby
  - name: Closed
    description: Collapsed tags
    x-tag-expanded: 'false'
  - name: Streaks
    description: Endpoints for stats streaks
  - name: Stats
    description: Operations pertaining to stats
  - name: Venues
    description: Operations pertaining to venues
  - name: Person
    description: Operations pertaining to players
  - name: Awards
    description: Operations pertaining to awards
  - name: Game Pace
  - name: analytics
    description: Operations pertaining to field tracking and analytics.
    x-tag-expanded: 'true'
  - name: Broadcast
    description: Operations pertaining to broadcasts
  - name: Schedule
    description: Operations pertaining to schedules
    x-tag-expanded: 'false'
  - name: Uniforms
    description: Operations pertaining to uniforms
  - name: Draft
    description: Operations pertaining to MLB BaseballDraft
  - name: Teams
    description: Operations pertaining to teams
  - name: Biomechanics
    description: 'Operations pertaining to biomechanical data '
  - name: Standings
    description: Operations pertaining to teams
  - name: Conference
    description: Operations pertaining to conferences
  - name: Transactions
    description: Operations pertaining to transactions
  - name: Skeletal
    description: 'Operations pertaining to skeletal data '
  - name: Season
    description: Operations pertaining to seasons
  - name: Milestones
    description: Operations pertaining to milestones
paths:
  /api/v1/teams/{teamId}/alumni:
    get:
      tags:
        - Teams
      summary: View all team alumni
      operationId: alumni
      parameters:
        - name: teamId
          in: path
          description: 'Unique Team Identifier. Format: 141, 147, etc'
          required: true
          schema:
            type: integer
            format: int32
        - name: season
          in: query
          description: Season of play
          required: true
          schema:
            type: string
        - name: group
          in: query
          description: Category of statistic to return. Available types in /api/v1/statGroups
          required: false
          schema:
            $ref: '#/components/schemas/StatGroup'
        - name: fields
          in: query
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PeopleRestObject'
    post:
      tags:
        - Teams
      operationId: updateAlumni
      parameters:
        - name: teamId
          in: path
          description: 'Unique Team Identifier. Format: 141, 147, etc'
          required: true
          schema:
            type: integer
            format: int32
        - name: season
          in: query
          description: Season of play
          required: true
          schema:
            type: string
        - name: group
          in: query
          description: Category of statistic to return. Available types in /api/v1/statGroups
          required: false
          schema:
            $ref: '#/components/schemas/StatGroup'
        - name: fields
          in: query
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
      security:
        - basicAuth: []
        - bearerAuth: []
  /api/v1/jobTypes:
    get:
      tags:
        - Misc
      summary: List all job types
      operationId: jobTypes
      parameters:
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobTypeRestObject'
    post:
      tags:
        - Misc
      operationId: updateJobTypes
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/v1/gameStatus:
    get:
      tags:
        - Misc
      summary: List all status types
      operationId: gameStatus
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestObject'
    post:
      tags:
        - Misc
      summary: Clear all status types
      operationId: updateGameStatuses
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
      security:
        - basicAuth: []
        - bearerAuth: []
  /api/v1/game/{gamePk}/{guid}/contextMetricsAverages:
    get:
      tags:
        - analytics
      summary: Get a json file containing raw coordinate data and refined calculated metrics.
      description: 'Returns a json file containing raw coordinate data and refined calculated metrics.<br/><br/>This responses can be very large, so it is strongly recommended that you pass "Accept-Encoding: gzip" as a header to have the responses compressed.'
      operationId: contextMetricsWithAverages
      parameters:
        - name: gamePk
          in: path
          description: Unique Primary Key Representing a Game
          required: true
          schema:
            type: integer
            format: int32
        - name: guid
          in: path
          description: Unique identifier for a play within a game
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CalculatedMetricRestObject'
      security:
        - basicAuth: []
        - bearerAuth: []
    post:
      tags:
        - analytics
      summary: Get a json file containing raw coordinate data and refined calculated metrics.
      description: 'Returns a json file containing raw coordinate data and refined calculated metrics.<br/><br/>This responses can be very large, so it is strongly recommended that you pass "Accept-Encoding: gzip" as a header to have the responses compressed.'
      operationId: contextMetricsWithAveragesPost
      parameters:
        - name: gamePk
          in: path
          description: Unique Primary Key Representing a Game
          required: true
          schema:
            type: integer
            format: int32
        - name: guid
          in: path
          description: Unique identifier for a play within a game
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CalculatedMetricRestObject'
      security:
        - basicAuth: []
        - bearerAuth: []
  /api/v1/windDirection:
    get:
      tags:
        - Misc
      summary: List all wind direction options
      operationId: windDirection
      parameters:
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GeneralLookupRestObject'
  /api/v1/weatherTrajectoryConfidences:
    get:
      tags:
        - Misc
      summary: List all weather trajectories
      operationId: weatherTrajectoryConfidences
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WeatherTrajectoryConfidenceTypeRestObject'
  /api/v1/weather/venues/{venueId}/full:
    get:
      tags:
        - Weather
      summary: Get full weather for a venue.
      description: Returns a json file containing full weather for a specific venue.
      operationId: weatherFull
      parameters:
        - name: venueId
          in: path
          description: Unique Venue Identifier
          required: true
          schema:
            type: integer
            format: int32
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/FullWeatherWrapperRestObject'
      security:
        - basicAuth: []
        - bearerAuth: []
  /api/v1/weather/venues/{venueId}/basic:
    get:
      tags:
        - Weather
      summary: Get basic weather for a venue.
      description: Returns a json file containing basic weather for a specific venue.
      operationId: weatherBasic
      parameters:
        - name: venueId
          in: path
          description: Unique Venue Identifier
          required: true
          schema:
            type: integer
            format: int32
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/BasicWeatherWrapperRestObject'
      security:
        - basicAuth: []
        - bearerAuth: []
  /api/v1/weather/game/{gamePk}/{playId}:
    get:
      tags:
        - Weather
      summary: Get the raw field weather data.
      description: Returns a json file containing weather for the current play.
      operationId: weatherDataBasedOnPlay
      parameters:
        - name: gamePk
          in: path
          description: Unique Primary Key Representing a Game
          required: true
          schema:
            type: integer
            format: int32
        - name: playId
          in: path
          description: Unique identifier for a play within a game
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/PlayWeatherWrapperRestObject'
      security:
        - basicAuth: []
        - bearerAuth: []
  /api/v1/weather/game/{gamePk}/forecast/{roofType}:
    get:
      tags:
        - Weather
      summary: Get the weather forecast for a game.
      description: Returns a json file containing the weather forecast for a specific game.
      operationId: weatherForecast
      parameters:
        - name: gamePk
          in: path
          description: Unique Primary Key Representing a Game
          required: true
          schema:
            type: integer
            format: int32
        - name: roofType
          in: path
          description: Venue roof type
          required: true
          schema:
            $ref: '#/components/schemas/RoofType'
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ForecastWeatherWrapperRestObject'
      security:
        - basicAuth: []
        - bearerAuth: []
  /api/v1/violationTypes:
    get:
      tags:
        - Misc
      summary: View available violationType options
      operationId: violationTypes
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ViolationTypeRestObject'
  /api/v1/videoResolutionTypes:
    get:
      tags:
        - Misc
      summary: View video resolution options
      operationId: videoResolutionTypes
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VideoResolutionEnumRestObject'
  /api/v1/venues:
    get:
      tags:
        - Venues
      summary: View venue info
      description: This endpoint allows you to pull venues
      operationId: venues
      parameters:
        - name: venueId
          in: path
          description: Unique Venue Identifier
          required: true
          schema:
            type: integer
            format: int32
        - name: venueIds
          in: query
          description: Comma delimited list of Unique venue identifiers
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: leagueId
          in: query
          description: Unique League Identifier
          required: false
          schema:
            type: integer
            format: int32
        - name: leagueIds
          in: query
          description: Comma delimited list of Unique league identifiers
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: gameType
          in: query
          description: Type of Game. Available types in /api/v1/gameTypes
          required: false
          schema:
            $ref: '#/components/schemas/GameTypeEnum'
        - name: gameTypes
          in: query
          description: Comma delimited list of type of Game. Available types in /api/v1/gameTypes
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/GameTypeEnum'
        - name: season
          in: query
          description: Season of play
          required: false
          schema:
            type: string
        - name: seasons
          in: query
          description: Comma delimited list of Seasons of play
          required: false
          schema:
            type: array
            items:
              type: string
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: active
          in: query
          description: Whether or not a player is active
          required: false
          schema:
            type: boolean
        - name: includeEvents
          in: query
          required: false
          schema:
            type: boolean
        - name: sportId
          in: query
          description: Top level organization of a sport
          required: false
          schema:
            type: integer
            format: int32
        - name: sportIds
          in: query
          description: Comma delimited list of top level organizations of a sport
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/VenuesRestObject'
  /api/v1/venues/{venueId}:
    get:
      tags:
        - Venues
      summary: View venue info
      description: This endpoint allows you to pull venues
      operationId: venues_1
      parameters:
        - name: venueId
          in: path
          description: Unique Venue Identifier
          required: true
          schema:
            type: integer
            format: int32
        - name: venueIds
          in: query
          description: Comma delimited list of Unique venue identifiers
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: leagueId
          in: query
          description: Unique League Identifier
          required: false
          schema:
            type: integer
            format: int32
        - name: leagueIds
          in: query
          description: Comma delimited list of Unique league identifiers
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: gameType
          in: query
          description: Type of Game. Available types in /api/v1/gameTypes
          required: false
          schema:
            $ref: '#/components/schemas/GameTypeEnum'
        - name: gameTypes
          in: query
          description: Comma delimited list of type of Game. Available types in /api/v1/gameTypes
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/GameTypeEnum'
        - name: season
          in: query
          description: Season of play
          required: false
          schema:
            type: string
        - name: seasons
          in: query
          description: Comma delimited list of Seasons of play
          required: false
          schema:
            type: array
            items:
              type: string
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: active
          in: query
          description: Whether or not a player is active
          required: false
          schema:
            type: boolean
        - name: includeEvents
          in: query
          required: false
          schema:
            type: boolean
        - name: sportId
          in: query
          description: Top level organization of a sport
          required: false
          schema:
            type: integer
            format: int32
        - name: sportIds
          in: query
          description: Comma delimited list of top level organizations of a sport
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/VenuesRestObject'
  /api/v1/uniforms/team:
    get:
      tags:
        - Uniforms
      summary: View Team Uniform info
      description: This endpoint allows you to pull team uniform data for a season
      operationId: uniformsByTeam
      parameters:
        - name: teamIds
          in: query
          required: true
          schema:
            type: array
            items:
              type: integer
              format: int32
        - name: season
          in: query
          description: Season of play
          required: false
          schema:
            type: string
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UniformsTeamsRestObject'
  /api/v1/uniforms/game:
    get:
      tags:
        - Uniforms
      summary: View Game Uniform info
      description: This endpoint allows you to pull team uniform data for a game
      operationId: uniformsByGame
      parameters:
        - name: gamePks
          in: query
          description: Comma delimited list of unique primary keys
          required: true
          schema:
            type: array
            items:
              type: integer
              format: int32
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UniformsGamesRestObject'
  /api/v1/transactions:
    get:
      tags:
        - Transactions
      summary: View transaction info
      description: This endpoint allows you to pull transactions.
      operationId: transactions
      parameters:
        - name: leagueId
          in: query
          description: Comma delimited list of Unique league identifiers
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: sportId
          in: query
          description: Comma delimited list of top level organizations of a sport
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: teamId
          in: query
          description: Comma delimited list of Unique Team identifiers
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: playerId
          in: query
          description: A unique identifier for a player
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: date
          in: query
          description: 'Date of Game. Format: YYYY-MM-DD'
          required: false
          schema:
            type: string
            format: date
        - name: startDate
          in: query
          description: 'Start date for range of data (must be used with end date). Format: MM/DD/YYYY'
          required: false
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          description: 'End date for range of data (must be used with start date). Format: MM/DD/YYYY'
          required: false
          schema:
            type: string
            format: date
        - name: transactionIds
          in: query
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: transactionTypes
          in: query
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: divisionIds
          in: query
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: order
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TransactionsRestObject'
  /api/v1/transactionTypes:
    get:
      tags:
        - Misc
      summary: List all transaction types
      operationId: transactionTypes
      parameters:
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GeneralLookupRestObject'
  /api/v1/trackingVersions:
    get:
      tags:
        - Misc
      summary: List all tracking versions
      operationId: trackingVersions
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TrackingVersion'
  /api/v1/trackingVendors:
    get:
      tags:
        - Misc
      summary: List all tracking vendors
      operationId: trackingVendors
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TrackingVendor'
  /api/v1/trackingSystemOwners:
    get:
      tags:
        - Misc
      summary: List all tracking system owners
      operationId: trackingSystemOwners
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TrackingSystemOwner'
  /api/v1/trackingSoftwareVersions:
    get:
      tags:
        - Misc
      summary: List the tracking software versions and notes
      operationId: trackingSoftwareVersions
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TrackingSoftwareVersionRestObject'

  # Teams
  /api/v1/teams/{teamId}/stats:
    $ref: './teams/teams.yml#/paths/~1api~1v1~1teams~1{teamId}~1stats'
  /api/v1/teams/{teamId}/roster:
    $ref: './teams/teams.yml#/paths/~1api~1v1~1teams~1{teamId}~1roster'
  /api/v1/teams/{teamId}/roster/{rosterType}:
    $ref: './teams/teams.yml#/paths/~1api~1v1~1teams~1{teamId}~1roster~1{rosterType}'
  /api/v1/teams/{teamId}/personnel:
    $ref: './teams/teams.yml#/paths/~1api~1v1~1teams~1{teamId}~1personnel'
  /api/v1/teams/{teamId}/leaders:
    $ref: './teams/teams.yml#/paths/~1api~1v1~1teams~1{teamId}~1leaders'
  /api/v1/teams/{teamId}/history:
    $ref: './teams/teams.yml#/paths/~1api~1v1~1teams~1{teamId}~1history'
  /api/v1/teams/history:
    $ref: './teams/teams.yml#/paths/~1api~1v1~1teams~1history'
  /api/v1/teams/{teamId}/coaches:
    $ref: './teams/teams.yml#/paths/~1api~1v1~1teams~1{teamId}~1coaches'
  /api/v1/teams/{teamId}/affiliates:
    $ref: './teams/teams.yml#/paths/~1api~1v1~1teams~1{teamId}~1affiliates'
  /api/v1/teams/affiliates:
    $ref: './teams/teams.yml#/paths/~1api~1v1~1teams~1affiliates'
  /api/v1/teams/stats:
    $ref: './teams/teams.yml#/paths/~1api~1v1~1teams~1stats'
  /api/v1/teams/stats/leaders:
    $ref: './teams/teams.yml#/paths/~1api~1v1~1teams~1stats~1leaders'
  /api/v1/teams:
    $ref: './teams/teams.yml#/paths/~1api~1v1~1teams'
  /api/v1/teams/{teamId}:
    $ref: './teams/teams.yml#/paths/~1api~1v1~1teams~1{teamId}'

  /api/v1/streaks:
    get:
      tags:
        - Streaks
      summary: View streaks
      operationId: getStreaks
      parameters:
        - name: streakOrg
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/OrganizationType'
        - name: streakStat
          in: query
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/StreakStatEnum'
        - name: streakSpan
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/StreakSpanEnum'
        - name: streakLevel
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/StreakLevelEnum'
        - name: streakThreshold
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: inverse
          in: query
          required: false
          schema:
            type: boolean
        - name: startersOnly
          in: query
          required: false
          schema:
            type: boolean
        - name: statGroup
          in: query
          description: Category of statistic to return. Available types in /api/v1/statGroups
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/StatGroup'
        - name: gameType
          in: query
          description: Type of Game. Available types in /api/v1/gameTypes
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/GameTypeEnum'
        - name: season
          in: query
          description: Season of play
          required: false
          schema:
            type: array
            items:
              type: string
        - name: teamId
          in: query
          description: 'Unique Team Identifier. Format: 141, 147, etc'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: leagueId
          in: query
          description: Unique League Identifier
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: sportId
          in: query
          description: Top level organization of a sport
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: activeStreak
          in: query
          description: Whether or not a player is active
          required: false
          schema:
            type: boolean
        - name: limit
          in: query
          description: Number of results to return
          required: false
          schema:
            type: integer
            format: int32
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: playerId
          in: query
          description: A unique identifier for a player
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StreaksWrapperRestObject'
      security:
        - basicAuth: []
        - bearerAuth: []
  /api/v1/streaks/types:
    get:
      tags:
        - Streaks
      summary: View streaks parameter options
      operationId: streakTypes
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: array
                  items:
                    type: object
  /api/v1/stats:
    get:
      tags:
        - Stats
      summary: View stats
      operationId: stats_2
      parameters:
        - name: stats
          in: query
          description: 'Type of statistics. Format: Individual, Team, Career, etc. Available types in /api/v1/statTypes'
          required: true
          schema:
            type: array
            items:
              $ref: '#/components/schemas/StatType'
        - name: personId
          in: query
          description: 'Unique Player Identifier. Format: 434538, 429665, etc'
          required: false
          schema:
            type: integer
            format: int32
        - name: teamId
          in: query
          description: 'Unique Team Identifier. Format: 141, 147, etc'
          required: false
          schema:
            type: integer
            format: int32
        - name: teamIds
          in: query
          description: Comma delimited list of Unique Team identifiers
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: group
          in: query
          description: Category of statistic to return. Available types in /api/v1/statGroups
          required: true
          schema:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/StatGroup'
        - name: gameType
          in: query
          description: Type of Game. Available types in /api/v1/gameTypes
          required: false
          schema:
            $ref: '#/components/schemas/GameTypeEnum'
        - name: season
          in: query
          description: Season of play
          required: false
          schema:
            type: string
        - name: seasons
          in: query
          description: Comma delimited list of Seasons of play
          required: false
          schema:
            type: array
            items:
              type: string
        - name: sportId
          in: query
          description: Top level organization of a sport
          required: false
          schema:
            type: integer
            format: int32
        - name: sportIds
          in: query
          description: Comma delimited list of top level organizations of a sport
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: leagueId
          in: query
          description: Unique League Identifier
          required: false
          schema:
            type: integer
            format: int32
        - name: leagueIds
          in: query
          description: Comma delimited list of Unique league identifiers
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: leagueListId
          in: query
          description: Unique League List Identifier
          required: false
          schema:
            $ref: '#/components/schemas/LeagueListsEnum'
        - name: metrics
          in: query
          description: Name of metric(s) for metric log stats.  Available metrics in /api/v1/metrics
          required: false
          schema:
            type: array
            items:
              $ref: '#/components/schemas/MetricType'
        - name: gamePk
          in: query
          description: Unique Primary Key Representing a Game
          required: false
          schema:
            type: integer
            format: int32
        - name: batterTeamId
          in: query
          description: A unique identifier for the batter's team
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: pitcherTeamId
          in: query
          description: A unique identifier for the pitcher's team
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: batterId
          in: query
          description: 'Unique Player Identifier. Format: 434538, 429665, etc'
          required: false
          schema:
            type: integer
            format: int32
        - name: pitcherId
          in: query
          description: 'Unique Player Identifier. Format: 434538, 429665, etc'
          required: false
          schema:
            type: integer
            format: int32
        - name: sitCodes
          in: query
          description: Situation code for a given stat split.
          required: false
          schema:
            type: array
            items:
              type: string
        - name: combineSits
          in: query
          description: 'If true, gathers stats where all of the situational criteria are met. If false, returns stats where any of the situational criteria are met. Default: false'
          required: false
          schema:
            type: boolean
        - name: opposingTeamId
          in: query
          description: A unique identifier for the opposing team. Must be used with Team ID
          required: false
          schema:
            type: integer
            format: int32
        - name: fields
          in: query
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: sortStat
          in: query
          description: Baseball stat to sort splits by.
          required: false
          schema:
            $ref: '#/components/schemas/BaseballStatsEnum'
        - name: order
          in: query
          description: The order of sorting, ascending or descending
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - name: playerPool
          in: query
          description: Return "ALL" or only "QUALIFIED" players based on plate appearances.
          required: false
          schema:
            $ref: '#/components/schemas/PlayerPoolEnum'
        - name: position
          in: query
          description: 'Position number. Format: 1, 2, 3, etc'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/BaseballPosition'
        - name: startDate
          in: query
          description: 'Start date for range of data (must be used with end date). Format: MM/DD/YYYY'
          required: false
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          description: 'End date for range of data (must be used with start date). Format: MM/DD/YYYY'
          required: false
          schema:
            type: string
            format: date
        - name: daysBack
          in: query
          description: Returns results from the last 'X' days (Starting from yesterday).
          required: false
          schema:
            type: integer
            format: int32
        - name: gamesBack
          in: query
          description: Returns results from the last 'X' games played.
          required: false
          schema:
            type: integer
            format: int32
        - name: excludeTradedPlayers
          in: query
          description: Excludes players who have since been traded from the input team
          required: false
          schema:
            type: boolean
        - name: offset
          in: query
          description: The pointer to start for a return set; used for pagination
          required: false
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          description: Number of results to return
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StatsRestObject'
  /api/v1/stats/search:
    get:
      tags:
        - Stats
      summary: View stats from search
      operationId: beastStats
      parameters:
        - name: group
          in: query
          description: Category of statistic to return. Available types in /api/v1/statGroups
          required: true
          schema:
            type: array
            items:
              $ref: '#/components/schemas/StatGroup'
        - name: gamePks
          in: query
          description: Comma delimited list of unique primary keys
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int32
        - name: playIds
          in: query
          description: Comma delimited list of unique play identifiers
          required: false
          schema:
            type: array
            items:
              type: string
        - name: seasons
          in: query
          description: Comma delimited list of Seasons of play
          required: false
          schema:
            type: array
            items:
              type: string
        - name: gameTypes
          in: query
          description: Type of Game. Available types in /api/v1/gameTypes
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/GameTypeEnum'
        - name: date
          in: query
          description: 'Date of Game. Format: YYYY-MM-DD'
          required: false
          schema:
            type: string
            format: date
        - name: startDate
          in: query
          description: 'Date of Game. Format: YYYY-MM-DD'
          required: false
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          description: 'Date of Game. Format: YYYY-MM-DD'
          required: false
          schema:
            type: string
            format: date
        - name: teamIds
          in: query
          description: 'Unique Team Identifier. Format: 141, 147, etc'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: pitcherTeamIds
          in: query
          description: 'Unique Team Identifier. Format: 141, 147, etc'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: batterTeamIds
          in: query
          description: 'Unique Team Identifier. Format: 141, 147, etc'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: sportIds
          in: query
          description: Comma delimited list of top level organizations of a sport
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: pitcherSportIds
          in: query
          description: Comma delimited list of top level organizations of a sport
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: batterSportIds
          in: query
          description: Comma delimited list of top level organizations of a sport
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: leagueIds
          in: query
          description: Comma delimited list of Unique league identifiers
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: pitcherLeagueIds
          in: query
          description: Comma delimited list of Unique league identifiers
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: batterLeagueIds
          in: query
          description: Comma delimited list of Unique league identifiers
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: divisionIds
          in: query
          description: Comma delimited list of Unique League Identifiers
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: pitcherDivisionIds
          in: query
          description: Comma delimited list of Unique League Identifiers
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: batterDivisionIds
          in: query
          description: Comma delimited list of Unique League Identifiers
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: pitchersOnTeamIds
          in: query
          description: 'Unique Team Identifier. Format: 141, 147, etc'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: battersOnTeamIds
          in: query
          description: 'Unique Team Identifier. Format: 141, 147, etc'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: playerIds
          in: query
          description: A unique identifier for a player
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: playerPool
          in: query
          description: Return "ALL" or only "QUALIFIED" players based on plate appearances.
          required: false
          schema:
            $ref: '#/components/schemas/PlayerPoolEnum'
        - name: pitcherIds
          in: query
          description: A unique identifier for a player
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: batterIds
          in: query
          description: A unique identifier for a player
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: catcherIds
          in: query
          description: A unique identifier for a player
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: firstBasemanIds
          in: query
          description: A unique identifier for a player
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: secondBasemanIds
          in: query
          description: A unique identifier for a player
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: thirdBasemanIds
          in: query
          description: A unique identifier for a player
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: shortstopIds
          in: query
          description: A unique identifier for a player
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: leftFielderIds
          in: query
          description: A unique identifier for a player
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: centerFielderIds
          in: query
          description: A unique identifier for a player
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: rightFielderIds
          in: query
          description: A unique identifier for a player
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: runnerFirstIds
          in: query
          description: A unique identifier for a player
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: runnerSecondIds
          in: query
          description: A unique identifier for a player
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: runnerThirdIds
          in: query
          description: A unique identifier for a player
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: venueIds
          in: query
          description: Unique Venue Identifier
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: pitchHand
          in: query
          description: Handedness of pitcher
          required: false
          schema:
            type: string
        - name: batSide
          in: query
          description: Bat side of hitter
          required: false
          schema:
            type: string
        - name: pitchTypes
          in: query
          description: Classification of pitch (fastball, curveball, etc...)
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/PitchType'
        - name: pitchCodes
          in: query
          description: Result of the pitch (ball, called strike, etc...)
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/PitchCode'
        - name: eventTypes
          in: query
          description: Type of event
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/EventType'
        - name: positions
          in: query
          description: All of the details of a player's position
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/BaseballPosition'
        - name: primaryPositions
          in: query
          description: All of the details of a player's position
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/BaseballPosition'
        - name: minPitchSpeed
          in: query
          description: Minimum value to filter on
          required: false
          schema:
            type: number
            format: double
        - name: maxPitchSpeed
          in: query
          description: Maximum value to filter on
          required: false
          schema:
            type: number
            format: double
        - name: minSpinRate
          in: query
          description: Minimum value to filter on
          required: false
          schema:
            type: number
            format: double
        - name: maxSpinRate
          in: query
          description: Maximum value to filter on
          required: false
          schema:
            type: number
            format: double
        - name: minExtension
          in: query
          description: Minimum value to filter on
          required: false
          schema:
            type: number
            format: double
        - name: maxExtension
          in: query
          description: Maximum value to filter on
          required: false
          schema:
            type: number
            format: double
        - name: minExitVelocityAgainst
          in: query
          description: Minimum value to filter on
          required: false
          schema:
            type: number
            format: double
        - name: maxExitVelocityAgainst
          in: query
          description: Maximum value to filter on
          required: false
          schema:
            type: number
            format: double
        - name: minLaunchAngleAgainst
          in: query
          description: Minimum value to filter on
          required: false
          schema:
            type: number
            format: double
        - name: maxLaunchAngleAgainst
          in: query
          description: Maximum value to filter on
          required: false
          schema:
            type: number
            format: double
        - name: minExitVelocity
          in: query
          description: Minimum value to filter on
          required: false
          schema:
            type: number
            format: double
        - name: maxExitVelocity
          in: query
          description: Maximum value to filter on
          required: false
          schema:
            type: number
            format: double
        - name: minLaunchAngle
          in: query
          description: Minimum value to filter on
          required: false
          schema:
            type: number
            format: double
        - name: maxLaunchAngle
          in: query
          description: Maximum value to filter on
          required: false
          schema:
            type: number
            format: double
        - name: minHomeRunDistance
          in: query
          description: Minimum value to filter on
          required: false
          schema:
            type: number
            format: double
        - name: maxHomeRunDistance
          in: query
          description: Maximum value to filter on
          required: false
          schema:
            type: number
            format: double
        - name: minHitDistance
          in: query
          description: Minimum value to filter on
          required: false
          schema:
            type: number
            format: double
        - name: maxHitDistance
          in: query
          description: Maximum value to filter on
          required: false
          schema:
            type: number
            format: double
        - name: minHangTime
          in: query
          description: Minimum value to filter on
          required: false
          schema:
            type: number
            format: double
        - name: maxHangTime
          in: query
          description: Maximum value to filter on
          required: false
          schema:
            type: number
            format: double
        - name: minHitProbability
          in: query
          description: Minimum value to filter on
          required: false
          schema:
            type: number
            format: double
        - name: maxHitProbability
          in: query
          description: Maximum value to filter on
          required: false
          schema:
            type: number
            format: double
        - name: minCatchProbability
          in: query
          description: Minimum value to filter on
          required: false
          schema:
            type: number
            format: double
        - name: maxCatchProbability
          in: query
          description: Maximum value to filter on
          required: false
          schema:
            type: number
            format: double
        - name: minAttackAngle
          in: query
          description: Minimum value to filter on
          required: false
          schema:
            type: number
            format: double
        - name: maxAttackAngle
          in: query
          description: Maximum value to filter on
          required: false
          schema:
            type: number
            format: double
        - name: minBatSpeed
          in: query
          description: Minimum value to filter on
          required: false
          schema:
            type: number
            format: double
        - name: maxBatSpeed
          in: query
          description: Maximum value to filter on
          required: false
          schema:
            type: number
            format: double
        - name: minHomeRunXBallparks
          in: query
          description: Minimum value to filter on
          required: false
          schema:
            type: number
            format: double
        - name: maxHomeRunXBallparks
          in: query
          description: Maximum value to filter on
          required: false
          schema:
            type: number
            format: double
        - name: isBarrel
          in: query
          description: Whether or not a play resulted in a barreled ball
          required: false
          schema:
            type: boolean
        - name: hitTrajectories
          in: query
          description: Trajectory of hit (line drive, fly ball, etc...)
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/HitTrajectory'
        - name: limit
          in: query
          description: Number of results to return
          required: false
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: The pointer to start for a return set; used for pagination
          required: false
          schema:
            type: integer
            format: int32
        - name: groupBy
          in: query
          description: Group stats by PLAYER, TEAM, SEASON, VENUE, SPORT or STAT_GROUP
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/GroupByEnum'
        - name: compareOver
          in: query
          description: Group stats by PLAYER, TEAM, SEASON, VENUE, SPORT or STAT_GROUP
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/GroupByEnum'
        - name: sortStat
          in: query
          description: Baseball stat to sort splits by.
          required: false
          schema:
            $ref: '#/components/schemas/BaseballStatsEnum'
        - name: sortModifier
          in: query
          description: The prefix modifier for the sort stat.  avg, min, max. I.E minExitVelocity, maxLaunchAngle, avgHitDistance
          required: false
          schema:
            $ref: '#/components/schemas/AggregateSortTypeEnum'
        - name: sortOrder
          in: query
          description: The order of sorting, ascending or descending
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - name: percentile
          in: query
          description: Only return averages above this percentile. used for best effort plays
          required: false
          schema:
            type: integer
            format: int32
        - name: minOccurrences
          in: query
          description: Minimum occurrences to filter upon
          required: false
          schema:
            type: integer
            format: int32
        - name: minPlateAppearances
          in: query
          description: Minimum occurrences to filter upon
          required: false
          schema:
            type: integer
            format: int32
        - name: minInnings
          in: query
          description: Minimum occurrences to filter upon
          required: false
          schema:
            type: integer
            format: int32
        - name: qualifierRate
          in: query
          description: Minimum occurrences to filter upon
          required: false
          schema:
            type: number
            format: double
        - name: sitCodes
          in: query
          description: Situation code for a given stat split.
          required: false
          schema:
            type: array
            items:
              type: string
        - name: showTotals
          in: query
          description: Columns to return totals
          required: false
          schema:
            type: boolean
        - name: includeNullMetrics
          in: query
          description: Show events with null metrics
          required: false
          schema:
            type: boolean
        - name: statFields
          in: query
          description: Baseball stat fields to populate
          required: false
          schema:
            type: array
            items:
              $ref: '#/components/schemas/StatField'
        - name: atBatNumbers
          in: query
          description: 'The at bat number of a given game. Format: 1, 2, 3, etc'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: pitchNumbers
          in: query
          description: 'The pitch number of a given game. Format: 1, 2, 3, etc'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: debug
          in: query
          required: false
          schema:
            type: boolean
        - name: activeStatus
          in: query
          description: Whether or not a player is active
          required: false
          schema:
            $ref: '#/components/schemas/PlayerActiveStatusEnum'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StatContainerRestObject'
      security:
        - basicAuth: []
        - bearerAuth: []
  /api/v1/stats/search/stats:
    get:
      tags:
        - Misc
      summary: List stat search stats
      operationId: statSearchStats
      parameters:
        - name: filterLevel
          in: query
          description: Categories of filters for stat search
          required: false
          schema:
            $ref: '#/components/schemas/FilterLevelEnum'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StatSearchStatRestObject'
  /api/v1/stats/search/params:
    get:
      tags:
        - Misc
      summary: List stat search parameters
      operationId: statSearchParams
      parameters:
        - name: filterLevel
          in: query
          description: Categories of filters for stat search
          required: false
          schema:
            $ref: '#/components/schemas/FilterLevelEnum'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StatSearchParamRestObject'
  /api/v1/stats/search/groupByTypes:
    get:
      tags:
        - Misc
      summary: List groupBy types
      operationId: statSearchGroupByTypes
      parameters:
        - name: filterLevel
          in: query
          description: Categories of filters for stat search
          required: false
          schema:
            $ref: '#/components/schemas/FilterLevelEnum'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GroupByEnum'
  /api/v1/stats/search/config:
    get:
      tags:
        - Misc
      summary: Stats Search Config Endpoint
      operationId: statSearchConfig
      parameters:
        - name: filterLevel
          in: query
          description: Categories of filters for stat search
          required: false
          schema:
            $ref: '#/components/schemas/FilterLevelEnum'
        - name: group
          in: query
          description: Category of statistic to return. Available types in /api/v1/statGroups
          required: false
          schema:
            $ref: '#/components/schemas/StatGroup'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StatSearchConfigRestObject'
  /api/v1/stats/metrics:
    get:
      tags:
        - Stats
      summary: View metric stats
      operationId: metricStats
      parameters:
        - name: personId
          in: query
          description: 'Unique Player Identifier. Format: 434538, 429665, etc'
          required: false
          schema:
            type: integer
            format: int32
        - name: personIds
          in: query
          description: 'Unique Player Identifier. Format: 434538, 429665, etc'
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int32
        - name: batterId
          in: query
          description: 'Unique Player Identifier. Format: 434538, 429665, etc'
          required: false
          schema:
            type: integer
            format: int32
        - name: pitcherId
          in: query
          description: 'Unique Player Identifier. Format: 434538, 429665, etc'
          required: false
          schema:
            type: integer
            format: int32
        - name: teamId
          in: query
          description: 'Unique Team Identifier. Format: 141, 147, etc'
          required: false
          schema:
            type: integer
            format: int32
        - name: stats
          in: query
          description: 'Type of statistics. Format: Individual, Team, Career, etc. Available types in /api/v1/statTypes'
          required: true
          schema:
            type: array
            items:
              $ref: '#/components/schemas/StatType'
        - name: group
          in: query
          description: Category of statistic to return. Available types in /api/v1/statGroups
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/StatGroup'
        - name: season
          in: query
          description: Season of play
          required: false
          schema:
            type: string
        - name: seasons
          in: query
          description: Comma delimited list of Seasons of play
          required: false
          schema:
            type: array
            items:
              type: string
        - name: sportId
          in: query
          description: Top level organization of a sport
          required: false
          schema:
            type: integer
            format: int32
        - name: opposingTeamId
          in: query
          description: A unique identifier for the opposing team. Must be used with Team ID
          required: false
          schema:
            type: integer
            format: int32
        - name: opposingPlayerId
          in: query
          description: A unique identifier for the opposing team
          required: false
          schema:
            type: integer
            format: int32
        - name: position
          in: query
          description: All of the details of a player's position
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/BaseballPosition'
        - name: eventType
          in: query
          description: Type of event
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/EventType'
        - name: pitchType
          in: query
          description: Classification of pitch (fastball, curveball, etc...)
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: hitTrajectory
          in: query
          description: Trajectory of hit (line drive, fly ball, etc...)
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/HitTrajectory'
        - name: batSide
          in: query
          description: Bat side of hitter
          required: false
          schema:
            type: string
        - name: pitchHand
          in: query
          description: Handedness of pitcher
          required: false
          schema:
            type: string
        - name: venueId
          in: query
          description: All of the details of a venue
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: metrics
          in: query
          description: Name of metric(s) for metric log stats.  Available metrics in /api/v1/metrics
          required: true
          schema:
            type: array
            items:
              $ref: '#/components/schemas/MetricType'
        - name: gamePk
          in: query
          description: Unique Primary Key Representing a Game
          required: false
          schema:
            type: integer
            format: int32
        - name: minValue
          in: query
          description: Minimum value to filter on
          required: false
          schema:
            type: number
            format: double
        - name: maxValue
          in: query
          description: Maximum value to filter on
          required: false
          schema:
            type: number
            format: double
        - name: percentile
          in: query
          description: Only return averages above this percentile. used for best effort plays
          required: false
          schema:
            type: integer
            format: int32
        - name: minOccurrences
          in: query
          description: Minimum occurrences to filter upon
          required: false
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: The pointer to start for a return set; used for pagination
          required: false
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          description: Number of results to return
          required: false
          schema:
            type: integer
            format: int32
        - name: order
          in: query
          description: The order of sorting, ascending or descending
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - name: date
          in: query
          description: 'Date of Game. Format: YYYY-MM-DD'
          required: false
          schema:
            type: string
            format: date
        - name: startDate
          in: query
          description: 'Start date for range of data (must be used with end date). Format: MM/DD/YYYY'
          required: false
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          description: 'End date for range of data (must be used with start date). Format: MM/DD/YYYY'
          required: false
          schema:
            type: string
            format: date
        - name: gameType
          in: query
          description: Type of Game. Available types in /api/v1/gameTypes
          required: false
          schema:
            $ref: '#/components/schemas/GameTypeEnum'
        - name: batterTeamId
          in: query
          description: A unique identifier for the batter's team
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: pitcherTeamId
          in: query
          description: A unique identifier for the pitcher's team
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: debug
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StatsRestObject'
      security:
        - basicAuth: []
        - bearerAuth: []
  /api/v1/stats/leaders:
    get:
      tags:
        - Stats
      summary: Get leaders for a statistic
      operationId: leaders_2
      parameters:
        - name: leaderCategories
          in: query
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/PersonLeadersEnum'
        - name: leaderGameTypes
          in: query
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/GameTypeEnum'
        - name: statGroup
          in: query
          required: false
          schema:
            type: array
            items:
              $ref: '#/components/schemas/StatGroup'
        - name: season
          in: query
          required: false
          schema:
            type: string
        - name: expand
          in: query
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/ExpandEnum'
        - name: sportId
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: sportIds
          in: query
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: stats
          in: query
          required: false
          schema:
            type: array
            items:
              $ref: '#/components/schemas/StatType'
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: teamId
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: teamIds
          in: query
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: leagueId
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: leagueIds
          in: query
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: leagueListId
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/LeagueListsEnum'
        - name: playerPool
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/PlayerPoolEnum'
        - name: statType
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/StatType'
        - name: playerActive
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/PlayerActiveStatusEnum'
        - name: position
          in: query
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/BaseballPosition'
        - name: sitCodes
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: opposingTeamId
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: startDate
          in: query
          required: false
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          required: false
          schema:
            type: string
            format: date
        - name: daysBack
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: gamesBack
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: groupBy
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/GroupByEnum'
        - name: fields
          in: query
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LeagueLeaderContainerRestObject'
  /api/v1/stats/grouped:
    get:
      tags:
        - Stats
      summary: View grouped stats
      operationId: groupedStats
      parameters:
        - name: stats
          in: query
          description: 'Type of statistics. Format: Individual, Team, Career, etc. Available types in /api/v1/statTypes'
          required: true
          schema:
            type: array
            items:
              $ref: '#/components/schemas/StatType'
        - name: personId
          in: query
          description: 'Unique Player Identifier. Format: 434538, 429665, etc'
          required: false
          schema:
            type: integer
            format: int32
        - name: teamId
          in: query
          description: 'Unique Team Identifier. Format: 141, 147, etc'
          required: false
          schema:
            type: integer
            format: int32
        - name: teamIds
          in: query
          description: Comma delimited list of Unique Team identifiers
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: group
          in: query
          description: Category of statistic to return. Available types in /api/v1/statGroups
          required: true
          schema:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/StatGroup'
        - name: gameType
          in: query
          description: Type of Game. Available types in /api/v1/gameTypes
          required: false
          schema:
            $ref: '#/components/schemas/GameTypeEnum'
        - name: season
          in: query
          description: Season of play
          required: false
          schema:
            type: string
        - name: seasons
          in: query
          description: Comma delimited list of Seasons of play
          required: false
          schema:
            type: array
            items:
              type: string
        - name: sportId
          in: query
          description: Top level organization of a sport
          required: false
          schema:
            type: integer
            format: int32
        - name: sportIds
          in: query
          description: Comma delimited list of top level organizations of a sport
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: leagueId
          in: query
          description: Unique League Identifier
          required: false
          schema:
            type: integer
            format: int32
        - name: leagueIds
          in: query
          description: Comma delimited list of Unique league identifiers
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: leagueListId
          in: query
          description: Unique League List Identifier
          required: false
          schema:
            $ref: '#/components/schemas/LeagueListsEnum'
        - name: metrics
          in: query
          description: Name of metric(s) for metric log stats.  Available metrics in /api/v1/metrics
          required: false
          schema:
            type: array
            items:
              $ref: '#/components/schemas/MetricType'
        - name: gamePk
          in: query
          description: Unique Primary Key Representing a Game
          required: false
          schema:
            type: integer
            format: int32
        - name: batterTeamId
          in: query
          description: A unique identifier for the batter's team
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: pitcherTeamId
          in: query
          description: A unique identifier for the pitcher's team
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: batterId
          in: query
          description: 'Unique Player Identifier. Format: 434538, 429665, etc'
          required: false
          schema:
            type: integer
            format: int32
        - name: pitcherId
          in: query
          description: 'Unique Player Identifier. Format: 434538, 429665, etc'
          required: false
          schema:
            type: integer
            format: int32
        - name: sitCodes
          in: query
          description: Situation code for a given stat split.
          required: false
          schema:
            type: array
            items:
              type: string
        - name: combineSits
          in: query
          description: 'If true, gathers stats where all of the situational criteria are met. If false, returns stats where any of the situational criteria are met. Default: false'
          required: false
          schema:
            type: boolean
        - name: opposingTeamId
          in: query
          description: A unique identifier for the opposing team. Must be used with Team ID
          required: false
          schema:
            type: integer
            format: int32
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: sortStat
          in: query
          description: Baseball stat to sort splits by.
          required: false
          schema:
            $ref: '#/components/schemas/BaseballStatsEnum'
        - name: order
          in: query
          description: The order of sorting, ascending or descending
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - name: playerPool
          in: query
          description: Return "ALL" or only "QUALIFIED" players based on plate appearances.
          required: false
          schema:
            $ref: '#/components/schemas/PlayerPoolEnum'
        - name: position
          in: query
          description: 'Position number. Format: 1, 2, 3, etc'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/BaseballPosition'
        - name: startDate
          in: query
          description: 'Start date for range of data (must be used with end date). Format: MM/DD/YYYY'
          required: false
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          description: 'End date for range of data (must be used with start date). Format: MM/DD/YYYY'
          required: false
          schema:
            type: string
            format: date
        - name: daysBack
          in: query
          description: Returns results from the last 'X' days (Starting from yesterday).
          required: false
          schema:
            type: integer
            format: int32
        - name: gamesBack
          in: query
          description: Returns results from the last 'X' games played.
          required: false
          schema:
            type: integer
            format: int32
        - name: excludeTradedPlayers
          in: query
          description: Excludes players who have since been traded from the input team
          required: false
          schema:
            type: boolean
        - name: offset
          in: query
          description: The pointer to start for a return set; used for pagination
          required: false
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          description: Number of results to return
          required: false
          schema:
            type: integer
            format: int32
        - name: statFields
          in: query
          description: Baseball stat fields to populate
          required: false
          schema:
            type: array
            items:
              $ref: '#/components/schemas/StatField'
        - name: sortField
          in: query
          description: Baseball statField to sort on.  If no statField is given, sortField defaults to BASIC.  If 1 statField is given, that is the default sortField.
          required: false
          schema:
            $ref: '#/components/schemas/StatField'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StatsRestObject'
  /api/v1/stats/analytics/stolenBaseProbability:
    get:
      tags:
        - Stats
      summary: Get the probability of a hit for the given hit data
      operationId: getStolenBaseProbability
      parameters:
        - name: gamePk
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: timecode
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: integer
                  format: int32
      security:
        - basicAuth: []
        - bearerAuth: []
  /api/v1/stats/analytics/sprayChart:
    get:
      tags:
        - Stats
      summary: Get the spray chart info for the current batter
      operationId: getSprayChart
      parameters:
        - name: gamePk
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: timecode
          in: query
          required: false
          schema:
            type: string
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StatsRestObject'
      security:
        - basicAuth: []
        - bearerAuth: []
  /api/v1/stats/analytics/outsAboveAverage:
    get:
      tags:
        - Stats
      summary: Get outs above average for the current batter
      operationId: getOutsAboveAverage
      parameters:
        - name: gamePk
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: timecode
          in: query
          required: false
          schema:
            type: string
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StatsRestObject'
      security:
        - basicAuth: []
        - bearerAuth: []
  /api/v1/statcastPositionTypes:
    get:
      tags:
        - Misc
      summary: List all statcast position types
      operationId: statcastPositionTypes
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StatcastPositionRestObject'
  /api/v1/statTypes:
    get:
      tags:
        - Misc
      summary: List all stat types
      operationId: statTypes
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StatType'
  /api/v1/statGroups:
    get:
      tags:
        - Misc
      summary: List all stat groups
      operationId: statGroups
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StatGroup'
  /api/v1/statFields:
    get:
      tags:
        - Misc
      summary: List all stat fields
      operationId: statFields
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StatField'
  /api/v1/standingsTypes:
    get:
      tags:
        - Misc
      summary: List all standings types
      operationId: standingsTypes
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StandingsType'
  /api/v1/standings/{standingsType}:
    get:
      tags:
        - Standings
      summary: View standings for a league
      description: This endpoint allows you to pull standings
      operationId: standings
      parameters:
        - name: standingsType
          in: path
          description: Type of season. Available types in /api/v1/standingsTypes
          required: true
          schema:
            type: string
        - name: leagueId
          in: query
          description: Unique League Identifier
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int32
        - name: season
          in: query
          description: Season of play
          required: false
          schema:
            type: string
        - name: standingsTypes
          in: query
          description: Type of season. Available types in /api/v1/standingsTypes
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/StandingsType'
        - name: date
          in: query
          description: 'Date of Game. Format: YYYY-MM-DD'
          required: false
          schema:
            type: string
            format: date
        - name: teamId
          in: query
          description: 'Unique Team Identifier. Format: 141, 147, etc'
          required: false
          schema:
            type: integer
            format: int32
        - name: includeMLB
          in: query
          description: Determines whether to include major league teams when using the 'BY_ORGANIZATION' standings type
          required: false
          schema:
            type: boolean
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StandingsRestObject'
  /api/v1/standings:
    get:
      tags:
        - Standings
      summary: View standings for a league
      description: This endpoint allows you to pull standings
      operationId: standings_1
      parameters:
        - name: standingsType
          in: path
          description: Type of season. Available types in /api/v1/standingsTypes
          required: true
          schema:
            type: string
        - name: leagueId
          in: query
          description: Unique League Identifier
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int32
        - name: season
          in: query
          description: Season of play
          required: false
          schema:
            type: string
        - name: standingsTypes
          in: query
          description: Type of season. Available types in /api/v1/standingsTypes
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/StandingsType'
        - name: date
          in: query
          description: 'Date of Game. Format: YYYY-MM-DD'
          required: false
          schema:
            type: string
            format: date
        - name: teamId
          in: query
          description: 'Unique Team Identifier. Format: 141, 147, etc'
          required: false
          schema:
            type: integer
            format: int32
        - name: includeMLB
          in: query
          description: Determines whether to include major league teams when using the 'BY_ORGANIZATION' standings type
          required: false
          schema:
            type: boolean
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StandingsRestObject'
  /api/v1/sports/{sportId}/players:
    get:
      tags:
        - Sports
      summary: Get all players for a sport level
      description: This endpoint allows you to pull all players for a given sport
      operationId: sportPlayers
      parameters:
        - name: sportId
          in: path
          description: Top level organization of a sport
          required: true
          schema:
            type: integer
            format: int32
        - name: season
          in: query
          description: Season of play
          required: false
          schema:
            type: string
        - name: gameType
          in: query
          description: Type of Game. Available types in /api/v1/gameTypes
          required: false
          schema:
            $ref: '#/components/schemas/GameTypeEnum'
        - name: hasStats
          in: query
          description: Returns sports that have individual player stats
          required: false
          schema:
            type: boolean
        - name: accent
          in: query
          description: Boolean value to specify wanting a person's name with accents or without
          required: false
          schema:
            type: boolean
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PeopleRestObject'
  /api/v1/sports/{sportId}/allSportBallot:
    get:
      tags:
        - Sports
      summary: Get ALL MLB ballot for sport
      description: This endpoint allows you to get all players for MLB ballot
      operationId: allSportBallot
      parameters:
        - name: sportId
          in: path
          description: Top level organization of a sport
          required: true
          schema:
            type: integer
            format: int32
        - name: season
          in: query
          description: season
          required: true
          schema:
            type: string
        - name: fields
          in: query
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PeopleRestObject'
  /api/v1/sports:
    get:
      tags:
        - Sports
      summary: Get sports information
      description: This endpoint allows you to pull sports
      operationId: sports
      parameters:
        - name: sportId
          in: path
          description: Top level organization of a sport
          required: true
          schema:
            type: integer
            format: int32
        - name: season
          in: query
          description: Season of play
          required: false
          schema:
            type: string
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: hasStats
          in: query
          description: Returns sports that have individual player stats
          required: false
          schema:
            type: boolean
        - name: activeStatus
          in: query
          description: Flag for fetching sports that are currently active (Y), inactive (N), pending (P), or all teams (B)
          required: false
          schema:
            $ref: '#/components/schemas/SportActiveStatusEnum'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SportsRestObject'
  /api/v1/sports/{sportId}:
    get:
      tags:
        - Sports
      summary: Get sports information
      description: This endpoint allows you to pull sports
      operationId: sports_1
      parameters:
        - name: sportId
          in: path
          description: Top level organization of a sport
          required: true
          schema:
            type: integer
            format: int32
        - name: season
          in: query
          description: Season of play
          required: false
          schema:
            type: string
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: hasStats
          in: query
          description: Returns sports that have individual player stats
          required: false
          schema:
            type: boolean
        - name: activeStatus
          in: query
          description: Flag for fetching sports that are currently active (Y), inactive (N), pending (P), or all teams (B)
          required: false
          schema:
            $ref: '#/components/schemas/SportActiveStatusEnum'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SportsRestObject'
  /api/v1/sortModifiers:
    get:
      tags:
        - Misc
      summary: List all stat fields
      operationId: aggregateSortEnum
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AggregateSortTypeRestObject'
  /api/v1/sky:
    get:
      tags:
        - Misc
      summary: List all sky options
      operationId: sky
      parameters:
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GeneralLookupRestObject'
  /api/v1/situationCodes:
    get:
      tags:
        - Misc
      summary: List all situation codes
      operationId: sitCodes
      parameters:
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: season
          in: query
          description: Season of play
          required: false
          schema:
            type: string
        - name: statGroup
          in: query
          description: Category of statistic to return. Available types in /api/v1/statGroups
          required: false
          schema:
            $ref: '#/components/schemas/StatGroup'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SituationCodeRestObject'
  /api/v1/seasons/all:
    get:
      tags:
        - Season
      summary: View all seasons
      description: This endpoint allows you to view all seasons for a given Division, League or Sport
      operationId: allSeasons
      parameters:
        - name: divisionId
          in: query
          description: Unique Division Identifier
          required: false
          schema:
            type: integer
            format: int32
        - name: leagueId
          in: query
          description: Unique League Identifier
          required: false
          schema:
            type: integer
            format: int32
        - name: sportId
          in: query
          description: Top level organization of a sport
          required: false
          schema:
            type: integer
            format: int32
        - name: withGameTypeDates
          in: query
          description: Retrieve dates for each game type
          required: false
          schema:
            type: boolean
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SeasonsRestObject'
  /api/v1/seasons:
    get:
      tags:
        - Season
      summary: View season info
      description: This endpoint allows you to pull seasons
      operationId: seasons
      parameters:
        - name: seasonId
          in: path
          description: Season of play
          required: true
          schema:
            type: string
        - name: season
          in: query
          description: Season of play
          required: false
          schema:
            type: array
            items:
              type: string
        - name: sportId
          in: query
          description: Top level organization of a sport
          required: false
          schema:
            type: integer
            format: int32
        - name: withGameTypeDates
          in: query
          description: Retrieve dates for each game type
          required: false
          schema:
            type: boolean
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SeasonsRestObject'
  /api/v1/seasons/{seasonId}:
    get:
      tags:
        - Season
      summary: View season info
      description: This endpoint allows you to pull seasons
      operationId: seasons_1
      parameters:
        - name: seasonId
          in: path
          description: Season of play
          required: true
          schema:
            type: string
        - name: season
          in: query
          description: Season of play
          required: false
          schema:
            type: array
            items:
              type: string
        - name: sportId
          in: query
          description: Top level organization of a sport
          required: false
          schema:
            type: integer
            format: int32
        - name: withGameTypeDates
          in: query
          description: Retrieve dates for each game type
          required: false
          schema:
            type: boolean
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SeasonsRestObject'
  /api/v1/scheduleTypes:
    get:
      tags:
        - Misc
      summary: List all possible schedule types
      operationId: scheduleTypes
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScheduleTypeEnum'
  /api/v1/scheduleEventTypes:
    get:
      tags:
        - Misc
      summary: List all schedule event types
      operationId: scheduleEventTypes
      parameters:
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScheduleEventTypeRestObject'
  /api/v1/schedule/trackingEvents:
    get:
      tags:
        - Schedule
      summary: Get tracking event schedules
      description: This endpoint allows you to pull schedules for tracking events
      operationId: trackingEventsSchedule
      parameters:
        - name: calendarTypes
          in: query
          description: Comma delimited list of type of calendar types
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/CalendarTypes'
        - name: eventTypes
          in: query
          description: 'Comma delimited list of type of events. <b>Note: Don''t Use. This will be deprecated in favor of calendarTypes</b>'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/CalendarTypes'
        - name: teamId
          in: query
          description: 'Unique Team Identifier. Format: 141, 147, etc'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: leagueId
          in: query
          description: Unique League Identifier
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: sportId
          in: query
          description: Top level organization of a sport
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: gamePk
          in: query
          description: Unique Primary Key Representing a Game
          required: false
          schema:
            type: integer
            format: int32
        - name: gamePks
          in: query
          description: Comma delimited list of unique primary keys
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int32
        - name: eventIds
          in: query
          description: A unique identifier for non-game event
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: venueIds
          in: query
          description: Unique Venue Identifier
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: performerIds
          in: query
          description: A unique identifier for non-team event performers
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: gameTypes
          in: query
          description: Comma delimited list of type of Game. Available types in /api/v1/gameTypes
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/GameTypeEnum'
        - name: gameType
          in: query
          description: Type of Game. Available types in /api/v1/gameTypes
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/GameTypeEnum'
        - name: season
          in: query
          description: Season of play
          required: false
          schema:
            type: array
            items:
              type: string
        - name: seasons
          in: query
          description: Comma delimited list of Seasons of play
          required: false
          schema:
            type: array
            items:
              type: string
        - name: date
          in: query
          description: 'Date of Game. Format: YYYY-MM-DD'
          required: false
          schema:
            type: string
            format: date
        - name: startDate
          in: query
          description: 'Start date for range of data (must be used with end date). Format: MM/DD/YYYY'
          required: false
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          description: 'End date for range of data (must be used with start date). Format: MM/DD/YYYY'
          required: false
          schema:
            type: string
            format: date
        - name: timecode
          in: query
          description: 'Use this parameter to return a snapshot of the data at the specified time. Format: YYYYMMDD_HHMMSS'
          required: false
          schema:
            type: string
        - name: useLatestGames
          in: query
          required: false
          schema:
            type: boolean
        - name: opponentId
          in: query
          description: A unique identifier for the opposing team. Must be used with Team ID
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: publicFacing
          in: query
          description: 'Return public, non-public or all games. Format: Public Facing = ''Y'', Non-Public Facing = ''N'', All = ''A'''
          required: false
          schema:
            $ref: '#/components/schemas/PublicFacingEnum'
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ScheduleRestObject'
      security:
        - basicAuth: []
        - bearerAuth: []
  /api/v1/schedule/postseason:
    get:
      tags:
        - Schedule
      summary: Get postseason schedule
      description: This endpoint allows you to pull postseason schedules
      operationId: postseasonSchedule
      parameters:
        - name: gameTypes
          in: query
          description: Comma delimited list of type of Game. Available types in /api/v1/gameTypes
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/GameTypeEnum'
        - name: seriesNumber
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: teamId
          in: query
          description: 'Unique Team Identifier. Format: 141, 147, etc'
          required: false
          schema:
            type: integer
            format: int32
        - name: sportId
          in: query
          description: Unique League Identifier
          required: false
          schema:
            type: integer
            format: int32
        - name: useLatestGames
          in: query
          required: false
          schema:
            type: boolean
        - name: useFeaturedGame
          in: query
          required: false
          schema:
            type: boolean
        - name: season
          in: query
          required: false
          schema:
            type: string
        - name: publicFacing
          in: query
          description: 'Return public, non-public or all games. Format: Public Facing = ''Y'', Non-Public Facing = ''N'', All = ''A'''
          required: false
          schema:
            $ref: '#/components/schemas/PublicFacingEnum'
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ScheduleRestObject'
  /api/v1/schedule/postseason/tuneIn:
    get:
      tags:
        - Schedule
      summary: Get postseason TuneIn schedules
      description: This endpoint allows you to pull postseason schedules
      operationId: tuneIn
      parameters:
        - name: teamId
          in: query
          description: 'Unique Team Identifier. Format: 141, 147, etc'
          required: false
          schema:
            type: integer
            format: int32
        - name: sportId
          in: query
          description: Unique League Identifier
          required: false
          schema:
            type: integer
            format: int32
        - name: season
          in: query
          description: Unique Primary Key Representing a Game
          required: false
          schema:
            type: string
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ScheduleRestObject'
  /api/v1/schedule/postseason/series:
    get:
      tags:
        - Schedule
      summary: Get postseason series schedules
      description: This endpoint allows you to pull postseason schedules
      operationId: postseasonScheduleSeries
      parameters:
        - name: gameTypes
          in: query
          description: Comma delimited list of type of Game. Available types in /api/v1/gameTypes
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/GameTypeEnum'
        - name: seriesNumber
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: teamId
          in: query
          description: 'Unique Team Identifier. Format: 141, 147, etc'
          required: false
          schema:
            type: integer
            format: int32
        - name: sportId
          in: query
          description: Unique League Identifier
          required: false
          schema:
            type: integer
            format: int32
        - name: date
          in: query
          description: 'Date of Game. Format: YYYY-MM-DD'
          required: false
          schema:
            type: string
            format: date
        - name: startDate
          in: query
          description: 'Start date for range of data (must be used with end date). Format: MM/DD/YYYY'
          required: false
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          description: 'End date for range of data (must be used with start date). Format: MM/DD/YYYY'
          required: false
          schema:
            type: string
            format: date
        - name: useLatestGames
          in: query
          required: false
          schema:
            type: boolean
        - name: useFeaturedGame
          in: query
          required: false
          schema:
            type: boolean
        - name: season
          in: query
          required: false
          schema:
            type: string
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PostseasonScheduleRestObject'
  /api/v1/schedule/games/tied:
    get:
      tags:
        - Schedule
      summary: Get tied game schedules
      description: This endpoint allows you to pull tie game schedules for the given season
      operationId: tieGames
      parameters:
        - name: sportId
          in: query
          description: Top level organization of a sport
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: gameTypes
          in: query
          description: Comma delimited list of type of Game. Available types in /api/v1/gameTypes
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/GameTypeEnum'
        - name: season
          in: query
          description: Season of play
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ScheduleRestObject'
  /api/v1/schedule:
    get:
      tags:
        - Schedule
      summary: View schedule info based on scheduleType.
      description: View schedule info. This endpoint allows you to pull schedules
      operationId: schedule
      parameters:
        - name: calendarTypes
          in: query
          description: Comma delimited list of type of calendar types
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/CalendarTypes'
        - name: eventTypes
          in: query
          description: 'Comma delimited list of type of events. <b>Note: Don''t Use. This will be deprecated in favor of calendarTypes</b>'
          required: false
          deprecated: true
          schema:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/CalendarTypes'
        - name: scheduleEventTypes
          in: query
          description: Comma delimited list of type of event types
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/ScheduleEventTypes'
        - name: teamId
          in: query
          description: 'Unique Team Identifier. Format: 141, 147, etc'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: leagueId
          in: query
          description: Unique League Identifier
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: sportId
          in: query
          description: Top level organization of a sport
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: gamePk
          in: query
          description: Unique Primary Key Representing a Game
          required: false
          schema:
            type: integer
            format: int32
        - name: gamePks
          in: query
          description: Comma delimited list of unique primary keys
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int32
        - name: eventIds
          in: query
          description: A unique identifier for non-game event
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: venueIds
          in: query
          description: Unique Venue Identifier
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: performerIds
          in: query
          description: A unique identifier for non-team event performers
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: gameTypes
          in: query
          description: Comma delimited list of type of Game. Available types in /api/v1/gameTypes
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/GameTypeEnum'
        - name: gameType
          in: query
          description: Type of Game. Available types in /api/v1/gameTypes
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/GameTypeEnum'
        - name: season
          in: query
          description: Season of play
          required: false
          schema:
            type: array
            items:
              type: string
        - name: seasons
          in: query
          description: Comma delimited list of Seasons of play
          required: false
          schema:
            type: array
            items:
              type: string
        - name: date
          in: query
          description: 'Date of Game. Format: YYYY-MM-DD'
          required: false
          schema:
            type: string
            format: date
        - name: startDate
          in: query
          description: 'Start date for range of data (must be used with end date). Format: MM/DD/YYYY'
          required: false
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          description: 'End date for range of data (must be used with start date). Format: MM/DD/YYYY'
          required: false
          schema:
            type: string
            format: date
        - name: timecode
          in: query
          description: 'Use this parameter to return a snapshot of the data at the specified time. Format: YYYYMMDD_HHMMSS'
          required: false
          schema:
            type: string
        - name: useLatestGames
          in: query
          required: false
          schema:
            type: boolean
        - name: opponentId
          in: query
          description: A unique identifier for the opposing team. Must be used with Team ID
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: publicFacing
          in: query
          description: 'Return public, non-public or all games. Format: Public Facing = ''Y'', Non-Public Facing = ''N'', All = ''A'''
          required: false
          schema:
            $ref: '#/components/schemas/PublicFacingEnum'
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: usingPrivateEndpoint
          in: query
          required: true
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ScheduleRestObject'
  /api/v1/schedule/{scheduleType}:
    get:
      tags:
        - Schedule
      summary: View schedule info based on scheduleType.
      description: View schedule info. This endpoint allows you to pull schedules
      operationId: schedule_1
      parameters:
        - name: calendarTypes
          in: query
          description: Comma delimited list of type of calendar types
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/CalendarTypes'
        - name: eventTypes
          in: query
          description: 'Comma delimited list of type of events. <b>Note: Don''t Use. This will be deprecated in favor of calendarTypes</b>'
          required: false
          deprecated: true
          schema:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/CalendarTypes'
        - name: scheduleEventTypes
          in: query
          description: Comma delimited list of type of event types
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/ScheduleEventTypes'
        - name: teamId
          in: query
          description: 'Unique Team Identifier. Format: 141, 147, etc'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: leagueId
          in: query
          description: Unique League Identifier
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: sportId
          in: query
          description: Top level organization of a sport
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: gamePk
          in: query
          description: Unique Primary Key Representing a Game
          required: false
          schema:
            type: integer
            format: int32
        - name: gamePks
          in: query
          description: Comma delimited list of unique primary keys
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int32
        - name: eventIds
          in: query
          description: A unique identifier for non-game event
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: venueIds
          in: query
          description: Unique Venue Identifier
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: performerIds
          in: query
          description: A unique identifier for non-team event performers
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: gameTypes
          in: query
          description: Comma delimited list of type of Game. Available types in /api/v1/gameTypes
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/GameTypeEnum'
        - name: gameType
          in: query
          description: Type of Game. Available types in /api/v1/gameTypes
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/GameTypeEnum'
        - name: season
          in: query
          description: Season of play
          required: false
          schema:
            type: array
            items:
              type: string
        - name: seasons
          in: query
          description: Comma delimited list of Seasons of play
          required: false
          schema:
            type: array
            items:
              type: string
        - name: date
          in: query
          description: 'Date of Game. Format: YYYY-MM-DD'
          required: false
          schema:
            type: string
            format: date
        - name: startDate
          in: query
          description: 'Start date for range of data (must be used with end date). Format: MM/DD/YYYY'
          required: false
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          description: 'End date for range of data (must be used with start date). Format: MM/DD/YYYY'
          required: false
          schema:
            type: string
            format: date
        - name: timecode
          in: query
          description: 'Use this parameter to return a snapshot of the data at the specified time. Format: YYYYMMDD_HHMMSS'
          required: false
          schema:
            type: string
        - name: useLatestGames
          in: query
          required: false
          schema:
            type: boolean
        - name: opponentId
          in: query
          description: A unique identifier for the opposing team. Must be used with Team ID
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: publicFacing
          in: query
          description: 'Return public, non-public or all games. Format: Public Facing = ''Y'', Non-Public Facing = ''N'', All = ''A'''
          required: false
          schema:
            $ref: '#/components/schemas/PublicFacingEnum'
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: usingPrivateEndpoint
          in: query
          required: true
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ScheduleRestObject'
  /api/v1/runnerDetailTypes:
    get:
      tags:
        - Misc
      summary: List runner detail types
      operationId: runnerDetailTypes
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RunnerDetailType'
  /api/v1/ruleSettings:
    get:
      tags:
        - Misc
      summary: List all ruleSettings
      operationId: ruleSettings
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RuleSettingsRestObject'
      security:
        - basicAuth: []
        - bearerAuth: []
  /api/v1/rosterTypes:
    get:
      tags:
        - Misc
      summary: List all possible roster types
      operationId: rosterTypes
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RosterType'
  /api/v1/roofTypes:
    get:
      tags:
        - Misc
      summary: List all roof types
      operationId: roofTypes
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RoofTypeRestObject'
  /api/v1/review:
    get:
      tags:
        - Reviews
      summary: Get review info
      operationId: getReviewInfo
      parameters:
        - name: sportId
          in: query
          description: 'Unique Team Identifier. Format: 141, 147, etc'
          required: true
          schema:
            type: integer
            format: int32
        - name: season
          in: query
          description: Comma delimited list of Seasons of play
          required: true
          schema:
            type: string
        - name: gameType
          in: query
          description: Type of Game. Available types in /api/v1/gameTypes
          required: false
          schema:
            $ref: '#/components/schemas/GameTypeEnum'
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StatContainerRestObject'
  /api/v1/reviewReasons:
    get:
      tags:
        - Misc
      summary: List all replay review reasons
      operationId: reviewReasons
      parameters:
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GeneralLookupRestObject'
  /api/v1/props/play/predictions:
    get:
      tags:
        - Predictions
      summary: Get play-level predictions based on input scenarios
      description: This endpoint allows you to get play-level predictions based on input scenarios
      operationId: getProps
      parameters:
        - name: batterId
          in: query
          description: 'Unique Player Identifier. Format: 434538, 429665, etc'
          required: false
          schema:
            type: integer
            format: int32
        - name: pitcherId
          in: query
          description: 'Unique Player Identifier. Format: 434538, 429665, etc'
          required: false
          schema:
            type: integer
            format: int32
        - name: venueId
          in: query
          description: Unique Venue Identifier
          required: false
          schema:
            type: integer
            format: int32
        - name: batSide
          in: query
          description: Bat side of hitter
          required: false
          schema:
            type: string
        - name: pitchHand
          in: query
          description: Handedness of pitcher
          required: false
          schema:
            type: string
        - name: batterPosition
          in: query
          description: 'Position abbreviation. Format: SS, P, 1B, etc'
          required: false
          schema:
            type: string
        - name: pitcherPosition
          in: query
          description: 'Position abbreviation. Format: SS, P, 1B, etc'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
      security:
        - basicAuth: []
        - bearerAuth: []
  /api/v1/props/play/predictions/adjust:
    get:
      tags:
        - Predictions
      summary: Get play-level predictions based on input scenarios
      description: This endpoint allows you to get play-level predictions based on input scenarios
      operationId: getPropsAdjust
      parameters:
        - name: gamePk
          in: query
          description: Unique Primary Key Representing a Game
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
      security:
        - basicAuth: []
        - bearerAuth: []
  /api/v1/positions:
    get:
      tags:
        - Misc
      summary: List all possible positions
      operationId: positions
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BaseballPosition'
  /api/v1/playerStatusCodes:
    get:
      tags:
        - Misc
      summary: List all player status codes
      operationId: playerStatusCodes
      parameters:
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GeneralLookupRestObject'
  /api/v1/platforms:
    get:
      tags:
        - Misc
      summary: List all possible platforms
      operationId: platforms
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Platform'
  /api/v1/pitchTypes:
    get:
      tags:
        - Misc
      summary: List all pitch classification types
      operationId: pitchTypes
      parameters:
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GeneralLookupRestObject'
  /api/v1/pitchCodes:
    get:
      tags:
        - Misc
      summary: List all pitch codes
      operationId: pitchCodes
      parameters:
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PitchCodeRestObject'
  /api/v1/performerTypes:
    get:
      tags:
        - Misc
      summary: List all possible performer types
      operationId: performerTypes
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PerformerType'
  # People
  /api/v1/people:
    $ref: './people/people.yml#/paths/~1api~1v1~1people'
  /api/v1/people/{personId}:
    $ref: './people/people.yml#/paths/~1api~1v1~1people~1{personId}'
  /api/v1/people/{personId}/stats:
    $ref: './people/people.yml#/paths/~1api~1v1~1people~1{personId}~1stats'
  /api/v1/people/{personId}/stats/metrics:
    $ref: './people/people.yml#/paths/~1api~1v1~1people~1{personId}~1stats~1metrics'
  /api/v1/people/{personId}/stats/game/{gamePk}:
    $ref: './people/people.yml#/paths/~1api~1v1~1people~1{personId}~1stats~1game~1{gamePk}'
  /api/v1/people/{personId}/awards:
    $ref: './people/people.yml#/paths/~1api~1v1~1people~1{personId}~1awards'
  /api/v1/people/search:
    $ref: './people/people.yml#/paths/~1api~1v1~1people~1search'
  /api/v1/people/freeAgents:
    $ref: './people/people.yml#/paths/~1api~1v1~1people~1freeAgents'
  /api/v1/people/changes:
    $ref: './people/people.yml#/paths/~1api~1v1~1people~1changes'

  /api/v1/moundVisitTypes:
    get:
      tags:
        - Misc
      summary: List all mound visit types
      operationId: moundVisitTypes
      parameters:
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GeneralLookupRestObject'
  /api/v1/milestones:
    get:
      tags:
        - Milestones
      summary: View pending and achieved milestones.
      operationId: milestones
      parameters:
        - name: orgType
          in: query
          description: 'Organization level. Format: T(Team), L(League), S(Sport)'
          required: false
          schema:
            $ref: '#/components/schemas/OrganizationType'
        - name: achievementStatuses
          in: query
          description: Comma delimited list of milestone achievement types
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/MilestoneAchievementType'
        - name: milestoneTypes
          in: query
          description: Comma delimited list of milestone types
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/MilestoneType'
        - name: isLastAchievement
          in: query
          description: Filters out milestones that have already been surpassed.
          required: false
          schema:
            type: boolean
        - name: milestoneStatistics
          in: query
          description: Comma delimited list of milestone statistics
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/Statistic'
        - name: milestoneValues
          in: query
          description: Comma delimited list of milestone values
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: playerIds
          in: query
          description: A unique identifier for players
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: teamIds
          in: query
          description: Comma delimited list of Unique Team identifiers
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: leagueIds
          in: query
          description: Comma delimited list of Unique league identifiers
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: statGroup
          in: query
          description: Category of statistic to return. Available types in /api/v1/statGroups
          required: false
          schema:
            $ref: '#/components/schemas/StatGroup'
        - name: season
          in: query
          description: Season of play
          required: false
          schema:
            type: string
        - name: seasons
          in: query
          description: Comma delimited list of Seasons of play
          required: false
          schema:
            type: array
            items:
              type: string
        - name: venueIds
          in: query
          description: Comma delimited list of Unique venue identifiers
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: gamePks
          in: query
          description: Comma delimited list of unique primary keys
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int32
        - name: limit
          in: query
          description: Number of results to return
          required: false
          schema:
            type: integer
            format: int32
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: showFirsts
          in: query
          description: True to show play first milestones, like first HR, first Save, etc
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MilestoneContainerRestObject'
  /api/v1/milestoneTypes:
    get:
      tags:
        - Milestones
      summary: View available milestoneType options
      operationId: milestoneTypes
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MilestoneType'
  /api/v1/milestoneStatistics:
    get:
      tags:
        - Milestones
      summary: View available milestone statistics options
      operationId: milestoneStatistics
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MilestoneStatisticRestObject'
  /api/v1/milestoneLookups:
    get:
      tags:
        - Milestones
      summary: View available milestoneLookup options
      operationId: milestoneLookups
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: array
                  items:
                    type: object
  /api/v1/milestoneDurations:
    get:
      tags:
        - Milestones
      summary: View available milestoneDurations options
      operationId: milestoneDurations
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MilestoneDuration'
  /api/v1/metrics:
    get:
      tags:
        - Misc
      summary: List all possible metrics
      operationId: metrics
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestObject'
  /api/v1/mediaState:
    get:
      tags:
        - Misc
      summary: View media state options
      operationId: mediaStateTypes
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MediaStateRestObject'
  /api/v1/lookup/values/all:
    get:
      tags:
        - Misc
      summary: View all lookup values
      operationId: getLookupValues
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: array
                  items:
                    type: object
  /api/v1/logicalEvents:
    get:
      tags:
        - Misc
      summary: List all logical event types
      operationId: logicalEvents
      parameters:
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GeneralLookupRestObject'
  /api/v1/leagueLeaderTypes:
    get:
      tags:
        - Misc
      summary: List all possible player league leader types
      operationId: leagueLeaderTypes
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LeagueLeaderTypeRestObject'
  /api/v1/league/{leagueId}/allStarWriteIns:
    get:
      tags:
        - League
      summary: View all star write ins info
      operationId: allStarWriteIns
      parameters:
        - name: leagueId
          in: path
          description: Unique League Identifier
          required: true
          schema:
            type: integer
            format: int32
        - name: season
          in: query
          description: Season of play
          required: false
          schema:
            type: string
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/v1/leagues/{leagueId}/allStarWriteIns:
    get:
      tags:
        - League
      summary: View all star write ins info
      operationId: allStarWriteIns_1
      parameters:
        - name: leagueId
          in: path
          description: Unique League Identifier
          required: true
          schema:
            type: integer
            format: int32
        - name: season
          in: query
          description: Season of play
          required: false
          schema:
            type: string
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/v1/league/{leagueId}/allStarFinalVote:
    get:
      tags:
        - League
      summary: View all star final vote info
      operationId: allStarFinalVote
      parameters:
        - name: leagueId
          in: path
          description: Unique League Identifier
          required: true
          schema:
            type: integer
            format: int32
        - name: season
          in: query
          description: Season of play
          required: false
          schema:
            type: string
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/v1/leagues/{leagueId}/allStarFinalVote:
    get:
      tags:
        - League
      summary: View all star final vote info
      operationId: allStarFinalVote_1
      parameters:
        - name: leagueId
          in: path
          description: Unique League Identifier
          required: true
          schema:
            type: integer
            format: int32
        - name: season
          in: query
          description: Season of play
          required: false
          schema:
            type: string
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/v1/league/allStarBallot:
    get:
      tags:
        - League
      summary: View al star ballot info
      operationId: allStarBallot
      parameters:
        - name: leagueId
          in: path
          description: Unique League Identifier
          required: true
          schema:
            type: integer
            format: int32
        - name: leagueIds
          in: query
          description: Comma delimited list of Unique league identifiers
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int32
        - name: season
          in: query
          description: Season of play
          required: false
          schema:
            type: string
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/v1/league/{leagueId}/allStarBallot:
    get:
      tags:
        - League
      summary: View al star ballot info
      operationId: allStarBallot_1
      parameters:
        - name: leagueId
          in: path
          description: Unique League Identifier
          required: true
          schema:
            type: integer
            format: int32
        - name: leagueIds
          in: query
          description: Comma delimited list of Unique league identifiers
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int32
        - name: season
          in: query
          description: Season of play
          required: false
          schema:
            type: string
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/v1/leagues/allStarBallot:
    get:
      tags:
        - League
      summary: View al star ballot info
      operationId: allStarBallot_2
      parameters:
        - name: leagueId
          in: path
          description: Unique League Identifier
          required: true
          schema:
            type: integer
            format: int32
        - name: leagueIds
          in: query
          description: Comma delimited list of Unique league identifiers
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int32
        - name: season
          in: query
          description: Season of play
          required: false
          schema:
            type: string
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/v1/leagues/{leagueId}/allStarBallot:
    get:
      tags:
        - League
      summary: View al star ballot info
      operationId: allStarBallot_3
      parameters:
        - name: leagueId
          in: path
          description: Unique League Identifier
          required: true
          schema:
            type: integer
            format: int32
        - name: leagueIds
          in: query
          description: Comma delimited list of Unique league identifiers
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int32
        - name: season
          in: query
          description: Season of play
          required: false
          schema:
            type: string
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/v1/league:
    get:
      tags:
        - League
      summary: View league info
      operationId: league
      parameters:
        - name: leagueId
          in: path
          description: Unique League Identifier
          required: true
          schema:
            type: integer
            format: int32
        - name: leagueIds
          in: query
          description: Comma delimited list of Unique league identifiers
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int32
        - name: season
          in: query
          description: Season of play
          required: false
          schema:
            type: string
        - name: seasons
          in: query
          description: Comma delimited list of Seasons of play
          required: false
          schema:
            type: array
            items:
              type: string
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: sportId
          in: query
          description: Top level organization of a sport
          required: false
          schema:
            type: integer
            format: int32
        - name: activeStatus
          in: query
          description: Flag for fetching leagues that are currently active (Y), inactive (N), pending (P), or all teams (B)
          required: false
          schema:
            $ref: '#/components/schemas/LeagueActiveStatusEnum'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/v1/league/{leagueId}:
    get:
      tags:
        - League
      summary: View league info
      operationId: league_1
      parameters:
        - name: leagueId
          in: path
          description: Unique League Identifier
          required: true
          schema:
            type: integer
            format: int32
        - name: leagueIds
          in: query
          description: Comma delimited list of Unique league identifiers
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int32
        - name: season
          in: query
          description: Season of play
          required: false
          schema:
            type: string
        - name: seasons
          in: query
          description: Comma delimited list of Seasons of play
          required: false
          schema:
            type: array
            items:
              type: string
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: sportId
          in: query
          description: Top level organization of a sport
          required: false
          schema:
            type: integer
            format: int32
        - name: activeStatus
          in: query
          description: Flag for fetching leagues that are currently active (Y), inactive (N), pending (P), or all teams (B)
          required: false
          schema:
            $ref: '#/components/schemas/LeagueActiveStatusEnum'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/v1/leagues:
    get:
      tags:
        - League
      summary: View league info
      operationId: league_2
      parameters:
        - name: leagueId
          in: path
          description: Unique League Identifier
          required: true
          schema:
            type: integer
            format: int32
        - name: leagueIds
          in: query
          description: Comma delimited list of Unique league identifiers
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int32
        - name: season
          in: query
          description: Season of play
          required: false
          schema:
            type: string
        - name: seasons
          in: query
          description: Comma delimited list of Seasons of play
          required: false
          schema:
            type: array
            items:
              type: string
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: sportId
          in: query
          description: Top level organization of a sport
          required: false
          schema:
            type: integer
            format: int32
        - name: activeStatus
          in: query
          description: Flag for fetching leagues that are currently active (Y), inactive (N), pending (P), or all teams (B)
          required: false
          schema:
            $ref: '#/components/schemas/LeagueActiveStatusEnum'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/v1/leagues/{leagueId}:
    get:
      tags:
        - League
      summary: View league info
      operationId: league_3
      parameters:
        - name: leagueId
          in: path
          description: Unique League Identifier
          required: true
          schema:
            type: integer
            format: int32
        - name: leagueIds
          in: query
          description: Comma delimited list of Unique league identifiers
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int32
        - name: season
          in: query
          description: Season of play
          required: false
          schema:
            type: string
        - name: seasons
          in: query
          description: Comma delimited list of Seasons of play
          required: false
          schema:
            type: array
            items:
              type: string
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: sportId
          in: query
          description: Top level organization of a sport
          required: false
          schema:
            type: integer
            format: int32
        - name: activeStatus
          in: query
          description: Flag for fetching leagues that are currently active (Y), inactive (N), pending (P), or all teams (B)
          required: false
          schema:
            $ref: '#/components/schemas/LeagueActiveStatusEnum'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/v1/languages:
    get:
      tags:
        - Misc
      summary: List all support languages
      operationId: languages
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Language'
  /api/v1/jobs:
    get:
      tags:
        - Job
      summary: Get jobs by type
      description: This endpoint allows you to pull teams
      operationId: getJobsByType
      parameters:
        - name: jobType
          in: query
          description: Job Type Identifier (ie. UMPR, etc..)
          required: true
          schema:
            type: string
        - name: sportId
          in: query
          description: Top level organization of a sport
          required: false
          schema:
            type: integer
            format: int32
        - name: date
          in: query
          description: 'Date of Game. Format: YYYY-MM-DD'
          required: false
          schema:
            type: string
            format: date
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RosterRestObject'
  /api/v1/jobs/umpires:
    get:
      tags:
        - Job
      summary: Get umpires
      description: This endpoint allows you to pull teams
      operationId: umpires
      parameters:
        - name: sportId
          in: query
          description: Top level organization of a sport
          required: false
          schema:
            type: integer
            format: int32
        - name: date
          in: query
          description: 'Date of Game. Format: YYYY-MM-DD'
          required: false
          schema:
            type: string
            format: date
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: season
          in: query
          description: Season of play
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RosterRestObject'
  /api/v1/jobs/umpires/games/{umpireId}:
    get:
      tags:
        - Job
      summary: Get umpires and associated game for umpireId
      description: This endpoint allows you to pull teams
      operationId: umpireSchedule
      parameters:
        - name: umpireId
          in: path
          description: A unique identifier for an umpire
          required: true
          schema:
            type: integer
            format: int32
        - name: season
          in: query
          description: Season of play
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ScheduleRestObject'
      security:
        - basicAuth: []
        - bearerAuth: []
  /api/v1/jobs/officialScorers:
    get:
      tags:
        - Job
      summary: Get official scorers
      description: This endpoint allows you to pull teams
      operationId: officialScorers
      parameters:
        - name: sportId
          in: query
          description: Top level organization of a sport
          required: false
          schema:
            type: integer
            format: int32
        - name: date
          in: query
          description: 'Date of Game. Format: YYYY-MM-DD'
          required: false
          schema:
            type: string
            format: date
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RosterRestObject'
  /api/v1/jobs/datacasters:
    get:
      tags:
        - Job
      summary: Get datacaster jobs
      description: Get datacaster jobs
      operationId: datacasters
      parameters:
        - name: sportId
          in: query
          description: Top level organization of a sport
          required: false
          schema:
            type: integer
            format: int32
        - name: date
          in: query
          description: 'Date of Game. Format: YYYY-MM-DD'
          required: false
          schema:
            type: string
            format: date
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RosterRestObject'
  /api/v1/homeRunDerby/{gamePk}/pool:
    get:
      tags:
        - Homerun Derby
      summary: View home run derby pool
      description: This endpoint allows you to pull home run derby information
      operationId: homeRunDerbyPool
      parameters:
        - name: gamePk
          in: path
          description: Unique Primary Key Representing a Game
          required: true
          schema:
            type: integer
            format: int32
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/HomeRunDerbyRestObject'
  /api/v1/homeRunDerby/pool:
    get:
      tags:
        - Homerun Derby
      summary: View home run derby pool
      description: This endpoint allows you to pull home run derby information
      operationId: homeRunDerbyPool_1
      parameters:
        - name: gamePk
          in: path
          description: Unique Primary Key Representing a Game
          required: true
          schema:
            type: integer
            format: int32
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/HomeRunDerbyRestObject'
  /api/v1/homeRunDerby/{gamePk}/mixed:
    get:
      tags:
        - Homerun Derby
      summary: View home run derby mixed mode (Bracket/Pool combo)
      description: This endpoint allows you to pull home run derby information
      operationId: homeRunDerbyMixedMode
      parameters:
        - name: gamePk
          in: path
          description: Unique Primary Key Representing a Game
          required: true
          schema:
            type: integer
            format: int32
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/HomeRunDerbyRestObject'
  /api/v1/homeRunDerby/mixed:
    get:
      tags:
        - Homerun Derby
      summary: View home run derby mixed mode (Bracket/Pool combo)
      description: This endpoint allows you to pull home run derby information
      operationId: homeRunDerbyMixedMode_1
      parameters:
        - name: gamePk
          in: path
          description: Unique Primary Key Representing a Game
          required: true
          schema:
            type: integer
            format: int32
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/HomeRunDerbyRestObject'
  /api/v1/homeRunDerby/{gamePk}:
    get:
      tags:
        - Homerun Derby
      summary: View a home run derby object
      description: This endpoint allows you to pull home run derby information
      operationId: homeRunDerbyBracket
      parameters:
        - name: gamePk
          in: path
          description: Unique Primary Key Representing a Game
          required: true
          schema:
            type: integer
            format: int32
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/HomeRunDerbyRestObject'
  /api/v1/homeRunDerby:
    get:
      tags:
        - Homerun Derby
      summary: View a home run derby object
      description: This endpoint allows you to pull home run derby information
      operationId: homeRunDerbyBracket_1
      parameters:
        - name: gamePk
          in: path
          description: Unique Primary Key Representing a Game
          required: true
          schema:
            type: integer
            format: int32
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/HomeRunDerbyRestObject'
  /api/v1/homeRunDerby/{gamePk}/bracket:
    get:
      tags:
        - Homerun Derby
      summary: View a home run derby object
      description: This endpoint allows you to pull home run derby information
      operationId: homeRunDerbyBracket_2
      parameters:
        - name: gamePk
          in: path
          description: Unique Primary Key Representing a Game
          required: true
          schema:
            type: integer
            format: int32
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/HomeRunDerbyRestObject'
  /api/v1/homeRunDerby/bracket:
    get:
      tags:
        - Homerun Derby
      summary: View a home run derby object
      description: This endpoint allows you to pull home run derby information
      operationId: homeRunDerbyBracket_3
      parameters:
        - name: gamePk
          in: path
          description: Unique Primary Key Representing a Game
          required: true
          schema:
            type: integer
            format: int32
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/HomeRunDerbyRestObject'
  /api/v1/hitTrajectories:
    get:
      tags:
        - Misc
      summary: List all hit trajectories
      operationId: hitTrajectories
      parameters:
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GeneralLookupRestObject'
  /api/v1/highLow/{highLowType}:
    get:
      tags:
        - High/Low
      summary: View high/low stats by player or team
      operationId: highLow
      parameters:
        - name: highLowType
          in: path
          description: Type of high/low stats ('player', 'team', 'game')
          required: true
          schema:
            $ref: '#/components/schemas/HighLowTypeEnum'
        - name: statGroup
          in: query
          description: Comma delimited list of  categories of statistic to return. Available types in /api/v1/statGroups
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/StatGroup'
        - name: sortStat
          in: query
          description: Comma delimited list of baseball stats to sort splits by.
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/HighLowStatEnum'
        - name: season
          in: query
          description: Comma delimited list of Seasons of play
          required: false
          schema:
            type: array
            items:
              type: string
        - name: gameType
          in: query
          description: Comma delimited list of type of Game. Available types in /api/v1/gameTypes
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/GameTypeEnum'
        - name: teamId
          in: query
          description: 'Unique Team Identifier. Format: 141, 147, etc'
          required: false
          schema:
            type: integer
            format: int32
        - name: leagueId
          in: query
          description: Unique League Identifier
          required: false
          schema:
            type: integer
            format: int32
        - name: sportId
          in: query
          description: Top level organization of a sport
          required: false
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: The pointer to start for a return set; used for pagination
          required: false
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          description: Number of results to return
          required: false
          schema:
            type: integer
            format: int32
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/HighLowWrapperRestObject'
  /api/v1/highLow/types:
    get:
      tags:
        - High/Low
      summary: View high/low stat types
      operationId: highLowStats
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BaseballStatsTypeRestObject'
  /api/v1/groupByTypes:
    get:
      tags:
        - Misc
      summary: List groupBy types
      operationId: groupByTypes
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GroupByEnum'
  /api/v1/gamedayTypes:
    get:
      tags:
        - Misc
      summary: List all gameday types
      operationId: gamedayTypes
      parameters:
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GeneralLookupRestObject'
  /api/v1/gameTypes:
    get:
      tags:
        - Misc
      summary: List all game types
      operationId: gameTypes
      parameters:
        - name: sportId
          in: query
          description: Top level organization of a sport
          required: false
          schema:
            type: integer
            format: int32
        - name: leagueId
          in: query
          description: Unique League Identifier
          required: false
          schema:
            type: integer
            format: int32
        - name: season
          in: query
          description: Season of play
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GameTypeEnum'
  /api/v1/gamePace:
    get:
      tags:
        - Game Pace
      summary: View time of game info
      operationId: gamePace
      parameters:
        - name: season
          in: query
          description: Season of play
          required: false
          schema:
            type: string
        - name: teamId
          in: query
          description: 'Unique Team Identifier. Format: 141, 147, etc'
          required: false
          schema:
            type: integer
            format: int32
        - name: teamIds
          in: query
          description: Comma delimited list of Unique Team identifiers
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: leagueId
          in: query
          description: Unique League Identifier
          required: false
          schema:
            type: integer
            format: int32
        - name: leagueIds
          in: query
          description: Comma delimited list of Unique league identifiers
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: leagueListId
          in: query
          description: Unique League List Identifier
          required: false
          schema:
            $ref: '#/components/schemas/LeagueListsEnum'
        - name: sportId
          in: query
          description: Top level organization of a sport
          required: false
          schema:
            type: integer
            format: int32
        - name: sportIds
          in: query
          description: Comma delimited list of top level organizations of a sport
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: gameType
          in: query
          description: Type of Game. Available types in /api/v1/gameTypes
          required: false
          schema:
            $ref: '#/components/schemas/GameTypeEnum'
        - name: startDate
          in: query
          description: 'Start date for range of data (must be used with end date). Format: MM/DD/YYYY'
          required: false
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          description: 'End date for range of data (must be used with start date). Format: MM/DD/YYYY'
          required: false
          schema:
            type: string
            format: date
        - name: venueIds
          in: query
          description: Comma delimited list of Unique venue identifiers
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: excludeVenueIds
          in: query
          description: Comma delimited list of Unique venue identifiers
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: excludeGamePks
          in: query
          description: Comma delimited list of unique primary keys
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: orgType
          in: query
          description: 'Organization level. Format: T(Team), L(League), S(Sport)'
          required: false
          schema:
            $ref: '#/components/schemas/OrganizationType'
        - name: includeChildren
          in: query
          description: Determines weather to include results from an organization's children (ex. a sport would also include results for the teams and leagues)
          required: false
          schema:
            type: boolean
            default: false
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GamePaceWrapperRestObject'
  /api/v1/game/{game_pk}/playByPlay:
    get:
      tags:
        - Game
      summary: Get game play By Play
      description: This endpoint allows you to pull the play by play of a game
      operationId: playByPlay
      parameters:
        - name: game_pk
          in: path
          description: Unique Primary Key Representing a Game
          required: true
          schema:
            type: integer
            format: int32
        - name: timecode
          in: query
          description: 'Use this parameter to return a snapshot of the data at the specified time. Format: YYYYMMDD_HHMMSS'
          required: false
          schema:
            type: string
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: inclusiveTimecode
          in: query
          description: True to include plays that happen before or at the specified timecode
          required: false
          schema:
            type: boolean
        - name: accent
          in: query
          description: Boolean value to specify wanting a person's name with accents or without
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/BaseballPlayByPlayRestObject'
  /api/v1/game/{game_pk}/linescore:
    get:
      tags:
        - Game
      summary: Get game linescore
      description: This endpoint allows you to pull the linescore for a game
      operationId: linescore
      parameters:
        - name: game_pk
          in: path
          description: Unique Primary Key Representing a Game
          required: true
          schema:
            type: integer
            format: int32
        - name: timecode
          in: query
          description: 'Use this parameter to return a snapshot of the data at the specified time. Format: YYYYMMDD_HHMMSS'
          required: false
          schema:
            type: string
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: inclusiveTimecode
          in: query
          description: True to include plays that happen before or at the specified timecode
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/BaseballLinescoreRestObject'
  /api/v1/game/{game_pk}/feed/color:
    get:
      tags:
        - Game
      summary: Get game color feed.
      description: 'This API can return very large payloads.  It is STRONGLY recommended that clients ask for diffs and use "Accept-Encoding: gzip" header.'
      operationId: colorFeed
      parameters:
        - name: game_pk
          in: path
          description: Unique Primary Key Representing a Game
          required: true
          schema:
            type: integer
            format: int32
        - name: timecode
          in: query
          description: 'Use this parameter to return a snapshot of the data at the specified time. Format: YYYYMMDD_HHMMSS'
          required: false
          schema:
            type: string
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                type: string
  /api/v1/game/{game_pk}/feed/color/timestamps:
    get:
      tags:
        - Game
      summary: Retrieve all of the color timestamps for a game.
      description: This can be used for replaying games.  Endpoint returns all of the timecodes that can be used with diffs for /v1/game/{game_pk}/feed/color
      operationId: colorTimestamps
      parameters:
        - name: game_pk
          in: path
          description: Unique Primary Key Representing a Game
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                type: array
                items:
                  type: string
  /api/v1/game/{game_pk}/content:
    get:
      tags:
        - Game
      summary: Retrieve all content for a game.
      operationId: content
      parameters:
        - name: game_pk
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: highlightLimit
          in: query
          description: Number of results to return
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/GameContentRestObject'
  /api/v1/game/{game_pk}/boxscore:
    get:
      tags:
        - Game
      summary: Get game boxscore.
      description: This endpoint allows you to pull a boxscore
      operationId: boxscore
      parameters:
        - name: game_pk
          in: path
          description: Unique Primary Key Representing a Game
          required: true
          schema:
            type: integer
            format: int32
        - name: timecode
          in: query
          description: 'Use this parameter to return a snapshot of the data at the specified time. Format: YYYYMMDD_HHMMSS'
          required: false
          schema:
            type: string
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: inclusiveTimecode
          in: query
          description: True to include plays that happen before or at the specified timecode
          required: false
          schema:
            type: boolean
        - name: numPlayers
          in: query
          description: Number of top player game scores to show. Default is 3.
          required: false
          schema:
            type: integer
            format: int32
            default: 3
        - name: noTies
          in: query
          description: If set to false, will show all players tied for the last spot in the game scores list.
          required: false
          schema:
            type: boolean
        - name: accent
          in: query
          description: Boolean value to specify wanting a person's name with accents or without
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/BaseballBoxscoreRestObject'
  /api/v1/game/{gamePk}/{playId}/analytics/skeletalData/files:
    get:
      tags:
        - Skeletal
      summary: View Skeletal Data by playId and gameId files
      description: This endpoint allows you to pull chunked skeletal tracking data by gameId and playId
      operationId: skeletalDataFileNames
      parameters:
        - name: gamePk
          in: path
          description: Unique Primary Key Representing a Game
          required: true
          schema:
            type: integer
            format: int32
        - name: playId
          in: path
          description: Unique play identifier
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SkeletalFileData'
      security:
        - basicAuth: []
        - bearerAuth: []
  /api/v1/game/{gamePk}/{playId}/analytics/skeletalData/chunked:
    get:
      tags:
        - Skeletal
      summary: View Skeletal Data by playId and gameId chunked
      description: This endpoint allows you to pull chunked skeletal tracking data by gameId and playId
      operationId: skeletalChunked
      parameters:
        - name: gamePk
          in: path
          description: Unique Primary Key Representing a Game
          required: true
          schema:
            type: integer
            format: int32
        - name: playId
          in: path
          description: Unique play identifier
          required: true
          schema:
            type: string
        - name: fileName
          in: query
          description: Skeletal chunked file name
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
      security:
        - basicAuth: []
        - bearerAuth: []
  /api/v1/game/{gamePk}/{playId}/analytics/biomechanics/{positionId}:
    get:
      tags:
        - Biomechanics
      summary: View Biomechanical data by playId and gameId filtered by player positionId
      description: This endpoint allows you to pull biomechanical tracking data by gameId and playId filtered by player positionId
      operationId: biomechanical
      parameters:
        - name: gamePk
          in: path
          description: Unique Primary Key Representing a Game
          required: true
          schema:
            type: integer
            format: int32
        - name: playId
          in: path
          description: Unique play identifier
          required: true
          schema:
            type: string
        - name: positionId
          in: path
          description: 'Position number. Format: 1, 2, 3, etc'
          required: true
          schema:
            type: integer
            format: int32
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SkeletalDataWrapperRestObject'
      security:
        - basicAuth: []
        - bearerAuth: []
  /api/v1/game/{gamePk}/{guid}/homeRunBallparks:
    get:
      tags:
        - analytics
      summary: Get if the play is a home run is each park for a specific play.
      description: 'Returns a json file containing raw coordinate data and refined calculated metrics.<br/><br/>This responses can be very large, so it is strongly recommended that you pass "Accept-Encoding: gzip" as a header to have the responses compressed.'
      operationId: homeRunBallparks
      parameters:
        - name: gamePk
          in: path
          description: Unique Primary Key Representing a Game
          required: true
          schema:
            type: integer
            format: int32
        - name: guid
          in: path
          description: Unique identifier for a play within a game
          required: true
          schema:
            type: string
        - name: isHomeRunParks
          in: query
          required: true
          schema:
            type: boolean
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/VenuesRestObject'
  /api/v1/game/{gamePk}/{guid}/contextMetrics:
    get:
      tags:
        - analytics
      summary: Get context metrics for a specific gamePk.
      description: 'Returns a json file containing raw coordinate data and refined calculated metrics.<br/><br/>This responses can be very large, so it is strongly recommended that you pass "Accept-Encoding: gzip" as a header to have the responses compressed.'
      operationId: contextMetrics
      parameters:
        - name: gamePk
          in: path
          description: Unique Primary Key Representing a Game
          required: true
          schema:
            type: integer
            format: int32
        - name: guid
          in: path
          description: Unique identifier for a play within a game
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CalculatedMetricRestObject'
      security:
        - basicAuth: []
        - bearerAuth: []
  /api/v1/game/{gamePk}/{guid}/analytics:
    get:
      tags:
        - analytics
      summary: Get Statcast data for a specific play.
      description: 'Returns a json file containing raw coordinate data and refined calculated metrics.<br/><br/>This responses can be very large, so it is strongly recommended that you pass "Accept-Encoding: gzip" as a header to have the responses compressed.'
      operationId: parsedJsonFormattedAnalytics
      parameters:
        - name: gamePk
          in: path
          description: Unique Primary Key Representing a Game
          required: true
          schema:
            type: integer
            format: int32
        - name: guid
          in: path
          description: Unique identifier for a play within a game
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/AnalyticsRestObject'
      security:
        - basicAuth: []
        - bearerAuth: []
  /api/v1/game/{gamePk}/withMetrics:
    get:
      tags:
        - Game
      summary: Get game info with metrics
      operationId: getGameWithMetrics
      parameters:
        - name: gamePk
          in: path
          description: Unique Primary Key Representing a Game
          required: true
          schema:
            type: integer
            format: int32
        - name: timecode
          in: query
          description: 'Use this parameter to return a snapshot of the data at the specified time. Format: YYYYMMDD_HHMMSS'
          required: false
          schema:
            type: string
        - name: inclusiveTimecode
          in: query
          description: True to include plays that happen before or at the specified timecode
          required: false
          schema:
            type: boolean
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: accent
          in: query
          description: Boolean value to specify wanting a person's name with accents or without
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BaseballGameRestObject'
  /api/v1/game/{gamePk}/winProbability:
    get:
      tags:
        - Game
      summary: Get the win probability for this game
      operationId: getWinProbability
      parameters:
        - name: gamePk
          in: path
          description: Unique Primary Key Representing a Game
          required: true
          schema:
            type: integer
            format: int32
        - name: timecode
          in: query
          description: 'Use this parameter to return a snapshot of the data at the specified time. Format: YYYYMMDD_HHMMSS'
          required: false
          schema:
            type: string
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: inclusiveTimecode
          in: query
          description: True to include plays that happen before or at the specified timecode
          required: false
          schema:
            type: boolean
        - name: accent
          in: query
          description: Boolean value to specify wanting a person's name with accents or without
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BaseballPlayRestObject'
  /api/v1/game/{gamePk}/guids:
    get:
      tags:
        - analytics
      summary: 'Get the GUIDs (plays) for a specific game. '
      operationId: gameGuids
      parameters:
        - name: gamePk
          in: path
          description: Unique Primary Key Representing a Game
          required: true
          schema:
            type: integer
            format: int32
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: gameModeId
          in: query
          description: 'Statcast game mode. Format: 0 = Batting Practive, 1 = Warmup 2 = Live'
          required: false
          schema:
            type: integer
            format: int32
        - name: isPitch
          in: query
          description: If there was a pitch
          required: false
          schema:
            type: boolean
        - name: isHit
          in: query
          description: If there was a hit ball tracked
          required: false
          schema:
            type: boolean
        - name: isPickoff
          in: query
          description: If there was a pickoff
          required: false
          schema:
            type: boolean
        - name: hasUpdates
          in: query
          description: True if updated by an auditor
          required: false
          schema:
            type: boolean
        - name: since
          in: query
          description: 'Returns all data that was created after the specified timestamp. Format: YYYY-MM-DDTHH:MM:SSZ'
          required: false
          schema:
            type: string
            format: date-time
        - name: updatedSince
          in: query
          description: 'Return data updated since a specified date. Format: YYYY-MM-DDTHH:MM:SSZ'
          required: false
          schema:
            type: string
            format: date-time
        - name: lastPlayTime
          in: query
          description: 'Returns all data that was created after the specified timestamp. Format: YYYY-MM-DDTHH:MM:SSZ'
          required: false
          schema:
            type: string
            format: date-time
        - name: lastUpdatedTime
          in: query
          description: 'Return data updated since a specified date. Format: YYYY-MM-DDTHH:MM:SSZ'
          required: false
          schema:
            type: string
            format: date-time
        - name: lastMetricsUpdatedTime
          in: query
          description: 'Return data updated since a specified date. Format: YYYY-MM-DDTHH:MM:SSZ'
          required: false
          schema:
            type: string
            format: date-time
        - name: lastAuditUpdatedTime
          in: query
          description: 'Return data updated since a specified date. Format: YYYY-MM-DDTHH:MM:SSZ'
          required: false
          schema:
            type: string
            format: date-time
        - name: lastVideoUpdatedTime
          in: query
          description: The last time SportyBot video was updated
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AnalyticsPlayMetadataRestObject'
      security:
        - basicAuth: []
        - bearerAuth: []
  /api/v1/game/{gamePk}/contextMetrics:
    get:
      tags:
        - Game
      summary: Get the context metrics for this game based on its current state
      operationId: getGameContextMetrics
      parameters:
        - name: gamePk
          in: path
          description: Unique Primary Key Representing a Game
          required: true
          schema:
            type: integer
            format: int32
        - name: timecode
          in: query
          description: 'Use this parameter to return a snapshot of the data at the specified time. Format: YYYYMMDD_HHMMSS'
          required: false
          schema:
            type: string
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BaseballGameContextRestObject'
  /api/v1/game/lastPitch:
    get:
      tags:
        - analytics
      summary: Get the last pitch for a list of games
      operationId: gameLastPitch
      parameters:
        - name: gamePks
          in: query
          description: Unique Primary Key Representing a Game
          required: true
          schema:
            type: array
            items:
              type: integer
              format: int32
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AnalyticsPlayMetadataRestObject'
      security:
        - basicAuth: []
        - bearerAuth: []
  /api/v1/game/changes:
    get:
      tags:
        - Game
      summary: View a game change log
      operationId: currentGameStats_1
      parameters:
        - name: updatedSince
          in: query
          description: 'Format: YYYY-MM-DDTHH:MM:SSZ'
          required: false
          schema:
            type: string
            format: date-time
        - name: sportId
          in: query
          description: Top level organization of a sport
          required: false
          schema:
            type: integer
            format: int32
        - name: sportIds
          in: query
          description: Comma delimited list of top level organizations of a sport
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int32
        - name: gameType
          in: query
          description: Type of Game. Available types in /api/v1/gameTypes
          required: false
          schema:
            $ref: '#/components/schemas/GameTypeEnum'
        - name: gameTypes
          in: query
          description: Comma delimited list of type of Game. Available types in /api/v1/gameTypes
          required: false
          schema:
            type: array
            items:
              $ref: '#/components/schemas/GameTypeEnum'
        - name: season
          in: query
          description: Season of play
          required: false
          schema:
            type: string
        - name: gamePks
          in: query
          description: Comma delimited list of unique primary keys
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: limit
          in: query
          description: Number of results to return
          required: false
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: The pointer to start for a return set; used for pagination
          required: false
          schema:
            type: integer
            format: int32
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ScheduleRestObject'
  /api/v1/freeGameTypes:
    get:
      tags:
        - Misc
      summary: View free game types
      operationId: freeGameTypes
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FreeGameTypeRestObject'
  /api/v1/fielderDetailTypes:
    get:
      tags:
        - Misc
      summary: List fielder detail types
      operationId: fielderDetailTypes
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FielderDetailType'
  /api/v1/eventTypes:
    get:
      tags:
        - Misc
      summary: List all event types
      operationId: eventTypes
      parameters:
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                type: string
  /api/v1/eventStatus:
    get:
      tags:
        - Misc
      summary: List all possible event status types
      operationId: eventStatus
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IGameStatus'
  /api/v1/draft/{year}/latest:
    get:
      tags:
        - Draft
      summary: Get the last drafted player and the next 5 teams up to pick
      operationId: latestDraftPicks
      parameters:
        - name: year
          in: path
          description: 'Year the player was drafted. Format: 2000'
          required: true
          schema:
            type: integer
            format: int32
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BaseballDraftLatestRestObject'
  /api/v1/draft/prospects:
    get:
      tags:
        - Draft
      summary: View MLB Draft Prospects
      operationId: draftProspects
      parameters:
        - name: year
          in: path
          description: 'Year the player was drafted. Format: 2000'
          required: true
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          description: Number of results to return
          required: false
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: The pointer to start for a return set; used for pagination
          required: false
          schema:
            type: integer
            format: int32
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: order
          in: query
          description: The order of sorting, ascending or descending
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - name: sortBy
          in: query
          description: Sort the set of data by the specified field
          required: false
          schema:
            type: string
        - name: drafted
          in: query
          description: Whether or not the players been drafted
          required: false
          schema:
            type: boolean
        - name: round
          in: query
          description: Round in which a player was drafted
          required: false
          schema:
            type: string
        - name: name
          in: query
          description: Filter players by the first letter of their name using using the specific character
          required: false
          schema:
            type: string
        - name: school
          in: query
          description: Filter players by the first letter of their school using using the specific character
          required: false
          schema:
            type: string
        - name: position
          in: query
          description: 'Position number. Format: 1, 2, 3, etc'
          required: false
          schema:
            $ref: '#/components/schemas/BaseballPosition'
        - name: team
          in: query
          description: 'Unique Team Code. Format: tor, nya, etc'
          required: false
          schema:
            type: string
        - name: teamId
          in: query
          description: 'Unique Team Identifier. Format: 141, 147, etc'
          required: false
          schema:
            type: integer
            format: int32
        - name: state
          in: query
          description: 'State where the venue is located. Format: Ohio'
          required: false
          schema:
            type: string
        - name: country
          in: query
          description: Filter players by their home country
          required: false
          schema:
            type: string
        - name: playerId
          in: query
          description: A unique identifier for a player
          required: false
          schema:
            type: integer
            format: int32
        - name: bisPlayerId
          in: query
          description: A unique identifier for a player in the EBIS system
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProspectListRestObject'
  /api/v1/draft/prospects/{year}:
    get:
      tags:
        - Draft
      summary: View MLB Draft Prospects
      operationId: draftProspects_1
      parameters:
        - name: year
          in: path
          description: 'Year the player was drafted. Format: 2000'
          required: true
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          description: Number of results to return
          required: false
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: The pointer to start for a return set; used for pagination
          required: false
          schema:
            type: integer
            format: int32
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: order
          in: query
          description: The order of sorting, ascending or descending
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - name: sortBy
          in: query
          description: Sort the set of data by the specified field
          required: false
          schema:
            type: string
        - name: drafted
          in: query
          description: Whether or not the players been drafted
          required: false
          schema:
            type: boolean
        - name: round
          in: query
          description: Round in which a player was drafted
          required: false
          schema:
            type: string
        - name: name
          in: query
          description: Filter players by the first letter of their name using using the specific character
          required: false
          schema:
            type: string
        - name: school
          in: query
          description: Filter players by the first letter of their school using using the specific character
          required: false
          schema:
            type: string
        - name: position
          in: query
          description: 'Position number. Format: 1, 2, 3, etc'
          required: false
          schema:
            $ref: '#/components/schemas/BaseballPosition'
        - name: team
          in: query
          description: 'Unique Team Code. Format: tor, nya, etc'
          required: false
          schema:
            type: string
        - name: teamId
          in: query
          description: 'Unique Team Identifier. Format: 141, 147, etc'
          required: false
          schema:
            type: integer
            format: int32
        - name: state
          in: query
          description: 'State where the venue is located. Format: Ohio'
          required: false
          schema:
            type: string
        - name: country
          in: query
          description: Filter players by their home country
          required: false
          schema:
            type: string
        - name: playerId
          in: query
          description: A unique identifier for a player
          required: false
          schema:
            type: integer
            format: int32
        - name: bisPlayerId
          in: query
          description: A unique identifier for a player in the EBIS system
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProspectListRestObject'
  /api/v1/draft:
    get:
      tags:
        - Draft
      summary: View MLB Drafted Players
      operationId: draftPicks
      parameters:
        - name: year
          in: path
          description: 'Year the player was drafted. Format: 2000'
          required: true
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          description: Number of results to return
          required: false
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: The pointer to start for a return set; used for pagination
          required: false
          schema:
            type: integer
            format: int32
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: order
          in: query
          description: The order of sorting, ascending or descending
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - name: sortBy
          in: query
          description: Sort the set of data by the specified field
          required: false
          schema:
            type: string
        - name: drafted
          in: query
          description: Whether or not the players been drafted
          required: false
          schema:
            type: boolean
        - name: round
          in: query
          description: Round in which a player was drafted
          required: false
          schema:
            type: string
        - name: name
          in: query
          description: Filter players by the first letter of their name using using the specific character
          required: false
          schema:
            type: string
        - name: school
          in: query
          description: Filter players by the first letter of their school using using the specific character
          required: false
          schema:
            type: string
        - name: position
          in: query
          description: 'Position number. Format: 1, 2, 3, etc'
          required: false
          schema:
            $ref: '#/components/schemas/BaseballPosition'
        - name: team
          in: query
          description: 'Unique Team Code. Format: tor, nya, etc'
          required: false
          schema:
            type: string
        - name: teamId
          in: query
          description: 'Unique Team Identifier. Format: 141, 147, etc'
          required: false
          schema:
            type: integer
            format: int32
        - name: state
          in: query
          description: 'State where the venue is located. Format: Ohio'
          required: false
          schema:
            type: string
        - name: country
          in: query
          description: Filter players by their home country
          required: false
          schema:
            type: string
        - name: playerId
          in: query
          description: A unique identifier for a player
          required: false
          schema:
            type: integer
            format: int32
        - name: bisPlayerId
          in: query
          description: A unique identifier for a player in the EBIS system
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BaseballDraftListRestObject'
  /api/v1/draft/{year}:
    get:
      tags:
        - Draft
      summary: View MLB Drafted Players
      operationId: draftPicks_1
      parameters:
        - name: year
          in: path
          description: 'Year the player was drafted. Format: 2000'
          required: true
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          description: Number of results to return
          required: false
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: The pointer to start for a return set; used for pagination
          required: false
          schema:
            type: integer
            format: int32
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: order
          in: query
          description: The order of sorting, ascending or descending
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - name: sortBy
          in: query
          description: Sort the set of data by the specified field
          required: false
          schema:
            type: string
        - name: drafted
          in: query
          description: Whether or not the players been drafted
          required: false
          schema:
            type: boolean
        - name: round
          in: query
          description: Round in which a player was drafted
          required: false
          schema:
            type: string
        - name: name
          in: query
          description: Filter players by the first letter of their name using using the specific character
          required: false
          schema:
            type: string
        - name: school
          in: query
          description: Filter players by the first letter of their school using using the specific character
          required: false
          schema:
            type: string
        - name: position
          in: query
          description: 'Position number. Format: 1, 2, 3, etc'
          required: false
          schema:
            $ref: '#/components/schemas/BaseballPosition'
        - name: team
          in: query
          description: 'Unique Team Code. Format: tor, nya, etc'
          required: false
          schema:
            type: string
        - name: teamId
          in: query
          description: 'Unique Team Identifier. Format: 141, 147, etc'
          required: false
          schema:
            type: integer
            format: int32
        - name: state
          in: query
          description: 'State where the venue is located. Format: Ohio'
          required: false
          schema:
            type: string
        - name: country
          in: query
          description: Filter players by their home country
          required: false
          schema:
            type: string
        - name: playerId
          in: query
          description: A unique identifier for a player
          required: false
          schema:
            type: integer
            format: int32
        - name: bisPlayerId
          in: query
          description: A unique identifier for a player in the EBIS system
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BaseballDraftListRestObject'
  /api/v1/divisions:
    get:
      tags:
        - Division
      summary: Get division information
      description: This endpoint allows you to pull divisions
      operationId: divisions
      parameters:
        - name: divisionId
          in: path
          description: Unique Division Identifier
          required: true
          schema:
            type: integer
            format: int32
        - name: includeInactive
          in: query
          description: Whether or not to include inactive
          required: false
          schema:
            type: boolean
            default: false
        - name: leagueId
          in: query
          description: Unique League Identifier
          required: false
          schema:
            type: integer
            format: int32
        - name: sportId
          in: query
          description: Top level organization of a sport
          required: false
          schema:
            type: integer
            format: int32
        - name: season
          in: query
          description: Season of play
          required: false
          schema:
            type: string
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DivisionsRestObject'
  /api/v1/divisions/{divisionId}:
    get:
      tags:
        - Division
      summary: Get division information
      description: This endpoint allows you to pull divisions
      operationId: divisions_1
      parameters:
        - name: divisionId
          in: path
          description: Unique Division Identifier
          required: true
          schema:
            type: integer
            format: int32
        - name: includeInactive
          in: query
          description: Whether or not to include inactive
          required: false
          schema:
            type: boolean
            default: false
        - name: leagueId
          in: query
          description: Unique League Identifier
          required: false
          schema:
            type: integer
            format: int32
        - name: sportId
          in: query
          description: Top level organization of a sport
          required: false
          schema:
            type: integer
            format: int32
        - name: season
          in: query
          description: Season of play
          required: false
          schema:
            type: string
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DivisionsRestObject'
  /api/v1/conferences:
    get:
      tags:
        - Conference
      summary: View conference info
      operationId: conferences
      parameters:
        - name: conferenceId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: season
          in: query
          description: Season of play
          required: false
          schema:
            type: string
        - name: includeInactive
          in: query
          required: false
          schema:
            type: boolean
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ConferencesRestObject'
  /api/v1/conferences/{conferenceId}:
    get:
      tags:
        - Conference
      summary: View conference info
      operationId: conferences_1
      parameters:
        - name: conferenceId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: season
          in: query
          description: Season of play
          required: false
          schema:
            type: string
        - name: includeInactive
          in: query
          required: false
          schema:
            type: boolean
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ConferencesRestObject'
  /api/v1/coachingVideoTypes:
    get:
      tags:
        - Misc
      summary: List all coaching video types
      operationId: coachingVideoTypes
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
  /api/v1/broadcasters:
    get:
      tags:
        - Broadcast
      summary: Get All Active Broadcasters
      operationId: getAllBroadcasters
      parameters:
        - name: activeStatus
          in: query
          description: 'Current status of the broadcaster. Format: Active = y, inactive = n, both = b'
          required: false
          schema:
            $ref: '#/components/schemas/BroadcasterActiveStatusEnum'
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BroadcasterRestObject'
  /api/v1/broadcast:
    get:
      tags:
        - Broadcast
      summary: Get Broadcasters
      operationId: getBroadcasts
      parameters:
        - name: broadcasterIds
          in: query
          description: All of the broadcast details
          required: true
          schema:
            type: array
            items:
              type: integer
              format: int32
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BroadcasterRestObject'
  /api/v1/broadcastAvailability:
    get:
      tags:
        - Misc
      summary: View broadcast availability options
      operationId: broadcastAvailabilityTypes
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BroadcastAvailabilityRestObject'
  /api/v1/batTracking/game/{gamePk}/{playId}:
    get:
      tags:
        - Bat Tracking
      summary: View Bat Tracking Data by playId and gameId
      description: This endpoint allows you to pull bat tracking data by gameId and playId
      operationId: batTracking
      parameters:
        - name: gamePk
          in: path
          description: Unique Primary Key Representing a Game
          required: true
          schema:
            type: integer
            format: int32
        - name: playId
          in: path
          description: Unique play identifier
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatTrackingRestObject'
      security:
        - basicAuth: []
        - bearerAuth: []
  /api/v1/baseballStats:
    get:
      tags:
        - Misc
      summary: List all baseball stats
      operationId: baseballStats
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BaseballStatsTypeRestObject'
  /api/v1/awards/{awardId}/recipients:
    get:
      tags:
        - Awards
      summary: View recipients of an award
      operationId: awardRecipients
      parameters:
        - name: awardId
          in: path
          description: Unique Award Identifier. Available awards in /api/v1/awards
          required: true
          schema:
            type: string
        - name: season
          in: query
          description: Season of play
          required: false
          schema:
            type: string
        - name: sportId
          in: query
          description: Top level organization of a sport
          required: false
          schema:
            type: integer
            format: int32
        - name: leagueId
          in: query
          description: Comma delimited list of Unique league identifiers
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: fields
          in: query
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AwardsRestObject'
  /api/v1/awards:
    get:
      tags:
        - Awards
      summary: View awards info
      operationId: awards
      parameters:
        - name: awardId
          in: path
          description: Unique Award Identifier. Available awards in /api/v1/awards
          required: true
          schema:
            type: string
        - name: orgId
          in: query
          description: Comma delimited list of top level organizations of a sport
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AwardsRestObject'
  /api/v1/awards/{awardId}:
    get:
      tags:
        - Awards
      summary: View awards info
      operationId: awards_1
      parameters:
        - name: awardId
          in: path
          description: Unique Award Identifier. Available awards in /api/v1/awards
          required: true
          schema:
            type: string
        - name: orgId
          in: query
          description: Comma delimited list of top level organizations of a sport
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AwardsRestObject'
  /api/v1/attendance:
    get:
      tags:
        - Attendance
      summary: Get team attendance
      operationId: getTeamAttendance
      parameters:
        - name: teamId
          in: query
          description: 'Unique Team Identifier. Format: 141, 147, etc'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: leagueId
          in: query
          description: Comma delimited list of Unique league identifiers
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
        - name: season
          in: query
          description: Comma delimited list of Seasons of play
          required: false
          schema:
            type: array
            items:
              type: string
        - name: leagueListId
          in: query
          description: Unique League List Identifier
          required: false
          schema:
            $ref: '#/components/schemas/LeagueListsEnum'
        - name: gameType
          in: query
          description: Type of Game. Available types in /api/v1/gameTypes
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/GameTypeEnum'
        - name: date
          in: query
          description: 'Date of Game. Format: YYYY-MM-DD'
          required: false
          schema:
            type: string
            format: date
        - name: startDate
          in: query
          description: 'Start date for range of data (must be used with end date). Format: MM/DD/YYYY'
          required: false
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          description: 'End date for range of data (must be used with start date). Format: MM/DD/YYYY'
          required: false
          schema:
            type: string
            format: date
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AttendanceRestObject'
  /api/v1/analytics/guids:
    get:
      tags:
        - analytics
      summary: 'Get the GUIDs (plays) for a specific game. '
      operationId: gameGuidsFromPostgresRange
      parameters:
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: gameModeId
          in: query
          description: 'Statcast game mode. Format: 0 = Batting Practive, 1 = Warmup 2 = Live'
          required: false
          schema:
            type: integer
            format: int32
        - name: isPitch
          in: query
          description: If there was a pitch
          required: false
          schema:
            type: boolean
        - name: isHit
          in: query
          description: If there was a hit ball tracked
          required: false
          schema:
            type: boolean
        - name: isPickoff
          in: query
          description: If there was a pickoff
          required: false
          schema:
            type: boolean
        - name: isNonStatcast
          in: query
          description: If non statcast games need to be included
          required: false
          schema:
            type: boolean
        - name: gamedayType
          in: query
          description: Indicates the level of Gameday (tracking, play-by-play, linescore, etc...)
          required: false
          schema:
            type: string
        - name: hasUpdates
          in: query
          description: True if updated by an auditor
          required: false
          schema:
            type: boolean
        - name: lastPlayTime
          in: query
          description: 'Returns all data that was created after the specified timestamp. Format: YYYY-MM-DDTHH:MM:SSZ'
          required: false
          schema:
            type: string
            format: date-time
        - name: lastUpdatedTime
          in: query
          description: 'Return data updated since a specified date. Format: YYYY-MM-DDTHH:MM:SSZ'
          required: false
          schema:
            type: string
            format: date-time
        - name: lastMetricsUpdatedTime
          in: query
          description: 'Return data updated since a specified date. Format: YYYY-MM-DDTHH:MM:SSZ'
          required: false
          schema:
            type: string
            format: date-time
        - name: lastAuditUpdatedTime
          in: query
          description: 'Return data updated since a specified date. Format: YYYY-MM-DDTHH:MM:SSZ'
          required: false
          schema:
            type: string
            format: date-time
        - name: lastVideoUpdatedTime
          in: query
          description: The last time SportyBot video was updated
          required: false
          schema:
            type: string
            format: date-time
        - name: gameDate
          in: query
          description: 'Date of Game. Format: YYYY-MM-DD'
          required: false
          schema:
            type: string
            format: date
        - name: sportId
          in: query
          description: Top level organization of a sport
          required: false
          schema:
            type: integer
            format: int32
        - name: gameType
          in: query
          description: Type of Game. Available types in /api/v1/gameTypes
          required: false
          schema:
            $ref: '#/components/schemas/GameTypeEnum'
        - name: trackingSystemOwner
          in: query
          description: Owner of the tracking system
          required: false
          schema:
            $ref: '#/components/schemas/TrackingSystemOwner'
        - name: season
          in: query
          description: Season of play
          required: false
          schema:
            type: string
        - name: sortBy
          in: query
          description: Sort the set of data by the specified field
          required: false
          schema:
            type: string
        - name: limit
          in: query
          description: Number of results to return
          required: false
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: The pointer to start for a return set; used for pagination
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/AnalyticsPlayMetadataWrapperRestObject'
      security:
        - basicAuth: []
        - bearerAuth: []
  /api/v1/analytics/game:
    get:
      tags:
        - analytics
      summary: Get all games by updated date.
      operationId: gameGuidsFromPostgresRangeByGame
      parameters:
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: gameModeId
          in: query
          description: 'Statcast game mode. Format: 0 = Batting Practive, 1 = Warmup 2 = Live'
          required: false
          schema:
            type: integer
            format: int32
        - name: isPitch
          in: query
          description: If there was a pitch
          required: false
          schema:
            type: boolean
        - name: isHit
          in: query
          description: If there was a hit ball tracked
          required: false
          schema:
            type: boolean
        - name: isPickoff
          in: query
          description: If there was a pickoff
          required: false
          schema:
            type: boolean
        - name: isNonStatcast
          in: query
          description: If non statcast games need to be included
          required: false
          schema:
            type: boolean
        - name: gamedayType
          in: query
          description: Indicates the level of Gameday (tracking, play-by-play, linescore, etc...)
          required: false
          schema:
            type: string
        - name: hasUpdates
          in: query
          description: True if updated by an auditor
          required: false
          schema:
            type: boolean
        - name: lastPlayTime
          in: query
          description: 'Returns all data that was created after the specified timestamp. Format: YYYY-MM-DDTHH:MM:SSZ'
          required: false
          schema:
            type: string
            format: date-time
        - name: lastVideoUpdatedTime
          in: query
          description: The last time SportyBot video was updated
          required: false
          schema:
            type: string
            format: date-time
        - name: lastUpdatedTime
          in: query
          description: 'Return data updated since a specified date. Format: YYYY-MM-DDTHH:MM:SSZ'
          required: false
          schema:
            type: string
            format: date-time
        - name: lastMetricsUpdatedTime
          in: query
          description: 'Return data updated since a specified date. Format: YYYY-MM-DDTHH:MM:SSZ'
          required: false
          schema:
            type: string
            format: date-time
        - name: lastAuditUpdatedTime
          in: query
          description: 'Return data updated since a specified date. Format: YYYY-MM-DDTHH:MM:SSZ'
          required: false
          schema:
            type: string
            format: date-time
        - name: gameDate
          in: query
          description: 'Date of Game. Format: YYYY-MM-DD'
          required: false
          schema:
            type: string
            format: date
        - name: sportId
          in: query
          description: Top level organization of a sport
          required: false
          schema:
            type: integer
            format: int32
        - name: gameType
          in: query
          description: Type of Game. Available types in /api/v1/gameTypes
          required: false
          schema:
            $ref: '#/components/schemas/GameTypeEnum'
        - name: season
          in: query
          description: Season of play
          required: false
          schema:
            type: string
        - name: trackingSystemOwner
          in: query
          description: Owner of the tracking system
          required: false
          schema:
            $ref: '#/components/schemas/TrackingSystemOwner'
        - name: sortBy
          in: query
          description: Sort the set of data by the specified field
          required: false
          schema:
            type: string
        - name: limit
          in: query
          description: Number of results to return
          required: false
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: The pointer to start for a return set; used for pagination
          required: false
          schema:
            type: integer
            format: int32
        - name: scheduleEventTypes
          in: query
          description: Comma delimited list of type of event types
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/ScheduleEventTypes'
      responses:
        '200':
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/AnalyticsGameMetadataWrapperRestObject'
      security:
        - basicAuth: []
        - bearerAuth: []
  /api/v1/achievementStatuses:
    get:
      tags:
        - Milestones
      summary: View available achievementStatus options
      operationId: achievementStatuses
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MilestoneAchievementType'
  /api/v1.1/game/{game_pk}/feed/live:
    get:
      tags:
        - Game
      summary: Get live game status.
      description: 'This API can return very large payloads.  It is STRONGLY recommended that clients ask for diffs and use "Accept-Encoding: gzip" header.'
      operationId: liveGameV1
      parameters:
        - name: game_pk
          in: path
          description: Unique Primary Key Representing a Game
          required: true
          schema:
            type: integer
            format: int32
        - name: timecode
          in: query
          description: 'Use this parameter to return a snapshot of the data at the specified time. Format: YYYYMMDD_HHMMSS'
          required: false
          schema:
            type: string
        - name: fields
          in: query
          description: 'Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: inclusiveTimecode
          in: query
          description: True to include plays that happen before or at the specified timecode
          required: false
          schema:
            type: boolean
        - name: accent
          in: query
          description: Boolean value to specify wanting a person's name with accents or without
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/BaseballGameRestObject'
  /api/v1.1/game/{game_pk}/feed/live/timestamps:
    get:
      tags:
        - Game
      summary: Retrieve all of the play timestamps for a game.
      description: This can be used for replaying games.  Endpoint returns all of the timecodes that can be used with diffs for /v1/game/{game_pk}/feed/live
      operationId: liveTimestampv11
      parameters:
        - name: game_pk
          in: path
          description: Unique Primary Key Representing a Game
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                type: string
  /api/v1.1/game/{game_pk}/feed/live/diffPatch:
    get:
      tags:
        - Game
      summary: Get live game status diffPatch.
      description: 'This endpoint allows comparison of game files and shows any differences/discrepancies between the two<br/><br/><b>Diff/Patch System:</b> startTimecode and endTimecode can be used for getting diffs.<br/>Expected usage:  <br/> 1) Request full payload by not passing startTimecode or endTimecode.  This will return the most recent game state.<br/> 2) Find the latest timecode in this response.  <br/> 3) Wait X seconds<br/> 4) Use the timecode from 2 as the startTimecode.  This will give you a diff of everything that has happened since startTimecode.  <br/> 5) If no data is returned, wait X seconds and do the same request.  <br/> 6) If data is returned, get a new timeStamp from the response, and use that for the next call as startTimecode.'
      operationId: liveGameDiffPatchV1
      parameters:
        - name: game_pk
          in: path
          description: Unique Primary Key Representing a Game
          required: true
          schema:
            type: integer
            format: int32
        - name: startTimecode
          in: query
          description: 'Start time code will give you everything since that time. Format: MMDDYYYY_HHMMSS'
          required: false
          schema:
            type: string
        - name: endTimecode
          in: query
          description: 'End time code will give you a snapshot at that specific time. Format: MMDDYYYY_HHMMSS'
          required: false
          schema:
            type: string
        - name: accent
          in: query
          description: Boolean value to specify wanting a person's name with accents or without
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                type: string
